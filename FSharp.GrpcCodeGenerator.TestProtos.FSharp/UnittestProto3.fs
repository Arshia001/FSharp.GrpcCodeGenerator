// <auto-generated>
//     Generated by the F# GRPC code generator. DO NOT EDIT!
//     source: unittest_proto3.proto
// </auto-generated>
namespace rec FSharp.GrpcCodeGenerator.TestProtos.FSharp
#nowarn "40"
module UnittestProto3Reflection =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestAllTypes_Descriptor() = Descriptor().MessageTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestAllTypes_NestedMessage_Descriptor() = TestAllTypes_Descriptor().NestedTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal NestedTestAllTypes_Descriptor() = Descriptor().MessageTypes.[1]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestDeprecatedFields_Descriptor() = Descriptor().MessageTypes.[2]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal ForeignMessage_Descriptor() = Descriptor().MessageTypes.[3]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestReservedFields_Descriptor() = Descriptor().MessageTypes.[4]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestForeignNested_Descriptor() = Descriptor().MessageTypes.[5]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestReallyLargeTagNumber_Descriptor() = Descriptor().MessageTypes.[6]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestRecursiveMessage_Descriptor() = Descriptor().MessageTypes.[7]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestMutualRecursionA_Descriptor() = Descriptor().MessageTypes.[8]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestMutualRecursionB_Descriptor() = Descriptor().MessageTypes.[9]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestEnumAllowAlias_Descriptor() = Descriptor().MessageTypes.[10]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestCamelCaseFieldNames_Descriptor() = Descriptor().MessageTypes.[11]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestFieldOrderings_Descriptor() = Descriptor().MessageTypes.[12]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestFieldOrderings_NestedMessage_Descriptor() = TestFieldOrderings_Descriptor().NestedTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal SparseEnumMessage_Descriptor() = Descriptor().MessageTypes.[13]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal OneString_Descriptor() = Descriptor().MessageTypes.[14]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal MoreString_Descriptor() = Descriptor().MessageTypes.[15]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal OneBytes_Descriptor() = Descriptor().MessageTypes.[16]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal MoreBytes_Descriptor() = Descriptor().MessageTypes.[17]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Int32Message_Descriptor() = Descriptor().MessageTypes.[18]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Uint32Message_Descriptor() = Descriptor().MessageTypes.[19]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Int64Message_Descriptor() = Descriptor().MessageTypes.[20]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Uint64Message_Descriptor() = Descriptor().MessageTypes.[21]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal BoolMessage_Descriptor() = Descriptor().MessageTypes.[22]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestOneof_Descriptor() = Descriptor().MessageTypes.[23]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestPackedTypes_Descriptor() = Descriptor().MessageTypes.[24]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestUnpackedTypes_Descriptor() = Descriptor().MessageTypes.[25]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestRepeatedScalarDifferentTagSizes_Descriptor() = Descriptor().MessageTypes.[26]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestCommentInjectionMessage_Descriptor() = Descriptor().MessageTypes.[27]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FooRequest_Descriptor() = Descriptor().MessageTypes.[28]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FooResponse_Descriptor() = Descriptor().MessageTypes.[29]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FooClientMessage_Descriptor() = Descriptor().MessageTypes.[30]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FooServerMessage_Descriptor() = Descriptor().MessageTypes.[31]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal BarRequest_Descriptor() = Descriptor().MessageTypes.[32]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal BarResponse_Descriptor() = Descriptor().MessageTypes.[33]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal TestEmptyMessage_Descriptor() = Descriptor().MessageTypes.[34]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal CommentMessage_Descriptor() = Descriptor().MessageTypes.[35]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal CommentMessage_NestedCommentMessage_Descriptor() = CommentMessage_Descriptor().NestedTypes.[0]
    let private descriptorBackingField: global.System.Lazy<global.Google.Protobuf.Reflection.FileDescriptor> =
        let descriptorData = global.System.Convert.FromBase64String("\
            ChV1bml0dGVzdF9wcm90bzMucHJvdG8SEnByb3RvYnVmX3VuaXR0ZXN0MxocdW5pdHRlc3RfaW1wb3J0\
            X3Byb3RvMy5wcm90byKrFgoMVGVzdEFsbFR5cGVzEiEKDHNpbmdsZV9pbnQzMhgBIAEoBVILc2luZ2xl\
            SW50MzISIQoMc2luZ2xlX2ludDY0GAIgASgDUgtzaW5nbGVJbnQ2NBIjCg1zaW5nbGVfdWludDMyGAMg\
            ASgNUgxzaW5nbGVVaW50MzISIwoNc2luZ2xlX3VpbnQ2NBgEIAEoBFIMc2luZ2xlVWludDY0EiMKDXNp\
            bmdsZV9zaW50MzIYBSABKBFSDHNpbmdsZVNpbnQzMhIjCg1zaW5nbGVfc2ludDY0GAYgASgSUgxzaW5n\
            bGVTaW50NjQSJQoOc2luZ2xlX2ZpeGVkMzIYByABKAdSDXNpbmdsZUZpeGVkMzISJQoOc2luZ2xlX2Zp\
            eGVkNjQYCCABKAZSDXNpbmdsZUZpeGVkNjQSJwoPc2luZ2xlX3NmaXhlZDMyGAkgASgPUg5zaW5nbGVT\
            Zml4ZWQzMhInCg9zaW5nbGVfc2ZpeGVkNjQYCiABKBBSDnNpbmdsZVNmaXhlZDY0EiEKDHNpbmdsZV9m\
            bG9hdBgLIAEoAlILc2luZ2xlRmxvYXQSIwoNc2luZ2xlX2RvdWJsZRgMIAEoAVIMc2luZ2xlRG91Ymxl\
            Eh8KC3NpbmdsZV9ib29sGA0gASgIUgpzaW5nbGVCb29sEiMKDXNpbmdsZV9zdHJpbmcYDiABKAlSDHNp\
            bmdsZVN0cmluZxIhCgxzaW5nbGVfYnl0ZXMYDyABKAxSC3NpbmdsZUJ5dGVzEmIKFXNpbmdsZV9uZXN0\
            ZWRfbWVzc2FnZRgSIAEoCzIuLnByb3RvYnVmX3VuaXR0ZXN0My5UZXN0QWxsVHlwZXMuTmVzdGVkTWVz\
            c2FnZVITc2luZ2xlTmVzdGVkTWVzc2FnZRJYChZzaW5nbGVfZm9yZWlnbl9tZXNzYWdlGBMgASgLMiIu\
            cHJvdG9idWZfdW5pdHRlc3QzLkZvcmVpZ25NZXNzYWdlUhRzaW5nbGVGb3JlaWduTWVzc2FnZRJbChVz\
            aW5nbGVfaW1wb3J0X21lc3NhZ2UYFCABKAsyJy5wcm90b2J1Zl91bml0dGVzdF9pbXBvcnQuSW1wb3J0\
            TWVzc2FnZVITc2luZ2xlSW1wb3J0TWVzc2FnZRJZChJzaW5nbGVfbmVzdGVkX2VudW0YFSABKA4yKy5w\
            cm90b2J1Zl91bml0dGVzdDMuVGVzdEFsbFR5cGVzLk5lc3RlZEVudW1SEHNpbmdsZU5lc3RlZEVudW0S\
            TwoTc2luZ2xlX2ZvcmVpZ25fZW51bRgWIAEoDjIfLnByb3RvYnVmX3VuaXR0ZXN0My5Gb3JlaWduRW51\
            bVIRc2luZ2xlRm9yZWlnbkVudW0SUgoSc2luZ2xlX2ltcG9ydF9lbnVtGBcgASgOMiQucHJvdG9idWZf\
            dW5pdHRlc3RfaW1wb3J0LkltcG9ydEVudW1SEHNpbmdsZUltcG9ydEVudW0Sbgocc2luZ2xlX3B1Ymxp\
            Y19pbXBvcnRfbWVzc2FnZRgaIAEoCzItLnByb3RvYnVmX3VuaXR0ZXN0X2ltcG9ydC5QdWJsaWNJbXBv\
            cnRNZXNzYWdlUhlzaW5nbGVQdWJsaWNJbXBvcnRNZXNzYWdlEiUKDnJlcGVhdGVkX2ludDMyGB8gAygF\
            Ug1yZXBlYXRlZEludDMyEiUKDnJlcGVhdGVkX2ludDY0GCAgAygDUg1yZXBlYXRlZEludDY0EicKD3Jl\
            cGVhdGVkX3VpbnQzMhghIAMoDVIOcmVwZWF0ZWRVaW50MzISJwoPcmVwZWF0ZWRfdWludDY0GCIgAygE\
            Ug5yZXBlYXRlZFVpbnQ2NBInCg9yZXBlYXRlZF9zaW50MzIYIyADKBFSDnJlcGVhdGVkU2ludDMyEicK\
            D3JlcGVhdGVkX3NpbnQ2NBgkIAMoElIOcmVwZWF0ZWRTaW50NjQSKQoQcmVwZWF0ZWRfZml4ZWQzMhgl\
            IAMoB1IPcmVwZWF0ZWRGaXhlZDMyEikKEHJlcGVhdGVkX2ZpeGVkNjQYJiADKAZSD3JlcGVhdGVkRml4\
            ZWQ2NBIrChFyZXBlYXRlZF9zZml4ZWQzMhgnIAMoD1IQcmVwZWF0ZWRTZml4ZWQzMhIrChFyZXBlYXRl\
            ZF9zZml4ZWQ2NBgoIAMoEFIQcmVwZWF0ZWRTZml4ZWQ2NBIlCg5yZXBlYXRlZF9mbG9hdBgpIAMoAlIN\
            cmVwZWF0ZWRGbG9hdBInCg9yZXBlYXRlZF9kb3VibGUYKiADKAFSDnJlcGVhdGVkRG91YmxlEiMKDXJl\
            cGVhdGVkX2Jvb2wYKyADKAhSDHJlcGVhdGVkQm9vbBInCg9yZXBlYXRlZF9zdHJpbmcYLCADKAlSDnJl\
            cGVhdGVkU3RyaW5nEiUKDnJlcGVhdGVkX2J5dGVzGC0gAygMUg1yZXBlYXRlZEJ5dGVzEmYKF3JlcGVh\
            dGVkX25lc3RlZF9tZXNzYWdlGDAgAygLMi4ucHJvdG9idWZfdW5pdHRlc3QzLlRlc3RBbGxUeXBlcy5O\
            ZXN0ZWRNZXNzYWdlUhVyZXBlYXRlZE5lc3RlZE1lc3NhZ2USXAoYcmVwZWF0ZWRfZm9yZWlnbl9tZXNz\
            YWdlGDEgAygLMiIucHJvdG9idWZfdW5pdHRlc3QzLkZvcmVpZ25NZXNzYWdlUhZyZXBlYXRlZEZvcmVp\
            Z25NZXNzYWdlEl8KF3JlcGVhdGVkX2ltcG9ydF9tZXNzYWdlGDIgAygLMicucHJvdG9idWZfdW5pdHRl\
            c3RfaW1wb3J0LkltcG9ydE1lc3NhZ2VSFXJlcGVhdGVkSW1wb3J0TWVzc2FnZRJdChRyZXBlYXRlZF9u\
            ZXN0ZWRfZW51bRgzIAMoDjIrLnByb3RvYnVmX3VuaXR0ZXN0My5UZXN0QWxsVHlwZXMuTmVzdGVkRW51\
            bVIScmVwZWF0ZWROZXN0ZWRFbnVtElMKFXJlcGVhdGVkX2ZvcmVpZ25fZW51bRg0IAMoDjIfLnByb3Rv\
            YnVmX3VuaXR0ZXN0My5Gb3JlaWduRW51bVITcmVwZWF0ZWRGb3JlaWduRW51bRJWChRyZXBlYXRlZF9p\
            bXBvcnRfZW51bRg1IAMoDjIkLnByb3RvYnVmX3VuaXR0ZXN0X2ltcG9ydC5JbXBvcnRFbnVtUhJyZXBl\
            YXRlZEltcG9ydEVudW0ScgoecmVwZWF0ZWRfcHVibGljX2ltcG9ydF9tZXNzYWdlGDYgAygLMi0ucHJv\
            dG9idWZfdW5pdHRlc3RfaW1wb3J0LlB1YmxpY0ltcG9ydE1lc3NhZ2VSG3JlcGVhdGVkUHVibGljSW1w\
            b3J0TWVzc2FnZRIjCgxvbmVvZl91aW50MzIYbyABKA1IAFILb25lb2ZVaW50MzISYgoUb25lb2ZfbmVz\
            dGVkX21lc3NhZ2UYcCABKAsyLi5wcm90b2J1Zl91bml0dGVzdDMuVGVzdEFsbFR5cGVzLk5lc3RlZE1l\
            c3NhZ2VIAFISb25lb2ZOZXN0ZWRNZXNzYWdlEiMKDG9uZW9mX3N0cmluZxhxIAEoCUgAUgtvbmVvZlN0\
            cmluZxIhCgtvbmVvZl9ieXRlcxhyIAEoDEgAUgpvbmVvZkJ5dGVzGh8KDU5lc3RlZE1lc3NhZ2USDgoC\
            YmIYASABKAVSAmJiIlYKCk5lc3RlZEVudW0SGwoXTkVTVEVEX0VOVU1fVU5TUEVDSUZJRUQQABIHCgNG\
            T08QARIHCgNCQVIQAhIHCgNCQVoQAxIQCgNORUcQ////////////AUINCgtvbmVvZl9maWVsZCLdAQoS\
            TmVzdGVkVGVzdEFsbFR5cGVzEjwKBWNoaWxkGAEgASgLMiYucHJvdG9idWZfdW5pdHRlc3QzLk5lc3Rl\
            ZFRlc3RBbGxUeXBlc1IFY2hpbGQSOgoHcGF5bG9hZBgCIAEoCzIgLnByb3RvYnVmX3VuaXR0ZXN0My5U\
            ZXN0QWxsVHlwZXNSB3BheWxvYWQSTQoOcmVwZWF0ZWRfY2hpbGQYAyADKAsyJi5wcm90b2J1Zl91bml0\
            dGVzdDMuTmVzdGVkVGVzdEFsbFR5cGVzUg1yZXBlYXRlZENoaWxkIkUKFFRlc3REZXByZWNhdGVkRmll\
            bGRzEi0KEGRlcHJlY2F0ZWRfaW50MzIYASABKAVCAhgBUg9kZXByZWNhdGVkSW50MzIiHgoORm9yZWln\
            bk1lc3NhZ2USDAoBYxgBIAEoBVIBYyIwChJUZXN0UmVzZXJ2ZWRGaWVsZHNKBAgCEANKBAgPEBBKBAgJ\
            EAxSA2JhclIDYmF6ImoKEVRlc3RGb3JlaWduTmVzdGVkElUKDmZvcmVpZ25fbmVzdGVkGAEgASgLMi4u\
            cHJvdG9idWZfdW5pdHRlc3QzLlRlc3RBbGxUeXBlcy5OZXN0ZWRNZXNzYWdlUg1mb3JlaWduTmVzdGVk\
            IjsKGFRlc3RSZWFsbHlMYXJnZVRhZ051bWJlchIMCgFhGAEgASgFUgFhEhEKAmJiGP///38gASgFUgJi\
            YiJcChRUZXN0UmVjdXJzaXZlTWVzc2FnZRI2CgFhGAEgASgLMigucHJvdG9idWZfdW5pdHRlc3QzLlRl\
            c3RSZWN1cnNpdmVNZXNzYWdlUgFhEgwKAWkYAiABKAVSAWkiUAoUVGVzdE11dHVhbFJlY3Vyc2lvbkES\
            OAoCYmIYASABKAsyKC5wcm90b2J1Zl91bml0dGVzdDMuVGVzdE11dHVhbFJlY3Vyc2lvbkJSAmJiInUK\
            FFRlc3RNdXR1YWxSZWN1cnNpb25CEjYKAWEYASABKAsyKC5wcm90b2J1Zl91bml0dGVzdDMuVGVzdE11\
            dHVhbFJlY3Vyc2lvbkFSAWESJQoOb3B0aW9uYWxfaW50MzIYAiABKAVSDW9wdGlvbmFsSW50MzIiVAoS\
            VGVzdEVudW1BbGxvd0FsaWFzEj4KBXZhbHVlGAEgASgOMigucHJvdG9idWZfdW5pdHRlc3QzLlRlc3RF\
            bnVtV2l0aER1cFZhbHVlUgV2YWx1ZSL7AwoXVGVzdENhbWVsQ2FzZUZpZWxkTmFtZXMSJgoOUHJpbWl0\
            aXZlRmllbGQYASABKAVSDlByaW1pdGl2ZUZpZWxkEiAKC1N0cmluZ0ZpZWxkGAIgASgJUgtTdHJpbmdG\
            aWVsZBI9CglFbnVtRmllbGQYAyABKA4yHy5wcm90b2J1Zl91bml0dGVzdDMuRm9yZWlnbkVudW1SCUVu\
            dW1GaWVsZBJGCgxNZXNzYWdlRmllbGQYBCABKAsyIi5wcm90b2J1Zl91bml0dGVzdDMuRm9yZWlnbk1l\
            c3NhZ2VSDE1lc3NhZ2VGaWVsZBI2ChZSZXBlYXRlZFByaW1pdGl2ZUZpZWxkGAcgAygFUhZSZXBlYXRl\
            ZFByaW1pdGl2ZUZpZWxkEjAKE1JlcGVhdGVkU3RyaW5nRmllbGQYCCADKAlSE1JlcGVhdGVkU3RyaW5n\
            RmllbGQSTQoRUmVwZWF0ZWRFbnVtRmllbGQYCSADKA4yHy5wcm90b2J1Zl91bml0dGVzdDMuRm9yZWln\
            bkVudW1SEVJlcGVhdGVkRW51bUZpZWxkElYKFFJlcGVhdGVkTWVzc2FnZUZpZWxkGAogAygLMiIucHJv\
            dG9idWZfdW5pdHRlc3QzLkZvcmVpZ25NZXNzYWdlUhRSZXBlYXRlZE1lc3NhZ2VGaWVsZCL/AQoSVGVz\
            dEZpZWxkT3JkZXJpbmdzEhsKCW15X3N0cmluZxgLIAEoCVIIbXlTdHJpbmcSFQoGbXlfaW50GAEgASgD\
            UgVteUludBIZCghteV9mbG9hdBhlIAEoAlIHbXlGbG9hdBJpChVzaW5nbGVfbmVzdGVkX21lc3NhZ2UY\
            yAEgASgLMjQucHJvdG9idWZfdW5pdHRlc3QzLlRlc3RGaWVsZE9yZGVyaW5ncy5OZXN0ZWRNZXNzYWdl\
            UhNzaW5nbGVOZXN0ZWRNZXNzYWdlGi8KDU5lc3RlZE1lc3NhZ2USDgoCb28YAiABKANSAm9vEg4KAmJi\
            GAEgASgFUgJiYiJYChFTcGFyc2VFbnVtTWVzc2FnZRJDCgtzcGFyc2VfZW51bRgBIAEoDjIiLnByb3Rv\
            YnVmX3VuaXR0ZXN0My5UZXN0U3BhcnNlRW51bVIKc3BhcnNlRW51bSIfCglPbmVTdHJpbmcSEgoEZGF0\
            YRgBIAEoCVIEZGF0YSIgCgpNb3JlU3RyaW5nEhIKBGRhdGEYASADKAlSBGRhdGEiHgoIT25lQnl0ZXMS\
            EgoEZGF0YRgBIAEoDFIEZGF0YSIfCglNb3JlQnl0ZXMSEgoEZGF0YRgBIAEoDFIEZGF0YSIiCgxJbnQz\
            Mk1lc3NhZ2USEgoEZGF0YRgBIAEoBVIEZGF0YSIjCg1VaW50MzJNZXNzYWdlEhIKBGRhdGEYASABKA1S\
            BGRhdGEiIgoMSW50NjRNZXNzYWdlEhIKBGRhdGEYASABKANSBGRhdGEiIwoNVWludDY0TWVzc2FnZRIS\
            CgRkYXRhGAEgASgEUgRkYXRhIiEKC0Jvb2xNZXNzYWdlEhIKBGRhdGEYASABKAhSBGRhdGEikwEKCVRl\
            c3RPbmVvZhIZCgdmb29faW50GAEgASgFSABSBmZvb0ludBIfCgpmb29fc3RyaW5nGAIgASgJSABSCWZv\
            b1N0cmluZxJDCgtmb29fbWVzc2FnZRgDIAEoCzIgLnByb3RvYnVmX3VuaXR0ZXN0My5UZXN0QWxsVHlw\
            ZXNIAFIKZm9vTWVzc2FnZUIFCgNmb28i7gQKD1Rlc3RQYWNrZWRUeXBlcxIlCgxwYWNrZWRfaW50MzIY\
            WiADKAVCAhABUgtwYWNrZWRJbnQzMhIlCgxwYWNrZWRfaW50NjQYWyADKANCAhABUgtwYWNrZWRJbnQ2\
            NBInCg1wYWNrZWRfdWludDMyGFwgAygNQgIQAVIMcGFja2VkVWludDMyEicKDXBhY2tlZF91aW50NjQY\
            XSADKARCAhABUgxwYWNrZWRVaW50NjQSJwoNcGFja2VkX3NpbnQzMhheIAMoEUICEAFSDHBhY2tlZFNp\
            bnQzMhInCg1wYWNrZWRfc2ludDY0GF8gAygSQgIQAVIMcGFja2VkU2ludDY0EikKDnBhY2tlZF9maXhl\
            ZDMyGGAgAygHQgIQAVINcGFja2VkRml4ZWQzMhIpCg5wYWNrZWRfZml4ZWQ2NBhhIAMoBkICEAFSDXBh\
            Y2tlZEZpeGVkNjQSKwoPcGFja2VkX3NmaXhlZDMyGGIgAygPQgIQAVIOcGFja2VkU2ZpeGVkMzISKwoP\
            cGFja2VkX3NmaXhlZDY0GGMgAygQQgIQAVIOcGFja2VkU2ZpeGVkNjQSJQoMcGFja2VkX2Zsb2F0GGQg\
            AygCQgIQAVILcGFja2VkRmxvYXQSJwoNcGFja2VkX2RvdWJsZRhlIAMoAUICEAFSDHBhY2tlZERvdWJs\
            ZRIjCgtwYWNrZWRfYm9vbBhmIAMoCEICEAFSCnBhY2tlZEJvb2wSRAoLcGFja2VkX2VudW0YZyADKA4y\
            Hy5wcm90b2J1Zl91bml0dGVzdDMuRm9yZWlnbkVudW1CAhABUgpwYWNrZWRFbnVtIqgFChFUZXN0VW5w\
            YWNrZWRUeXBlcxIpCg51bnBhY2tlZF9pbnQzMhhaIAMoBUICEABSDXVucGFja2VkSW50MzISKQoOdW5w\
            YWNrZWRfaW50NjQYWyADKANCAhAAUg11bnBhY2tlZEludDY0EisKD3VucGFja2VkX3VpbnQzMhhcIAMo\
            DUICEABSDnVucGFja2VkVWludDMyEisKD3VucGFja2VkX3VpbnQ2NBhdIAMoBEICEABSDnVucGFja2Vk\
            VWludDY0EisKD3VucGFja2VkX3NpbnQzMhheIAMoEUICEABSDnVucGFja2VkU2ludDMyEisKD3VucGFj\
            a2VkX3NpbnQ2NBhfIAMoEkICEABSDnVucGFja2VkU2ludDY0Ei0KEHVucGFja2VkX2ZpeGVkMzIYYCAD\
            KAdCAhAAUg91bnBhY2tlZEZpeGVkMzISLQoQdW5wYWNrZWRfZml4ZWQ2NBhhIAMoBkICEABSD3VucGFj\
            a2VkRml4ZWQ2NBIvChF1bnBhY2tlZF9zZml4ZWQzMhhiIAMoD0ICEABSEHVucGFja2VkU2ZpeGVkMzIS\
            LwoRdW5wYWNrZWRfc2ZpeGVkNjQYYyADKBBCAhAAUhB1bnBhY2tlZFNmaXhlZDY0EikKDnVucGFja2Vk\
            X2Zsb2F0GGQgAygCQgIQAFINdW5wYWNrZWRGbG9hdBIrCg91bnBhY2tlZF9kb3VibGUYZSADKAFCAhAA\
            Ug51bnBhY2tlZERvdWJsZRInCg11bnBhY2tlZF9ib29sGGYgAygIQgIQAFIMdW5wYWNrZWRCb29sEkgK\
            DXVucGFja2VkX2VudW0YZyADKA4yHy5wcm90b2J1Zl91bml0dGVzdDMuRm9yZWlnbkVudW1CAhAAUgx1\
            bnBhY2tlZEVudW0inwIKI1Rlc3RSZXBlYXRlZFNjYWxhckRpZmZlcmVudFRhZ1NpemVzEikKEHJlcGVh\
            dGVkX2ZpeGVkMzIYDCADKAdSD3JlcGVhdGVkRml4ZWQzMhIlCg5yZXBlYXRlZF9pbnQzMhgNIAMoBVIN\
            cmVwZWF0ZWRJbnQzMhIqChByZXBlYXRlZF9maXhlZDY0GP4PIAMoBlIPcmVwZWF0ZWRGaXhlZDY0EiYK\
            DnJlcGVhdGVkX2ludDY0GP8PIAMoA1INcmVwZWF0ZWRJbnQ2NBInCg5yZXBlYXRlZF9mbG9hdBj+/w8g\
            AygCUg1yZXBlYXRlZEZsb2F0EikKD3JlcGVhdGVkX3VpbnQ2NBj//w8gAygEUg5yZXBlYXRlZFVpbnQ2\
            NCIrChtUZXN0Q29tbWVudEluamVjdGlvbk1lc3NhZ2USDAoBYRgBIAEoCVIBYSIMCgpGb29SZXF1ZXN0\
            Ig0KC0Zvb1Jlc3BvbnNlIhIKEEZvb0NsaWVudE1lc3NhZ2UiEgoQRm9vU2VydmVyTWVzc2FnZSIMCgpC\
            YXJSZXF1ZXN0Ig0KC0JhclJlc3BvbnNlIhIKEFRlc3RFbXB0eU1lc3NhZ2UiggEKDkNvbW1lbnRNZXNz\
            YWdlEhIKBHRleHQYASABKAlSBHRleHQaNwoUTmVzdGVkQ29tbWVudE1lc3NhZ2USHwoLbmVzdGVkX3Rl\
            eHQYASABKAlSCm5lc3RlZFRleHQiIwoRTmVzdGVkQ29tbWVudEVudW0SDgoKWkVST19WQUxVRRAAKlkK\
            C0ZvcmVpZ25FbnVtEhcKE0ZPUkVJR05fVU5TUEVDSUZJRUQQABIPCgtGT1JFSUdOX0ZPTxAEEg8KC0ZP\
            UkVJR05fQkFSEAUSDwoLRk9SRUlHTl9CQVoQBip1ChRUZXN0RW51bVdpdGhEdXBWYWx1ZRIoCiRURVNU\
            X0VOVU1fV0lUSF9EVVBfVkFMVUVfVU5TUEVDSUZJRUQQABIICgRGT08xEAESCAoEQkFSMRACEgcKA0JB\
            WhADEggKBEZPTzIQARIICgRCQVIyEAIaAhABKp0BCg5UZXN0U3BhcnNlRW51bRIgChxURVNUX1NQQVJT\
            RV9FTlVNX1VOU1BFQ0lGSUVEEAASDAoIU1BBUlNFX0EQexIOCghTUEFSU0VfQhCm5wMSDwoIU1BBUlNF\
            X0MQsrGABhIVCghTUEFSU0VfRBDx//////////8BEhUKCFNQQVJTRV9FELTe/P///////wESDAoIU1BB\
            UlNFX0cQAiodCgtDb21tZW50RW51bRIOCgpaRVJPX1ZBTFVFEAAynQEKC1Rlc3RTZXJ2aWNlEkYKA0Zv\
            bxIeLnByb3RvYnVmX3VuaXR0ZXN0My5Gb29SZXF1ZXN0Gh8ucHJvdG9idWZfdW5pdHRlc3QzLkZvb1Jl\
            c3BvbnNlEkYKA0JhchIeLnByb3RvYnVmX3VuaXR0ZXN0My5CYXJSZXF1ZXN0Gh8ucHJvdG9idWZfdW5p\
            dHRlc3QzLkJhclJlc3BvbnNlQjxCDVVuaXR0ZXN0UHJvdG+qAipGU2hhcnAuR3JwY0NvZGVHZW5lcmF0\
            b3IuVGVzdFByb3Rvcy5GU2hhcnBiBnByb3RvMw==")
        global.System.Lazy<_>(
            (fun () ->
                global.Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(
                    descriptorData,
                    [|
                        global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestImportPublicProto3Reflection.Descriptor()
                        global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestImportProto3Reflection.Descriptor()
                    |],
                    new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(
                        [|
                            typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>
                            typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestEnumWithDupValue>
                            typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestSparseEnum>
                            typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.CommentEnum>
                        |],
                        null,
                        [|
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Parser, [| "SingleInt32"; "SingleInt64"; "SingleUint32"; "SingleUint64"; "SingleSint32"; "SingleSint64"; "SingleFixed32"; "SingleFixed64"; "SingleSfixed32"; "SingleSfixed64"; "SingleFloat"; "SingleDouble"; "SingleBool"; "SingleString"; "SingleBytes"; "SingleNestedMessage"; "SingleForeignMessage"; "SingleImportMessage"; "SingleNestedEnum"; "SingleForeignEnum"; "SingleImportEnum"; "SinglePublicImportMessage"; "RepeatedInt32"; "RepeatedInt64"; "RepeatedUint32"; "RepeatedUint64"; "RepeatedSint32"; "RepeatedSint64"; "RepeatedFixed32"; "RepeatedFixed64"; "RepeatedSfixed32"; "RepeatedSfixed64"; "RepeatedFloat"; "RepeatedDouble"; "RepeatedBool"; "RepeatedString"; "RepeatedBytes"; "RepeatedNestedMessage"; "RepeatedForeignMessage"; "RepeatedImportMessage"; "RepeatedNestedEnum"; "RepeatedForeignEnum"; "RepeatedImportEnum"; "RepeatedPublicImportMessage"; "OneofUint32"; "OneofNestedMessage"; "OneofString"; "OneofBytes" |], [| "OneofField" |], [| typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedEnum> |], null, [| new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage.Parser, [| "Bb" |], null, null, null, null) |])
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes.Parser, [| "Child"; "Payload"; "RepeatedChild" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestDeprecatedFields>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestDeprecatedFields.Parser, [| "DeprecatedInt32" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage.Parser, [| "C" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestReservedFields>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestReservedFields.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestForeignNested>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestForeignNested.Parser, [| "ForeignNested" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestReallyLargeTagNumber>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestReallyLargeTagNumber.Parser, [| "A"; "Bb" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRecursiveMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRecursiveMessage.Parser, [| "A"; "I" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionA>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionA.Parser, [| "Bb" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionB>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionB.Parser, [| "A"; "OptionalInt32" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestEnumAllowAlias>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestEnumAllowAlias.Parser, [| "Value" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestCamelCaseFieldNames>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestCamelCaseFieldNames.Parser, [| "PrimitiveField"; "StringField"; "EnumField"; "MessageField"; "RepeatedPrimitiveField"; "RepeatedStringField"; "RepeatedEnumField"; "RepeatedMessageField" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings.Parser, [| "MyString"; "MyInt"; "MyFloat"; "SingleNestedMessage" |], null, null, null, [| new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings.Types.NestedMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings.Types.NestedMessage.Parser, [| "Oo"; "Bb" |], null, null, null, null) |])
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.SparseEnumMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.SparseEnumMessage.Parser, [| "SparseEnum" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.OneString>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.OneString.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.MoreString>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.MoreString.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.OneBytes>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.OneBytes.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.MoreBytes>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.MoreBytes.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.Int32Message>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.Int32Message.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.Uint32Message>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.Uint32Message.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.Int64Message>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.Int64Message.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.Uint64Message>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.Uint64Message.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BoolMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BoolMessage.Parser, [| "Data" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Parser, [| "FooInt"; "FooString"; "FooMessage" |], [| "Foo" |], null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestPackedTypes>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestPackedTypes.Parser, [| "PackedInt32"; "PackedInt64"; "PackedUint32"; "PackedUint64"; "PackedSint32"; "PackedSint64"; "PackedFixed32"; "PackedFixed64"; "PackedSfixed32"; "PackedSfixed64"; "PackedFloat"; "PackedDouble"; "PackedBool"; "PackedEnum" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestUnpackedTypes>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestUnpackedTypes.Parser, [| "UnpackedInt32"; "UnpackedInt64"; "UnpackedUint32"; "UnpackedUint64"; "UnpackedSint32"; "UnpackedSint64"; "UnpackedFixed32"; "UnpackedFixed64"; "UnpackedSfixed32"; "UnpackedSfixed64"; "UnpackedFloat"; "UnpackedDouble"; "UnpackedBool"; "UnpackedEnum" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRepeatedScalarDifferentTagSizes>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRepeatedScalarDifferentTagSizes.Parser, [| "RepeatedFixed32"; "RepeatedInt32"; "RepeatedFixed64"; "RepeatedInt64"; "RepeatedFloat"; "RepeatedUint64" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestCommentInjectionMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestCommentInjectionMessage.Parser, [| "A" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooClientMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooClientMessage.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooServerMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooServerMessage.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestEmptyMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestEmptyMessage.Parser, null, null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.CommentMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.CommentMessage.Parser, [| "Text" |], null, [| typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.CommentMessage.Types.NestedCommentEnum> |], null, [| new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.CommentMessage.Types.NestedCommentMessage>, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.CommentMessage.Types.NestedCommentMessage.Parser, [| "NestedText" |], null, null, null, null) |])
                        |]
                    )
                )
            ),
            true
        )
    let Descriptor(): global.Google.Protobuf.Reflection.FileDescriptor = descriptorBackingField.Value
type ForeignEnum =
| [<global.Google.Protobuf.Reflection.OriginalName("FOREIGN_UNSPECIFIED")>] ForeignUnspecified = 0
| [<global.Google.Protobuf.Reflection.OriginalName("FOREIGN_FOO")>] ForeignFoo = 4
| [<global.Google.Protobuf.Reflection.OriginalName("FOREIGN_BAR")>] ForeignBar = 5
| [<global.Google.Protobuf.Reflection.OriginalName("FOREIGN_BAZ")>] ForeignBaz = 6
type TestEnumWithDupValue =
| [<global.Google.Protobuf.Reflection.OriginalName("TEST_ENUM_WITH_DUP_VALUE_UNSPECIFIED")>] Unspecified = 0
| [<global.Google.Protobuf.Reflection.OriginalName("FOO1")>] Foo1 = 1
| [<global.Google.Protobuf.Reflection.OriginalName("BAR1")>] Bar1 = 2
| [<global.Google.Protobuf.Reflection.OriginalName("BAZ")>] Baz = 3
| [<global.Google.Protobuf.Reflection.OriginalName("FOO2", PreferredAlias = false)>] Foo2 = 1
| [<global.Google.Protobuf.Reflection.OriginalName("BAR2", PreferredAlias = false)>] Bar2 = 2
type TestSparseEnum =
| [<global.Google.Protobuf.Reflection.OriginalName("TEST_SPARSE_ENUM_UNSPECIFIED")>] Unspecified = 0
| [<global.Google.Protobuf.Reflection.OriginalName("SPARSE_A")>] SparseA = 123
| [<global.Google.Protobuf.Reflection.OriginalName("SPARSE_B")>] SparseB = 62374
| [<global.Google.Protobuf.Reflection.OriginalName("SPARSE_C")>] SparseC = 12589234
| [<global.Google.Protobuf.Reflection.OriginalName("SPARSE_D")>] SparseD = -15
| [<global.Google.Protobuf.Reflection.OriginalName("SPARSE_E")>] SparseE = -53452
| [<global.Google.Protobuf.Reflection.OriginalName("SPARSE_G")>] SparseG = 2
type CommentEnum =
| [<global.Google.Protobuf.Reflection.OriginalName("ZERO_VALUE")>] ZeroValue = 0
type TestAllTypes = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable SingleInt32: ValueOption<int32>
    mutable SingleInt64: ValueOption<int64>
    mutable SingleUint32: ValueOption<uint32>
    mutable SingleUint64: ValueOption<uint64>
    mutable SingleSint32: ValueOption<int32>
    mutable SingleSint64: ValueOption<int64>
    mutable SingleFixed32: ValueOption<uint32>
    mutable SingleFixed64: ValueOption<uint64>
    mutable SingleSfixed32: ValueOption<int32>
    mutable SingleSfixed64: ValueOption<int64>
    mutable SingleFloat: ValueOption<float32>
    mutable SingleDouble: ValueOption<float>
    mutable SingleBool: ValueOption<bool>
    mutable SingleString: ValueOption<string>
    mutable SingleBytes: ValueOption<global.Google.Protobuf.ByteString>
    mutable SingleNestedMessage: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>
    mutable SingleForeignMessage: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>
    mutable SingleImportMessage: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage>
    mutable SingleNestedEnum: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedEnum>
    mutable SingleForeignEnum: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>
    mutable SingleImportEnum: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportEnum>
    mutable SinglePublicImportMessage: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage>
    RepeatedInt32: global.Google.Protobuf.Collections.RepeatedField<int32>
    RepeatedInt64: global.Google.Protobuf.Collections.RepeatedField<int64>
    RepeatedUint32: global.Google.Protobuf.Collections.RepeatedField<uint32>
    RepeatedUint64: global.Google.Protobuf.Collections.RepeatedField<uint64>
    RepeatedSint32: global.Google.Protobuf.Collections.RepeatedField<int32>
    RepeatedSint64: global.Google.Protobuf.Collections.RepeatedField<int64>
    RepeatedFixed32: global.Google.Protobuf.Collections.RepeatedField<uint32>
    RepeatedFixed64: global.Google.Protobuf.Collections.RepeatedField<uint64>
    RepeatedSfixed32: global.Google.Protobuf.Collections.RepeatedField<int32>
    RepeatedSfixed64: global.Google.Protobuf.Collections.RepeatedField<int64>
    RepeatedFloat: global.Google.Protobuf.Collections.RepeatedField<float32>
    RepeatedDouble: global.Google.Protobuf.Collections.RepeatedField<float>
    RepeatedBool: global.Google.Protobuf.Collections.RepeatedField<bool>
    RepeatedString: global.Google.Protobuf.Collections.RepeatedField<string>
    RepeatedBytes: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.ByteString>
    RepeatedNestedMessage: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>
    RepeatedForeignMessage: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>
    RepeatedImportMessage: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage>
    RepeatedNestedEnum: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedEnum>
    RepeatedForeignEnum: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>
    RepeatedImportEnum: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportEnum>
    RepeatedPublicImportMessage: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage>
    mutable OneofField: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestAllTypes = {
        TestAllTypes._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestAllTypes.SingleInt32 = me.SingleInt32
        TestAllTypes.SingleInt64 = me.SingleInt64
        TestAllTypes.SingleUint32 = me.SingleUint32
        TestAllTypes.SingleUint64 = me.SingleUint64
        TestAllTypes.SingleSint32 = me.SingleSint32
        TestAllTypes.SingleSint64 = me.SingleSint64
        TestAllTypes.SingleFixed32 = me.SingleFixed32
        TestAllTypes.SingleFixed64 = me.SingleFixed64
        TestAllTypes.SingleSfixed32 = me.SingleSfixed32
        TestAllTypes.SingleSfixed64 = me.SingleSfixed64
        TestAllTypes.SingleFloat = me.SingleFloat
        TestAllTypes.SingleDouble = me.SingleDouble
        TestAllTypes.SingleBool = me.SingleBool
        TestAllTypes.SingleString = me.SingleString
        TestAllTypes.SingleBytes = me.SingleBytes
        TestAllTypes.SingleNestedMessage = me.SingleNestedMessage |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>).Clone())
        TestAllTypes.SingleForeignMessage = me.SingleForeignMessage |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>).Clone())
        TestAllTypes.SingleImportMessage = me.SingleImportMessage |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage>).Clone())
        TestAllTypes.SingleNestedEnum = me.SingleNestedEnum
        TestAllTypes.SingleForeignEnum = me.SingleForeignEnum
        TestAllTypes.SingleImportEnum = me.SingleImportEnum
        TestAllTypes.SinglePublicImportMessage = me.SinglePublicImportMessage |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage>).Clone())
        TestAllTypes.RepeatedInt32 = me.RepeatedInt32.Clone()
        TestAllTypes.RepeatedInt64 = me.RepeatedInt64.Clone()
        TestAllTypes.RepeatedUint32 = me.RepeatedUint32.Clone()
        TestAllTypes.RepeatedUint64 = me.RepeatedUint64.Clone()
        TestAllTypes.RepeatedSint32 = me.RepeatedSint32.Clone()
        TestAllTypes.RepeatedSint64 = me.RepeatedSint64.Clone()
        TestAllTypes.RepeatedFixed32 = me.RepeatedFixed32.Clone()
        TestAllTypes.RepeatedFixed64 = me.RepeatedFixed64.Clone()
        TestAllTypes.RepeatedSfixed32 = me.RepeatedSfixed32.Clone()
        TestAllTypes.RepeatedSfixed64 = me.RepeatedSfixed64.Clone()
        TestAllTypes.RepeatedFloat = me.RepeatedFloat.Clone()
        TestAllTypes.RepeatedDouble = me.RepeatedDouble.Clone()
        TestAllTypes.RepeatedBool = me.RepeatedBool.Clone()
        TestAllTypes.RepeatedString = me.RepeatedString.Clone()
        TestAllTypes.RepeatedBytes = me.RepeatedBytes.Clone()
        TestAllTypes.RepeatedNestedMessage = me.RepeatedNestedMessage.Clone()
        TestAllTypes.RepeatedForeignMessage = me.RepeatedForeignMessage.Clone()
        TestAllTypes.RepeatedImportMessage = me.RepeatedImportMessage.Clone()
        TestAllTypes.RepeatedNestedEnum = me.RepeatedNestedEnum.Clone()
        TestAllTypes.RepeatedForeignEnum = me.RepeatedForeignEnum.Clone()
        TestAllTypes.RepeatedImportEnum = me.RepeatedImportEnum.Clone()
        TestAllTypes.RepeatedPublicImportMessage = me.RepeatedPublicImportMessage.Clone()
        OneofField = me.OneofField
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.SingleInt32 <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteInt32(me.SingleInt32.Value)
        if me.SingleInt64 <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteInt64(me.SingleInt64.Value)
        if me.SingleUint32 <> ValueNone
        then
            output.WriteRawTag(24uy)
            output.WriteUInt32(me.SingleUint32.Value)
        if me.SingleUint64 <> ValueNone
        then
            output.WriteRawTag(32uy)
            output.WriteUInt64(me.SingleUint64.Value)
        if me.SingleSint32 <> ValueNone
        then
            output.WriteRawTag(40uy)
            output.WriteSInt32(me.SingleSint32.Value)
        if me.SingleSint64 <> ValueNone
        then
            output.WriteRawTag(48uy)
            output.WriteSInt64(me.SingleSint64.Value)
        if me.SingleFixed32 <> ValueNone
        then
            output.WriteRawTag(61uy)
            output.WriteFixed32(me.SingleFixed32.Value)
        if me.SingleFixed64 <> ValueNone
        then
            output.WriteRawTag(65uy)
            output.WriteFixed64(me.SingleFixed64.Value)
        if me.SingleSfixed32 <> ValueNone
        then
            output.WriteRawTag(77uy)
            output.WriteSFixed32(me.SingleSfixed32.Value)
        if me.SingleSfixed64 <> ValueNone
        then
            output.WriteRawTag(81uy)
            output.WriteSFixed64(me.SingleSfixed64.Value)
        if me.SingleFloat <> ValueNone
        then
            output.WriteRawTag(93uy)
            output.WriteFloat(me.SingleFloat.Value)
        if me.SingleDouble <> ValueNone
        then
            output.WriteRawTag(97uy)
            output.WriteDouble(me.SingleDouble.Value)
        if me.SingleBool <> ValueNone
        then
            output.WriteRawTag(104uy)
            output.WriteBool(me.SingleBool.Value)
        if me.SingleString <> ValueNone
        then
            output.WriteRawTag(114uy)
            output.WriteString(me.SingleString.Value)
        if me.SingleBytes <> ValueNone
        then
            output.WriteRawTag(122uy)
            output.WriteBytes(me.SingleBytes.Value)
        if me.SingleNestedMessage <> ValueNone
        then
            output.WriteRawTag(146uy, 1uy)
            output.WriteMessage(me.SingleNestedMessage.Value)
        if me.SingleForeignMessage <> ValueNone
        then
            output.WriteRawTag(154uy, 1uy)
            output.WriteMessage(me.SingleForeignMessage.Value)
        if me.SingleImportMessage <> ValueNone
        then
            output.WriteRawTag(162uy, 1uy)
            output.WriteMessage(me.SingleImportMessage.Value)
        if me.SingleNestedEnum <> ValueNone
        then
            output.WriteRawTag(168uy, 1uy)
            output.WriteEnum(int me.SingleNestedEnum.Value)
        if me.SingleForeignEnum <> ValueNone
        then
            output.WriteRawTag(176uy, 1uy)
            output.WriteEnum(int me.SingleForeignEnum.Value)
        if me.SingleImportEnum <> ValueNone
        then
            output.WriteRawTag(184uy, 1uy)
            output.WriteEnum(int me.SingleImportEnum.Value)
        if me.SinglePublicImportMessage <> ValueNone
        then
            output.WriteRawTag(210uy, 1uy)
            output.WriteMessage(me.SinglePublicImportMessage.Value)
        me.RepeatedInt32.WriteTo(&output, TestAllTypes.RepeatedRepeatedInt32Codec)
        me.RepeatedInt64.WriteTo(&output, TestAllTypes.RepeatedRepeatedInt64Codec)
        me.RepeatedUint32.WriteTo(&output, TestAllTypes.RepeatedRepeatedUint32Codec)
        me.RepeatedUint64.WriteTo(&output, TestAllTypes.RepeatedRepeatedUint64Codec)
        me.RepeatedSint32.WriteTo(&output, TestAllTypes.RepeatedRepeatedSint32Codec)
        me.RepeatedSint64.WriteTo(&output, TestAllTypes.RepeatedRepeatedSint64Codec)
        me.RepeatedFixed32.WriteTo(&output, TestAllTypes.RepeatedRepeatedFixed32Codec)
        me.RepeatedFixed64.WriteTo(&output, TestAllTypes.RepeatedRepeatedFixed64Codec)
        me.RepeatedSfixed32.WriteTo(&output, TestAllTypes.RepeatedRepeatedSfixed32Codec)
        me.RepeatedSfixed64.WriteTo(&output, TestAllTypes.RepeatedRepeatedSfixed64Codec)
        me.RepeatedFloat.WriteTo(&output, TestAllTypes.RepeatedRepeatedFloatCodec)
        me.RepeatedDouble.WriteTo(&output, TestAllTypes.RepeatedRepeatedDoubleCodec)
        me.RepeatedBool.WriteTo(&output, TestAllTypes.RepeatedRepeatedBoolCodec)
        me.RepeatedString.WriteTo(&output, TestAllTypes.RepeatedRepeatedStringCodec)
        me.RepeatedBytes.WriteTo(&output, TestAllTypes.RepeatedRepeatedBytesCodec)
        me.RepeatedNestedMessage.WriteTo(&output, TestAllTypes.RepeatedRepeatedNestedMessageCodec)
        me.RepeatedForeignMessage.WriteTo(&output, TestAllTypes.RepeatedRepeatedForeignMessageCodec)
        me.RepeatedImportMessage.WriteTo(&output, TestAllTypes.RepeatedRepeatedImportMessageCodec)
        me.RepeatedNestedEnum.WriteTo(&output, TestAllTypes.RepeatedRepeatedNestedEnumCodec)
        me.RepeatedForeignEnum.WriteTo(&output, TestAllTypes.RepeatedRepeatedForeignEnumCodec)
        me.RepeatedImportEnum.WriteTo(&output, TestAllTypes.RepeatedRepeatedImportEnumCodec)
        me.RepeatedPublicImportMessage.WriteTo(&output, TestAllTypes.RepeatedRepeatedPublicImportMessageCodec)
        match me.OneofField with
        | ValueNone -> ()
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofUint32 x) ->
            output.WriteRawTag(248uy, 6uy)
            output.WriteUInt32(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofNestedMessage x) ->
            output.WriteRawTag(130uy, 7uy)
            output.WriteMessage(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofString x) ->
            output.WriteRawTag(138uy, 7uy)
            output.WriteString(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofBytes x) ->
            output.WriteRawTag(146uy, 7uy)
            output.WriteBytes(x)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.SingleInt32 <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.SingleInt32.Value)
        if me.SingleInt64 <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt64Size(me.SingleInt64.Value)
        if me.SingleUint32 <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeUInt32Size(me.SingleUint32.Value)
        if me.SingleUint64 <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeUInt64Size(me.SingleUint64.Value)
        if me.SingleSint32 <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeSInt32Size(me.SingleSint32.Value)
        if me.SingleSint64 <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeSInt64Size(me.SingleSint64.Value)
        if me.SingleFixed32 <> ValueNone then size <- size + 5
        if me.SingleFixed64 <> ValueNone then size <- size + 9
        if me.SingleSfixed32 <> ValueNone then size <- size + 5
        if me.SingleSfixed64 <> ValueNone then size <- size + 9
        if me.SingleFloat <> ValueNone then size <- size + 5
        if me.SingleDouble <> ValueNone then size <- size + 9
        if me.SingleBool <> ValueNone then size <- size + 2
        if me.SingleString <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.SingleString.Value)
        if me.SingleBytes <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeBytesSize(me.SingleBytes.Value)
        if me.SingleNestedMessage <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.SingleNestedMessage.Value)
        if me.SingleForeignMessage <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.SingleForeignMessage.Value)
        if me.SingleImportMessage <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.SingleImportMessage.Value)
        if me.SingleNestedEnum <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.SingleNestedEnum.Value)
        if me.SingleForeignEnum <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.SingleForeignEnum.Value)
        if me.SingleImportEnum <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.SingleImportEnum.Value)
        if me.SinglePublicImportMessage <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.SinglePublicImportMessage.Value)
        size <- size + me.RepeatedInt32.CalculateSize(TestAllTypes.RepeatedRepeatedInt32Codec)
        size <- size + me.RepeatedInt64.CalculateSize(TestAllTypes.RepeatedRepeatedInt64Codec)
        size <- size + me.RepeatedUint32.CalculateSize(TestAllTypes.RepeatedRepeatedUint32Codec)
        size <- size + me.RepeatedUint64.CalculateSize(TestAllTypes.RepeatedRepeatedUint64Codec)
        size <- size + me.RepeatedSint32.CalculateSize(TestAllTypes.RepeatedRepeatedSint32Codec)
        size <- size + me.RepeatedSint64.CalculateSize(TestAllTypes.RepeatedRepeatedSint64Codec)
        size <- size + me.RepeatedFixed32.CalculateSize(TestAllTypes.RepeatedRepeatedFixed32Codec)
        size <- size + me.RepeatedFixed64.CalculateSize(TestAllTypes.RepeatedRepeatedFixed64Codec)
        size <- size + me.RepeatedSfixed32.CalculateSize(TestAllTypes.RepeatedRepeatedSfixed32Codec)
        size <- size + me.RepeatedSfixed64.CalculateSize(TestAllTypes.RepeatedRepeatedSfixed64Codec)
        size <- size + me.RepeatedFloat.CalculateSize(TestAllTypes.RepeatedRepeatedFloatCodec)
        size <- size + me.RepeatedDouble.CalculateSize(TestAllTypes.RepeatedRepeatedDoubleCodec)
        size <- size + me.RepeatedBool.CalculateSize(TestAllTypes.RepeatedRepeatedBoolCodec)
        size <- size + me.RepeatedString.CalculateSize(TestAllTypes.RepeatedRepeatedStringCodec)
        size <- size + me.RepeatedBytes.CalculateSize(TestAllTypes.RepeatedRepeatedBytesCodec)
        size <- size + me.RepeatedNestedMessage.CalculateSize(TestAllTypes.RepeatedRepeatedNestedMessageCodec)
        size <- size + me.RepeatedForeignMessage.CalculateSize(TestAllTypes.RepeatedRepeatedForeignMessageCodec)
        size <- size + me.RepeatedImportMessage.CalculateSize(TestAllTypes.RepeatedRepeatedImportMessageCodec)
        size <- size + me.RepeatedNestedEnum.CalculateSize(TestAllTypes.RepeatedRepeatedNestedEnumCodec)
        size <- size + me.RepeatedForeignEnum.CalculateSize(TestAllTypes.RepeatedRepeatedForeignEnumCodec)
        size <- size + me.RepeatedImportEnum.CalculateSize(TestAllTypes.RepeatedRepeatedImportEnumCodec)
        size <- size + me.RepeatedPublicImportMessage.CalculateSize(TestAllTypes.RepeatedRepeatedPublicImportMessageCodec)
        match me.OneofField with
        | ValueNone -> ()
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofUint32 x) -> size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeUInt32Size(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofNestedMessage x) -> size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofString x) -> size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofBytes x) -> size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeBytesSize(x)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestAllTypes) =
        if other.SingleInt32 <> ValueNone
        then me.SingleInt32 <- other.SingleInt32
        if other.SingleInt64 <> ValueNone
        then me.SingleInt64 <- other.SingleInt64
        if other.SingleUint32 <> ValueNone
        then me.SingleUint32 <- other.SingleUint32
        if other.SingleUint64 <> ValueNone
        then me.SingleUint64 <- other.SingleUint64
        if other.SingleSint32 <> ValueNone
        then me.SingleSint32 <- other.SingleSint32
        if other.SingleSint64 <> ValueNone
        then me.SingleSint64 <- other.SingleSint64
        if other.SingleFixed32 <> ValueNone
        then me.SingleFixed32 <- other.SingleFixed32
        if other.SingleFixed64 <> ValueNone
        then me.SingleFixed64 <- other.SingleFixed64
        if other.SingleSfixed32 <> ValueNone
        then me.SingleSfixed32 <- other.SingleSfixed32
        if other.SingleSfixed64 <> ValueNone
        then me.SingleSfixed64 <- other.SingleSfixed64
        if other.SingleFloat <> ValueNone
        then me.SingleFloat <- other.SingleFloat
        if other.SingleDouble <> ValueNone
        then me.SingleDouble <- other.SingleDouble
        if other.SingleBool <> ValueNone
        then me.SingleBool <- other.SingleBool
        if other.SingleString <> ValueNone
        then me.SingleString <- other.SingleString
        if other.SingleBytes <> ValueNone
        then me.SingleBytes <- other.SingleBytes
        if other.SingleNestedMessage <> ValueNone
        then
            if me.SingleNestedMessage.IsNone
            then me.SingleNestedMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage.empty())
            (me.SingleNestedMessage.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>).MergeFrom(other.SingleNestedMessage.Value)
        if other.SingleForeignMessage <> ValueNone
        then
            if me.SingleForeignMessage.IsNone
            then me.SingleForeignMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage.empty())
            (me.SingleForeignMessage.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>).MergeFrom(other.SingleForeignMessage.Value)
        if other.SingleImportMessage <> ValueNone
        then
            if me.SingleImportMessage.IsNone
            then me.SingleImportMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage.empty())
            (me.SingleImportMessage.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage>).MergeFrom(other.SingleImportMessage.Value)
        if other.SingleNestedEnum <> ValueNone
        then me.SingleNestedEnum <- other.SingleNestedEnum
        if other.SingleForeignEnum <> ValueNone
        then me.SingleForeignEnum <- other.SingleForeignEnum
        if other.SingleImportEnum <> ValueNone
        then me.SingleImportEnum <- other.SingleImportEnum
        if other.SinglePublicImportMessage <> ValueNone
        then
            if me.SinglePublicImportMessage.IsNone
            then me.SinglePublicImportMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage.empty())
            (me.SinglePublicImportMessage.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage>).MergeFrom(other.SinglePublicImportMessage.Value)
        me.RepeatedInt32.Add(other.RepeatedInt32)
        me.RepeatedInt64.Add(other.RepeatedInt64)
        me.RepeatedUint32.Add(other.RepeatedUint32)
        me.RepeatedUint64.Add(other.RepeatedUint64)
        me.RepeatedSint32.Add(other.RepeatedSint32)
        me.RepeatedSint64.Add(other.RepeatedSint64)
        me.RepeatedFixed32.Add(other.RepeatedFixed32)
        me.RepeatedFixed64.Add(other.RepeatedFixed64)
        me.RepeatedSfixed32.Add(other.RepeatedSfixed32)
        me.RepeatedSfixed64.Add(other.RepeatedSfixed64)
        me.RepeatedFloat.Add(other.RepeatedFloat)
        me.RepeatedDouble.Add(other.RepeatedDouble)
        me.RepeatedBool.Add(other.RepeatedBool)
        me.RepeatedString.Add(other.RepeatedString)
        me.RepeatedBytes.Add(other.RepeatedBytes)
        me.RepeatedNestedMessage.Add(other.RepeatedNestedMessage)
        me.RepeatedForeignMessage.Add(other.RepeatedForeignMessage)
        me.RepeatedImportMessage.Add(other.RepeatedImportMessage)
        me.RepeatedNestedEnum.Add(other.RepeatedNestedEnum)
        me.RepeatedForeignEnum.Add(other.RepeatedForeignEnum)
        me.RepeatedImportEnum.Add(other.RepeatedImportEnum)
        me.RepeatedPublicImportMessage.Add(other.RepeatedPublicImportMessage)
        if other.OneofField <> ValueNone
        then me.OneofField <- other.OneofField
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.SingleInt32 <- ValueSome(input.ReadInt32())
            | 16u ->
                me.SingleInt64 <- ValueSome(input.ReadInt64())
            | 24u ->
                me.SingleUint32 <- ValueSome(input.ReadUInt32())
            | 32u ->
                me.SingleUint64 <- ValueSome(input.ReadUInt64())
            | 40u ->
                me.SingleSint32 <- ValueSome(input.ReadSInt32())
            | 48u ->
                me.SingleSint64 <- ValueSome(input.ReadSInt64())
            | 61u ->
                me.SingleFixed32 <- ValueSome(input.ReadFixed32())
            | 65u ->
                me.SingleFixed64 <- ValueSome(input.ReadFixed64())
            | 77u ->
                me.SingleSfixed32 <- ValueSome(input.ReadSFixed32())
            | 81u ->
                me.SingleSfixed64 <- ValueSome(input.ReadSFixed64())
            | 93u ->
                me.SingleFloat <- ValueSome(input.ReadFloat())
            | 97u ->
                me.SingleDouble <- ValueSome(input.ReadDouble())
            | 104u ->
                me.SingleBool <- ValueSome(input.ReadBool())
            | 114u ->
                me.SingleString <- ValueSome(input.ReadString())
            | 122u ->
                me.SingleBytes <- ValueSome(input.ReadBytes())
            | 146u ->
                if me.SingleNestedMessage.IsNone
                then me.SingleNestedMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage.empty())
                input.ReadMessage(me.SingleNestedMessage.Value)
            | 154u ->
                if me.SingleForeignMessage.IsNone
                then me.SingleForeignMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage.empty())
                input.ReadMessage(me.SingleForeignMessage.Value)
            | 162u ->
                if me.SingleImportMessage.IsNone
                then me.SingleImportMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage.empty())
                input.ReadMessage(me.SingleImportMessage.Value)
            | 168u ->
                me.SingleNestedEnum <- ValueSome(enum(input.ReadEnum()))
            | 176u ->
                me.SingleForeignEnum <- ValueSome(enum(input.ReadEnum()))
            | 184u ->
                me.SingleImportEnum <- ValueSome(enum(input.ReadEnum()))
            | 210u ->
                if me.SinglePublicImportMessage.IsNone
                then me.SinglePublicImportMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage.empty())
                input.ReadMessage(me.SinglePublicImportMessage.Value)
            | 250u | 248u ->
                me.RepeatedInt32.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedInt32Codec)
            | 258u | 256u ->
                me.RepeatedInt64.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedInt64Codec)
            | 266u | 264u ->
                me.RepeatedUint32.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedUint32Codec)
            | 274u | 272u ->
                me.RepeatedUint64.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedUint64Codec)
            | 282u | 280u ->
                me.RepeatedSint32.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedSint32Codec)
            | 290u | 288u ->
                me.RepeatedSint64.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedSint64Codec)
            | 298u | 301u ->
                me.RepeatedFixed32.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedFixed32Codec)
            | 306u | 305u ->
                me.RepeatedFixed64.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedFixed64Codec)
            | 314u | 317u ->
                me.RepeatedSfixed32.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedSfixed32Codec)
            | 322u | 321u ->
                me.RepeatedSfixed64.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedSfixed64Codec)
            | 330u | 333u ->
                me.RepeatedFloat.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedFloatCodec)
            | 338u | 337u ->
                me.RepeatedDouble.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedDoubleCodec)
            | 346u | 344u ->
                me.RepeatedBool.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedBoolCodec)
            | 354u ->
                me.RepeatedString.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedStringCodec)
            | 362u ->
                me.RepeatedBytes.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedBytesCodec)
            | 386u ->
                me.RepeatedNestedMessage.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedNestedMessageCodec)
            | 394u ->
                me.RepeatedForeignMessage.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedForeignMessageCodec)
            | 402u ->
                me.RepeatedImportMessage.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedImportMessageCodec)
            | 410u | 408u ->
                me.RepeatedNestedEnum.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedNestedEnumCodec)
            | 418u | 416u ->
                me.RepeatedForeignEnum.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedForeignEnumCodec)
            | 426u | 424u ->
                me.RepeatedImportEnum.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedImportEnumCodec)
            | 434u ->
                me.RepeatedPublicImportMessage.AddEntriesFrom(&input, TestAllTypes.RepeatedRepeatedPublicImportMessageCodec)
            | 888u ->
                let value = input.ReadUInt32()
                me.OneofField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofUint32(value))
            | 898u ->
                let value = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage.empty()
                input.ReadMessage(value)
                me.OneofField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofNestedMessage(value))
            | 906u ->
                let value = input.ReadString()
                me.OneofField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofString(value))
            | 914u ->
                let value = input.ReadBytes()
                me.OneofField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofBytes(value))
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.OneofFieldCase =
        match me.OneofField with
        | ValueNone -> 0
        | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofUint32 _) -> 111
        | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofNestedMessage _) -> 112
        | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofString _) -> 113
        | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofBytes _) -> 114
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearOneofField() = me.OneofField <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.OneofUint32
        with get() =
            match me.OneofField with
            | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofUint32 x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.OneofField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofUint32 x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.OneofNestedMessage
        with get() =
            match me.OneofField with
            | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofNestedMessage x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.OneofField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofNestedMessage x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.OneofString
        with get() =
            match me.OneofField with
            | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofString x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.OneofField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofString x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.OneofBytes
        with get() =
            match me.OneofField with
            | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofBytes x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.OneofField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.OneofField.OneofBytes x)
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestAllTypes> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestAllTypes_Descriptor()
module TestAllTypes =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestAllTypes._UnknownFields = null
        TestAllTypes.SingleInt32 = ValueNone
        TestAllTypes.SingleInt64 = ValueNone
        TestAllTypes.SingleUint32 = ValueNone
        TestAllTypes.SingleUint64 = ValueNone
        TestAllTypes.SingleSint32 = ValueNone
        TestAllTypes.SingleSint64 = ValueNone
        TestAllTypes.SingleFixed32 = ValueNone
        TestAllTypes.SingleFixed64 = ValueNone
        TestAllTypes.SingleSfixed32 = ValueNone
        TestAllTypes.SingleSfixed64 = ValueNone
        TestAllTypes.SingleFloat = ValueNone
        TestAllTypes.SingleDouble = ValueNone
        TestAllTypes.SingleBool = ValueNone
        TestAllTypes.SingleString = ValueNone
        TestAllTypes.SingleBytes = ValueNone
        TestAllTypes.SingleNestedMessage = ValueNone
        TestAllTypes.SingleForeignMessage = ValueNone
        TestAllTypes.SingleImportMessage = ValueNone
        TestAllTypes.SingleNestedEnum = ValueNone
        TestAllTypes.SingleForeignEnum = ValueNone
        TestAllTypes.SingleImportEnum = ValueNone
        TestAllTypes.SinglePublicImportMessage = ValueNone
        TestAllTypes.RepeatedInt32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestAllTypes.RepeatedInt64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestAllTypes.RepeatedUint32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestAllTypes.RepeatedUint64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestAllTypes.RepeatedSint32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestAllTypes.RepeatedSint64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestAllTypes.RepeatedFixed32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestAllTypes.RepeatedFixed64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestAllTypes.RepeatedSfixed32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestAllTypes.RepeatedSfixed64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestAllTypes.RepeatedFloat = global.Google.Protobuf.Collections.RepeatedField<float32>()
        TestAllTypes.RepeatedDouble = global.Google.Protobuf.Collections.RepeatedField<float>()
        TestAllTypes.RepeatedBool = global.Google.Protobuf.Collections.RepeatedField<bool>()
        TestAllTypes.RepeatedString = global.Google.Protobuf.Collections.RepeatedField<string>()
        TestAllTypes.RepeatedBytes = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.ByteString>()
        TestAllTypes.RepeatedNestedMessage = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>()
        TestAllTypes.RepeatedForeignMessage = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>()
        TestAllTypes.RepeatedImportMessage = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage>()
        TestAllTypes.RepeatedNestedEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedEnum>()
        TestAllTypes.RepeatedForeignEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>()
        TestAllTypes.RepeatedImportEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportEnum>()
        TestAllTypes.RepeatedPublicImportMessage = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage>()
        OneofField = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestAllTypes._UnknownFields = null
        TestAllTypes.SingleInt32 = ValueNone
        TestAllTypes.SingleInt64 = ValueNone
        TestAllTypes.SingleUint32 = ValueNone
        TestAllTypes.SingleUint64 = ValueNone
        TestAllTypes.SingleSint32 = ValueNone
        TestAllTypes.SingleSint64 = ValueNone
        TestAllTypes.SingleFixed32 = ValueNone
        TestAllTypes.SingleFixed64 = ValueNone
        TestAllTypes.SingleSfixed32 = ValueNone
        TestAllTypes.SingleSfixed64 = ValueNone
        TestAllTypes.SingleFloat = ValueNone
        TestAllTypes.SingleDouble = ValueNone
        TestAllTypes.SingleBool = ValueNone
        TestAllTypes.SingleString = ValueNone
        TestAllTypes.SingleBytes = ValueNone
        TestAllTypes.SingleNestedMessage = ValueNone
        TestAllTypes.SingleForeignMessage = ValueNone
        TestAllTypes.SingleImportMessage = ValueNone
        TestAllTypes.SingleNestedEnum = ValueNone
        TestAllTypes.SingleForeignEnum = ValueNone
        TestAllTypes.SingleImportEnum = ValueNone
        TestAllTypes.SinglePublicImportMessage = ValueNone
        TestAllTypes.RepeatedInt32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestAllTypes.RepeatedInt64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestAllTypes.RepeatedUint32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestAllTypes.RepeatedUint64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestAllTypes.RepeatedSint32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestAllTypes.RepeatedSint64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestAllTypes.RepeatedFixed32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestAllTypes.RepeatedFixed64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestAllTypes.RepeatedSfixed32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestAllTypes.RepeatedSfixed64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestAllTypes.RepeatedFloat = global.Google.Protobuf.Collections.RepeatedField<float32>()
        TestAllTypes.RepeatedDouble = global.Google.Protobuf.Collections.RepeatedField<float>()
        TestAllTypes.RepeatedBool = global.Google.Protobuf.Collections.RepeatedField<bool>()
        TestAllTypes.RepeatedString = global.Google.Protobuf.Collections.RepeatedField<string>()
        TestAllTypes.RepeatedBytes = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.ByteString>()
        TestAllTypes.RepeatedNestedMessage = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>()
        TestAllTypes.RepeatedForeignMessage = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>()
        TestAllTypes.RepeatedImportMessage = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage>()
        TestAllTypes.RepeatedNestedEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedEnum>()
        TestAllTypes.RepeatedForeignEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>()
        TestAllTypes.RepeatedImportEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportEnum>()
        TestAllTypes.RepeatedPublicImportMessage = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage>()
        OneofField = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestAllTypes>(global.System.Func<_>(empty))
    let SingleInt32FieldNumber = 1
    let SingleInt64FieldNumber = 2
    let SingleUint32FieldNumber = 3
    let SingleUint64FieldNumber = 4
    let SingleSint32FieldNumber = 5
    let SingleSint64FieldNumber = 6
    let SingleFixed32FieldNumber = 7
    let SingleFixed64FieldNumber = 8
    let SingleSfixed32FieldNumber = 9
    let SingleSfixed64FieldNumber = 10
    let SingleFloatFieldNumber = 11
    let SingleDoubleFieldNumber = 12
    let SingleBoolFieldNumber = 13
    let SingleStringFieldNumber = 14
    let SingleBytesFieldNumber = 15
    let SingleNestedMessageFieldNumber = 18
    let SingleForeignMessageFieldNumber = 19
    let SingleImportMessageFieldNumber = 20
    let SingleNestedEnumFieldNumber = 21
    let SingleForeignEnumFieldNumber = 22
    let SingleImportEnumFieldNumber = 23
    let SinglePublicImportMessageFieldNumber = 26
    let RepeatedInt32FieldNumber = 31
    let RepeatedInt64FieldNumber = 32
    let RepeatedUint32FieldNumber = 33
    let RepeatedUint64FieldNumber = 34
    let RepeatedSint32FieldNumber = 35
    let RepeatedSint64FieldNumber = 36
    let RepeatedFixed32FieldNumber = 37
    let RepeatedFixed64FieldNumber = 38
    let RepeatedSfixed32FieldNumber = 39
    let RepeatedSfixed64FieldNumber = 40
    let RepeatedFloatFieldNumber = 41
    let RepeatedDoubleFieldNumber = 42
    let RepeatedBoolFieldNumber = 43
    let RepeatedStringFieldNumber = 44
    let RepeatedBytesFieldNumber = 45
    let RepeatedNestedMessageFieldNumber = 48
    let RepeatedForeignMessageFieldNumber = 49
    let RepeatedImportMessageFieldNumber = 50
    let RepeatedNestedEnumFieldNumber = 51
    let RepeatedForeignEnumFieldNumber = 52
    let RepeatedImportEnumFieldNumber = 53
    let RepeatedPublicImportMessageFieldNumber = 54
    let OneofUint32FieldNumber = 111
    let OneofNestedMessageFieldNumber = 112
    let OneofStringFieldNumber = 113
    let OneofBytesFieldNumber = 114
    let RepeatedRepeatedInt32Codec = global.Google.Protobuf.FieldCodec.ForInt32(248u)
    let RepeatedRepeatedInt64Codec = global.Google.Protobuf.FieldCodec.ForInt64(256u)
    let RepeatedRepeatedUint32Codec = global.Google.Protobuf.FieldCodec.ForUInt32(264u)
    let RepeatedRepeatedUint64Codec = global.Google.Protobuf.FieldCodec.ForUInt64(272u)
    let RepeatedRepeatedSint32Codec = global.Google.Protobuf.FieldCodec.ForSInt32(280u)
    let RepeatedRepeatedSint64Codec = global.Google.Protobuf.FieldCodec.ForSInt64(288u)
    let RepeatedRepeatedFixed32Codec = global.Google.Protobuf.FieldCodec.ForFixed32(301u)
    let RepeatedRepeatedFixed64Codec = global.Google.Protobuf.FieldCodec.ForFixed64(305u)
    let RepeatedRepeatedSfixed32Codec = global.Google.Protobuf.FieldCodec.ForSFixed32(317u)
    let RepeatedRepeatedSfixed64Codec = global.Google.Protobuf.FieldCodec.ForSFixed64(321u)
    let RepeatedRepeatedFloatCodec = global.Google.Protobuf.FieldCodec.ForFloat(333u)
    let RepeatedRepeatedDoubleCodec = global.Google.Protobuf.FieldCodec.ForDouble(337u)
    let RepeatedRepeatedBoolCodec = global.Google.Protobuf.FieldCodec.ForBool(344u)
    let RepeatedRepeatedStringCodec = global.Google.Protobuf.FieldCodec.ForString(354u)
    let RepeatedRepeatedBytesCodec = global.Google.Protobuf.FieldCodec.ForBytes(362u)
    let RepeatedRepeatedNestedMessageCodec = global.Google.Protobuf.FieldCodec.ForMessage(386u, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage.Parser)
    let RepeatedRepeatedForeignMessageCodec = global.Google.Protobuf.FieldCodec.ForMessage(394u, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage.Parser)
    let RepeatedRepeatedImportMessageCodec = global.Google.Protobuf.FieldCodec.ForMessage(402u, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ImportMessage.Parser)
    let RepeatedRepeatedNestedEnumCodec = global.Google.Protobuf.FieldCodec.ForEnum(408u, global.System.Func<_,_>(fun x -> int x), global.System.Func<_,_>(fun x -> enum x))
    let RepeatedRepeatedForeignEnumCodec = global.Google.Protobuf.FieldCodec.ForEnum(416u, global.System.Func<_,_>(fun x -> int x), global.System.Func<_,_>(fun x -> enum x))
    let RepeatedRepeatedImportEnumCodec = global.Google.Protobuf.FieldCodec.ForEnum(424u, global.System.Func<_,_>(fun x -> int x), global.System.Func<_,_>(fun x -> enum x))
    let RepeatedRepeatedPublicImportMessageCodec = global.Google.Protobuf.FieldCodec.ForMessage(434u, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.PublicImportMessage.Parser)
    module Types =
        type OneofField =
        | OneofUint32 of uint32
        | OneofNestedMessage of global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage
        | OneofString of string
        | OneofBytes of global.Google.Protobuf.ByteString
        type NestedEnum =
        | [<global.Google.Protobuf.Reflection.OriginalName("NESTED_ENUM_UNSPECIFIED")>] Unspecified = 0
        | [<global.Google.Protobuf.Reflection.OriginalName("FOO")>] Foo = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("BAR")>] Bar = 2
        | [<global.Google.Protobuf.Reflection.OriginalName("BAZ")>] Baz = 3
        | [<global.Google.Protobuf.Reflection.OriginalName("NEG")>] Neg = -1
        type NestedMessage = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            mutable Bb: ValueOption<int32>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : NestedMessage = {
                NestedMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                NestedMessage.Bb = me.Bb
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                if me.Bb <> ValueNone
                then
                    output.WriteRawTag(8uy)
                    output.WriteInt32(me.Bb.Value)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                if me.Bb <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Bb.Value)
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: NestedMessage) =
                if other.Bb <> ValueNone
                then me.Bb <- other.Bb
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 8u ->
                        me.Bb <- ValueSome(input.ReadInt32())
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<NestedMessage> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestAllTypes_NestedMessage_Descriptor()
        module NestedMessage =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                NestedMessage._UnknownFields = null
                NestedMessage.Bb = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                NestedMessage._UnknownFields = null
                NestedMessage.Bb = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<NestedMessage>(global.System.Func<_>(empty))
            let BbFieldNumber = 1
type NestedTestAllTypes = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Child: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes>
    mutable Payload: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes>
    RepeatedChild: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : NestedTestAllTypes = {
        NestedTestAllTypes._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        NestedTestAllTypes.Child = me.Child |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes>).Clone())
        NestedTestAllTypes.Payload = me.Payload |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes>).Clone())
        NestedTestAllTypes.RepeatedChild = me.RepeatedChild.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Child <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteMessage(me.Child.Value)
        if me.Payload <> ValueNone
        then
            output.WriteRawTag(18uy)
            output.WriteMessage(me.Payload.Value)
        me.RepeatedChild.WriteTo(&output, NestedTestAllTypes.RepeatedRepeatedChildCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Child <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Child.Value)
        if me.Payload <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Payload.Value)
        size <- size + me.RepeatedChild.CalculateSize(NestedTestAllTypes.RepeatedRepeatedChildCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: NestedTestAllTypes) =
        if other.Child <> ValueNone
        then
            if me.Child.IsNone
            then me.Child <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes.empty())
            (me.Child.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes>).MergeFrom(other.Child.Value)
        if other.Payload <> ValueNone
        then
            if me.Payload.IsNone
            then me.Payload <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.empty())
            (me.Payload.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes>).MergeFrom(other.Payload.Value)
        me.RepeatedChild.Add(other.RepeatedChild)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                if me.Child.IsNone
                then me.Child <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes.empty())
                input.ReadMessage(me.Child.Value)
            | 18u ->
                if me.Payload.IsNone
                then me.Payload <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.empty())
                input.ReadMessage(me.Payload.Value)
            | 26u ->
                me.RepeatedChild.AddEntriesFrom(&input, NestedTestAllTypes.RepeatedRepeatedChildCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<NestedTestAllTypes> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.NestedTestAllTypes_Descriptor()
module NestedTestAllTypes =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        NestedTestAllTypes._UnknownFields = null
        NestedTestAllTypes.Child = ValueNone
        NestedTestAllTypes.Payload = ValueNone
        NestedTestAllTypes.RepeatedChild = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        NestedTestAllTypes._UnknownFields = null
        NestedTestAllTypes.Child = ValueNone
        NestedTestAllTypes.Payload = ValueNone
        NestedTestAllTypes.RepeatedChild = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<NestedTestAllTypes>(global.System.Func<_>(empty))
    let ChildFieldNumber = 1
    let PayloadFieldNumber = 2
    let RepeatedChildFieldNumber = 3
    let RepeatedRepeatedChildCodec = global.Google.Protobuf.FieldCodec.ForMessage(26u, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.NestedTestAllTypes.Parser)
type TestDeprecatedFields = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable DeprecatedInt32: ValueOption<int32>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestDeprecatedFields = {
        TestDeprecatedFields._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestDeprecatedFields.DeprecatedInt32 = me.DeprecatedInt32
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.DeprecatedInt32 <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteInt32(me.DeprecatedInt32.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.DeprecatedInt32 <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.DeprecatedInt32.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestDeprecatedFields) =
        if other.DeprecatedInt32 <> ValueNone
        then me.DeprecatedInt32 <- other.DeprecatedInt32
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.DeprecatedInt32 <- ValueSome(input.ReadInt32())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestDeprecatedFields> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestDeprecatedFields_Descriptor()
module TestDeprecatedFields =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestDeprecatedFields._UnknownFields = null
        TestDeprecatedFields.DeprecatedInt32 = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestDeprecatedFields._UnknownFields = null
        TestDeprecatedFields.DeprecatedInt32 = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestDeprecatedFields>(global.System.Func<_>(empty))
    let DeprecatedInt32FieldNumber = 1
type ForeignMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable C: ValueOption<int32>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : ForeignMessage = {
        ForeignMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        ForeignMessage.C = me.C
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.C <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteInt32(me.C.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.C <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.C.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: ForeignMessage) =
        if other.C <> ValueNone
        then me.C <- other.C
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.C <- ValueSome(input.ReadInt32())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<ForeignMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.ForeignMessage_Descriptor()
module ForeignMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        ForeignMessage._UnknownFields = null
        ForeignMessage.C = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        ForeignMessage._UnknownFields = null
        ForeignMessage.C = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<ForeignMessage>(global.System.Func<_>(empty))
    let CFieldNumber = 1
type TestReservedFields = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestReservedFields = {
        TestReservedFields._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestReservedFields) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestReservedFields> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestReservedFields_Descriptor()
module TestReservedFields =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestReservedFields._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestReservedFields._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestReservedFields>(global.System.Func<_>(empty))
type TestForeignNested = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable ForeignNested: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestForeignNested = {
        TestForeignNested._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestForeignNested.ForeignNested = me.ForeignNested |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>).Clone())
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.ForeignNested <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteMessage(me.ForeignNested.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.ForeignNested <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.ForeignNested.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestForeignNested) =
        if other.ForeignNested <> ValueNone
        then
            if me.ForeignNested.IsNone
            then me.ForeignNested <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage.empty())
            (me.ForeignNested.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage>).MergeFrom(other.ForeignNested.Value)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                if me.ForeignNested.IsNone
                then me.ForeignNested <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.Types.NestedMessage.empty())
                input.ReadMessage(me.ForeignNested.Value)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestForeignNested> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestForeignNested_Descriptor()
module TestForeignNested =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestForeignNested._UnknownFields = null
        TestForeignNested.ForeignNested = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestForeignNested._UnknownFields = null
        TestForeignNested.ForeignNested = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestForeignNested>(global.System.Func<_>(empty))
    let ForeignNestedFieldNumber = 1
type TestReallyLargeTagNumber = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable A: ValueOption<int32>
    mutable Bb: ValueOption<int32>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestReallyLargeTagNumber = {
        TestReallyLargeTagNumber._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestReallyLargeTagNumber.A = me.A
        TestReallyLargeTagNumber.Bb = me.Bb
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.A <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteInt32(me.A.Value)
        if me.Bb <> ValueNone
        then
            output.WriteRawTag(248uy, 255uy, 255uy, 255uy, 7uy)
            output.WriteInt32(me.Bb.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.A <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.A.Value)
        if me.Bb <> ValueNone then size <- size + 5 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Bb.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestReallyLargeTagNumber) =
        if other.A <> ValueNone
        then me.A <- other.A
        if other.Bb <> ValueNone
        then me.Bb <- other.Bb
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.A <- ValueSome(input.ReadInt32())
            | 2147483640u ->
                me.Bb <- ValueSome(input.ReadInt32())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestReallyLargeTagNumber> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestReallyLargeTagNumber_Descriptor()
module TestReallyLargeTagNumber =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestReallyLargeTagNumber._UnknownFields = null
        TestReallyLargeTagNumber.A = ValueNone
        TestReallyLargeTagNumber.Bb = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestReallyLargeTagNumber._UnknownFields = null
        TestReallyLargeTagNumber.A = ValueNone
        TestReallyLargeTagNumber.Bb = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestReallyLargeTagNumber>(global.System.Func<_>(empty))
    let AFieldNumber = 1
    let BbFieldNumber = 268435455
type TestRecursiveMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable A: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRecursiveMessage>
    mutable I: ValueOption<int32>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestRecursiveMessage = {
        TestRecursiveMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestRecursiveMessage.A = me.A |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRecursiveMessage>).Clone())
        TestRecursiveMessage.I = me.I
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.A <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteMessage(me.A.Value)
        if me.I <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteInt32(me.I.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.A <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.A.Value)
        if me.I <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.I.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestRecursiveMessage) =
        if other.A <> ValueNone
        then
            if me.A.IsNone
            then me.A <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRecursiveMessage.empty())
            (me.A.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRecursiveMessage>).MergeFrom(other.A.Value)
        if other.I <> ValueNone
        then me.I <- other.I
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                if me.A.IsNone
                then me.A <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestRecursiveMessage.empty())
                input.ReadMessage(me.A.Value)
            | 16u ->
                me.I <- ValueSome(input.ReadInt32())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestRecursiveMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestRecursiveMessage_Descriptor()
module TestRecursiveMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestRecursiveMessage._UnknownFields = null
        TestRecursiveMessage.A = ValueNone
        TestRecursiveMessage.I = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestRecursiveMessage._UnknownFields = null
        TestRecursiveMessage.A = ValueNone
        TestRecursiveMessage.I = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestRecursiveMessage>(global.System.Func<_>(empty))
    let AFieldNumber = 1
    let IFieldNumber = 2
type TestMutualRecursionA = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Bb: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionB>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestMutualRecursionA = {
        TestMutualRecursionA._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestMutualRecursionA.Bb = me.Bb |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionB>).Clone())
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Bb <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteMessage(me.Bb.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Bb <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Bb.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestMutualRecursionA) =
        if other.Bb <> ValueNone
        then
            if me.Bb.IsNone
            then me.Bb <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionB.empty())
            (me.Bb.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionB>).MergeFrom(other.Bb.Value)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                if me.Bb.IsNone
                then me.Bb <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionB.empty())
                input.ReadMessage(me.Bb.Value)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestMutualRecursionA> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestMutualRecursionA_Descriptor()
module TestMutualRecursionA =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestMutualRecursionA._UnknownFields = null
        TestMutualRecursionA.Bb = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestMutualRecursionA._UnknownFields = null
        TestMutualRecursionA.Bb = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestMutualRecursionA>(global.System.Func<_>(empty))
    let BbFieldNumber = 1
type TestMutualRecursionB = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable A: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionA>
    mutable OptionalInt32: ValueOption<int32>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestMutualRecursionB = {
        TestMutualRecursionB._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestMutualRecursionB.A = me.A |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionA>).Clone())
        TestMutualRecursionB.OptionalInt32 = me.OptionalInt32
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.A <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteMessage(me.A.Value)
        if me.OptionalInt32 <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteInt32(me.OptionalInt32.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.A <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.A.Value)
        if me.OptionalInt32 <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.OptionalInt32.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestMutualRecursionB) =
        if other.A <> ValueNone
        then
            if me.A.IsNone
            then me.A <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionA.empty())
            (me.A.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionA>).MergeFrom(other.A.Value)
        if other.OptionalInt32 <> ValueNone
        then me.OptionalInt32 <- other.OptionalInt32
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                if me.A.IsNone
                then me.A <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestMutualRecursionA.empty())
                input.ReadMessage(me.A.Value)
            | 16u ->
                me.OptionalInt32 <- ValueSome(input.ReadInt32())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestMutualRecursionB> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestMutualRecursionB_Descriptor()
module TestMutualRecursionB =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestMutualRecursionB._UnknownFields = null
        TestMutualRecursionB.A = ValueNone
        TestMutualRecursionB.OptionalInt32 = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestMutualRecursionB._UnknownFields = null
        TestMutualRecursionB.A = ValueNone
        TestMutualRecursionB.OptionalInt32 = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestMutualRecursionB>(global.System.Func<_>(empty))
    let AFieldNumber = 1
    let OptionalInt32FieldNumber = 2
type TestEnumAllowAlias = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Value: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestEnumWithDupValue>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestEnumAllowAlias = {
        TestEnumAllowAlias._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestEnumAllowAlias.Value = me.Value
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Value <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteEnum(int me.Value.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Value <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Value.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestEnumAllowAlias) =
        if other.Value <> ValueNone
        then me.Value <- other.Value
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Value <- ValueSome(enum(input.ReadEnum()))
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestEnumAllowAlias> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestEnumAllowAlias_Descriptor()
module TestEnumAllowAlias =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestEnumAllowAlias._UnknownFields = null
        TestEnumAllowAlias.Value = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestEnumAllowAlias._UnknownFields = null
        TestEnumAllowAlias.Value = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestEnumAllowAlias>(global.System.Func<_>(empty))
    let ValueFieldNumber = 1
type TestCamelCaseFieldNames = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable PrimitiveField: ValueOption<int32>
    mutable StringField: ValueOption<string>
    mutable EnumField: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>
    mutable MessageField: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>
    RepeatedPrimitiveField: global.Google.Protobuf.Collections.RepeatedField<int32>
    RepeatedStringField: global.Google.Protobuf.Collections.RepeatedField<string>
    RepeatedEnumField: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>
    RepeatedMessageField: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestCamelCaseFieldNames = {
        TestCamelCaseFieldNames._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestCamelCaseFieldNames.PrimitiveField = me.PrimitiveField
        TestCamelCaseFieldNames.StringField = me.StringField
        TestCamelCaseFieldNames.EnumField = me.EnumField
        TestCamelCaseFieldNames.MessageField = me.MessageField |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>).Clone())
        TestCamelCaseFieldNames.RepeatedPrimitiveField = me.RepeatedPrimitiveField.Clone()
        TestCamelCaseFieldNames.RepeatedStringField = me.RepeatedStringField.Clone()
        TestCamelCaseFieldNames.RepeatedEnumField = me.RepeatedEnumField.Clone()
        TestCamelCaseFieldNames.RepeatedMessageField = me.RepeatedMessageField.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.PrimitiveField <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteInt32(me.PrimitiveField.Value)
        if me.StringField <> ValueNone
        then
            output.WriteRawTag(18uy)
            output.WriteString(me.StringField.Value)
        if me.EnumField <> ValueNone
        then
            output.WriteRawTag(24uy)
            output.WriteEnum(int me.EnumField.Value)
        if me.MessageField <> ValueNone
        then
            output.WriteRawTag(34uy)
            output.WriteMessage(me.MessageField.Value)
        me.RepeatedPrimitiveField.WriteTo(&output, TestCamelCaseFieldNames.RepeatedRepeatedPrimitiveFieldCodec)
        me.RepeatedStringField.WriteTo(&output, TestCamelCaseFieldNames.RepeatedRepeatedStringFieldCodec)
        me.RepeatedEnumField.WriteTo(&output, TestCamelCaseFieldNames.RepeatedRepeatedEnumFieldCodec)
        me.RepeatedMessageField.WriteTo(&output, TestCamelCaseFieldNames.RepeatedRepeatedMessageFieldCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.PrimitiveField <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.PrimitiveField.Value)
        if me.StringField <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.StringField.Value)
        if me.EnumField <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.EnumField.Value)
        if me.MessageField <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.MessageField.Value)
        size <- size + me.RepeatedPrimitiveField.CalculateSize(TestCamelCaseFieldNames.RepeatedRepeatedPrimitiveFieldCodec)
        size <- size + me.RepeatedStringField.CalculateSize(TestCamelCaseFieldNames.RepeatedRepeatedStringFieldCodec)
        size <- size + me.RepeatedEnumField.CalculateSize(TestCamelCaseFieldNames.RepeatedRepeatedEnumFieldCodec)
        size <- size + me.RepeatedMessageField.CalculateSize(TestCamelCaseFieldNames.RepeatedRepeatedMessageFieldCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestCamelCaseFieldNames) =
        if other.PrimitiveField <> ValueNone
        then me.PrimitiveField <- other.PrimitiveField
        if other.StringField <> ValueNone
        then me.StringField <- other.StringField
        if other.EnumField <> ValueNone
        then me.EnumField <- other.EnumField
        if other.MessageField <> ValueNone
        then
            if me.MessageField.IsNone
            then me.MessageField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage.empty())
            (me.MessageField.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>).MergeFrom(other.MessageField.Value)
        me.RepeatedPrimitiveField.Add(other.RepeatedPrimitiveField)
        me.RepeatedStringField.Add(other.RepeatedStringField)
        me.RepeatedEnumField.Add(other.RepeatedEnumField)
        me.RepeatedMessageField.Add(other.RepeatedMessageField)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.PrimitiveField <- ValueSome(input.ReadInt32())
            | 18u ->
                me.StringField <- ValueSome(input.ReadString())
            | 24u ->
                me.EnumField <- ValueSome(enum(input.ReadEnum()))
            | 34u ->
                if me.MessageField.IsNone
                then me.MessageField <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage.empty())
                input.ReadMessage(me.MessageField.Value)
            | 58u | 56u ->
                me.RepeatedPrimitiveField.AddEntriesFrom(&input, TestCamelCaseFieldNames.RepeatedRepeatedPrimitiveFieldCodec)
            | 66u ->
                me.RepeatedStringField.AddEntriesFrom(&input, TestCamelCaseFieldNames.RepeatedRepeatedStringFieldCodec)
            | 74u | 72u ->
                me.RepeatedEnumField.AddEntriesFrom(&input, TestCamelCaseFieldNames.RepeatedRepeatedEnumFieldCodec)
            | 82u ->
                me.RepeatedMessageField.AddEntriesFrom(&input, TestCamelCaseFieldNames.RepeatedRepeatedMessageFieldCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestCamelCaseFieldNames> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestCamelCaseFieldNames_Descriptor()
module TestCamelCaseFieldNames =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestCamelCaseFieldNames._UnknownFields = null
        TestCamelCaseFieldNames.PrimitiveField = ValueNone
        TestCamelCaseFieldNames.StringField = ValueNone
        TestCamelCaseFieldNames.EnumField = ValueNone
        TestCamelCaseFieldNames.MessageField = ValueNone
        TestCamelCaseFieldNames.RepeatedPrimitiveField = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestCamelCaseFieldNames.RepeatedStringField = global.Google.Protobuf.Collections.RepeatedField<string>()
        TestCamelCaseFieldNames.RepeatedEnumField = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>()
        TestCamelCaseFieldNames.RepeatedMessageField = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestCamelCaseFieldNames._UnknownFields = null
        TestCamelCaseFieldNames.PrimitiveField = ValueNone
        TestCamelCaseFieldNames.StringField = ValueNone
        TestCamelCaseFieldNames.EnumField = ValueNone
        TestCamelCaseFieldNames.MessageField = ValueNone
        TestCamelCaseFieldNames.RepeatedPrimitiveField = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestCamelCaseFieldNames.RepeatedStringField = global.Google.Protobuf.Collections.RepeatedField<string>()
        TestCamelCaseFieldNames.RepeatedEnumField = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>()
        TestCamelCaseFieldNames.RepeatedMessageField = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestCamelCaseFieldNames>(global.System.Func<_>(empty))
    let PrimitiveFieldFieldNumber = 1
    let StringFieldFieldNumber = 2
    let EnumFieldFieldNumber = 3
    let MessageFieldFieldNumber = 4
    let RepeatedPrimitiveFieldFieldNumber = 7
    let RepeatedStringFieldFieldNumber = 8
    let RepeatedEnumFieldFieldNumber = 9
    let RepeatedMessageFieldFieldNumber = 10
    let RepeatedRepeatedPrimitiveFieldCodec = global.Google.Protobuf.FieldCodec.ForInt32(56u)
    let RepeatedRepeatedStringFieldCodec = global.Google.Protobuf.FieldCodec.ForString(66u)
    let RepeatedRepeatedEnumFieldCodec = global.Google.Protobuf.FieldCodec.ForEnum(72u, global.System.Func<_,_>(fun x -> int x), global.System.Func<_,_>(fun x -> enum x))
    let RepeatedRepeatedMessageFieldCodec = global.Google.Protobuf.FieldCodec.ForMessage(82u, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignMessage.Parser)
type TestFieldOrderings = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable MyInt: ValueOption<int64>
    mutable MyString: ValueOption<string>
    mutable MyFloat: ValueOption<float32>
    mutable SingleNestedMessage: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings.Types.NestedMessage>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestFieldOrderings = {
        TestFieldOrderings._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestFieldOrderings.MyInt = me.MyInt
        TestFieldOrderings.MyString = me.MyString
        TestFieldOrderings.MyFloat = me.MyFloat
        TestFieldOrderings.SingleNestedMessage = me.SingleNestedMessage |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings.Types.NestedMessage>).Clone())
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.MyInt <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteInt64(me.MyInt.Value)
        if me.MyString <> ValueNone
        then
            output.WriteRawTag(90uy)
            output.WriteString(me.MyString.Value)
        if me.MyFloat <> ValueNone
        then
            output.WriteRawTag(173uy, 6uy)
            output.WriteFloat(me.MyFloat.Value)
        if me.SingleNestedMessage <> ValueNone
        then
            output.WriteRawTag(194uy, 12uy)
            output.WriteMessage(me.SingleNestedMessage.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.MyInt <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt64Size(me.MyInt.Value)
        if me.MyString <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.MyString.Value)
        if me.MyFloat <> ValueNone then size <- size + 6
        if me.SingleNestedMessage <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.SingleNestedMessage.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestFieldOrderings) =
        if other.MyInt <> ValueNone
        then me.MyInt <- other.MyInt
        if other.MyString <> ValueNone
        then me.MyString <- other.MyString
        if other.MyFloat <> ValueNone
        then me.MyFloat <- other.MyFloat
        if other.SingleNestedMessage <> ValueNone
        then
            if me.SingleNestedMessage.IsNone
            then me.SingleNestedMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings.Types.NestedMessage.empty())
            (me.SingleNestedMessage.Value :> global.Google.Protobuf.IMessage<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings.Types.NestedMessage>).MergeFrom(other.SingleNestedMessage.Value)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.MyInt <- ValueSome(input.ReadInt64())
            | 90u ->
                me.MyString <- ValueSome(input.ReadString())
            | 813u ->
                me.MyFloat <- ValueSome(input.ReadFloat())
            | 1602u ->
                if me.SingleNestedMessage.IsNone
                then me.SingleNestedMessage <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestFieldOrderings.Types.NestedMessage.empty())
                input.ReadMessage(me.SingleNestedMessage.Value)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestFieldOrderings> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestFieldOrderings_Descriptor()
module TestFieldOrderings =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestFieldOrderings._UnknownFields = null
        TestFieldOrderings.MyInt = ValueNone
        TestFieldOrderings.MyString = ValueNone
        TestFieldOrderings.MyFloat = ValueNone
        TestFieldOrderings.SingleNestedMessage = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestFieldOrderings._UnknownFields = null
        TestFieldOrderings.MyInt = ValueNone
        TestFieldOrderings.MyString = ValueNone
        TestFieldOrderings.MyFloat = ValueNone
        TestFieldOrderings.SingleNestedMessage = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestFieldOrderings>(global.System.Func<_>(empty))
    let MyStringFieldNumber = 11
    let MyIntFieldNumber = 1
    let MyFloatFieldNumber = 101
    let SingleNestedMessageFieldNumber = 200
    module Types =
        type NestedMessage = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            mutable Bb: ValueOption<int32>
            mutable Oo: ValueOption<int64>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : NestedMessage = {
                NestedMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                NestedMessage.Bb = me.Bb
                NestedMessage.Oo = me.Oo
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                if me.Bb <> ValueNone
                then
                    output.WriteRawTag(8uy)
                    output.WriteInt32(me.Bb.Value)
                if me.Oo <> ValueNone
                then
                    output.WriteRawTag(16uy)
                    output.WriteInt64(me.Oo.Value)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                if me.Bb <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Bb.Value)
                if me.Oo <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt64Size(me.Oo.Value)
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: NestedMessage) =
                if other.Bb <> ValueNone
                then me.Bb <- other.Bb
                if other.Oo <> ValueNone
                then me.Oo <- other.Oo
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 8u ->
                        me.Bb <- ValueSome(input.ReadInt32())
                    | 16u ->
                        me.Oo <- ValueSome(input.ReadInt64())
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<NestedMessage> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestFieldOrderings_NestedMessage_Descriptor()
        module NestedMessage =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                NestedMessage._UnknownFields = null
                NestedMessage.Bb = ValueNone
                NestedMessage.Oo = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                NestedMessage._UnknownFields = null
                NestedMessage.Bb = ValueNone
                NestedMessage.Oo = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<NestedMessage>(global.System.Func<_>(empty))
            let OoFieldNumber = 2
            let BbFieldNumber = 1
type SparseEnumMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable SparseEnum: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestSparseEnum>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : SparseEnumMessage = {
        SparseEnumMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        SparseEnumMessage.SparseEnum = me.SparseEnum
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.SparseEnum <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteEnum(int me.SparseEnum.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.SparseEnum <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.SparseEnum.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: SparseEnumMessage) =
        if other.SparseEnum <> ValueNone
        then me.SparseEnum <- other.SparseEnum
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.SparseEnum <- ValueSome(enum(input.ReadEnum()))
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<SparseEnumMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.SparseEnumMessage_Descriptor()
module SparseEnumMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        SparseEnumMessage._UnknownFields = null
        SparseEnumMessage.SparseEnum = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        SparseEnumMessage._UnknownFields = null
        SparseEnumMessage.SparseEnum = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<SparseEnumMessage>(global.System.Func<_>(empty))
    let SparseEnumFieldNumber = 1
type OneString = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Data: ValueOption<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : OneString = {
        OneString._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        OneString.Data = me.Data
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Data <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Data.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Data <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Data.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: OneString) =
        if other.Data <> ValueNone
        then me.Data <- other.Data
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Data <- ValueSome(input.ReadString())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<OneString> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.OneString_Descriptor()
module OneString =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        OneString._UnknownFields = null
        OneString.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        OneString._UnknownFields = null
        OneString.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<OneString>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
type MoreString = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    Data: global.Google.Protobuf.Collections.RepeatedField<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : MoreString = {
        MoreString._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        MoreString.Data = me.Data.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.Data.WriteTo(&output, MoreString.RepeatedDataCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.Data.CalculateSize(MoreString.RepeatedDataCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: MoreString) =
        me.Data.Add(other.Data)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Data.AddEntriesFrom(&input, MoreString.RepeatedDataCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<MoreString> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.MoreString_Descriptor()
module MoreString =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        MoreString._UnknownFields = null
        MoreString.Data = global.Google.Protobuf.Collections.RepeatedField<string>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        MoreString._UnknownFields = null
        MoreString.Data = global.Google.Protobuf.Collections.RepeatedField<string>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<MoreString>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
    let RepeatedDataCodec = global.Google.Protobuf.FieldCodec.ForString(10u)
type OneBytes = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Data: ValueOption<global.Google.Protobuf.ByteString>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : OneBytes = {
        OneBytes._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        OneBytes.Data = me.Data
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Data <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteBytes(me.Data.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Data <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeBytesSize(me.Data.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: OneBytes) =
        if other.Data <> ValueNone
        then me.Data <- other.Data
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Data <- ValueSome(input.ReadBytes())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<OneBytes> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.OneBytes_Descriptor()
module OneBytes =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        OneBytes._UnknownFields = null
        OneBytes.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        OneBytes._UnknownFields = null
        OneBytes.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<OneBytes>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
type MoreBytes = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Data: ValueOption<global.Google.Protobuf.ByteString>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : MoreBytes = {
        MoreBytes._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        MoreBytes.Data = me.Data
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Data <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteBytes(me.Data.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Data <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeBytesSize(me.Data.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: MoreBytes) =
        if other.Data <> ValueNone
        then me.Data <- other.Data
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Data <- ValueSome(input.ReadBytes())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<MoreBytes> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.MoreBytes_Descriptor()
module MoreBytes =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        MoreBytes._UnknownFields = null
        MoreBytes.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        MoreBytes._UnknownFields = null
        MoreBytes.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<MoreBytes>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
type Int32Message = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Data: ValueOption<int32>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Int32Message = {
        Int32Message._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Int32Message.Data = me.Data
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Data <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteInt32(me.Data.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Data <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Data.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Int32Message) =
        if other.Data <> ValueNone
        then me.Data <- other.Data
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Data <- ValueSome(input.ReadInt32())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Int32Message> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.Int32Message_Descriptor()
module Int32Message =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Int32Message._UnknownFields = null
        Int32Message.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Int32Message._UnknownFields = null
        Int32Message.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Int32Message>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
type Uint32Message = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Data: ValueOption<uint32>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Uint32Message = {
        Uint32Message._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Uint32Message.Data = me.Data
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Data <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteUInt32(me.Data.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Data <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeUInt32Size(me.Data.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Uint32Message) =
        if other.Data <> ValueNone
        then me.Data <- other.Data
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Data <- ValueSome(input.ReadUInt32())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Uint32Message> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.Uint32Message_Descriptor()
module Uint32Message =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Uint32Message._UnknownFields = null
        Uint32Message.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Uint32Message._UnknownFields = null
        Uint32Message.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Uint32Message>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
type Int64Message = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Data: ValueOption<int64>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Int64Message = {
        Int64Message._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Int64Message.Data = me.Data
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Data <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteInt64(me.Data.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Data <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt64Size(me.Data.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Int64Message) =
        if other.Data <> ValueNone
        then me.Data <- other.Data
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Data <- ValueSome(input.ReadInt64())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Int64Message> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.Int64Message_Descriptor()
module Int64Message =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Int64Message._UnknownFields = null
        Int64Message.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Int64Message._UnknownFields = null
        Int64Message.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Int64Message>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
type Uint64Message = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Data: ValueOption<uint64>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Uint64Message = {
        Uint64Message._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Uint64Message.Data = me.Data
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Data <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteUInt64(me.Data.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Data <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeUInt64Size(me.Data.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Uint64Message) =
        if other.Data <> ValueNone
        then me.Data <- other.Data
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Data <- ValueSome(input.ReadUInt64())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Uint64Message> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.Uint64Message_Descriptor()
module Uint64Message =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Uint64Message._UnknownFields = null
        Uint64Message.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Uint64Message._UnknownFields = null
        Uint64Message.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Uint64Message>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
type BoolMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Data: ValueOption<bool>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : BoolMessage = {
        BoolMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        BoolMessage.Data = me.Data
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Data <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteBool(me.Data.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Data <> ValueNone then size <- size + 2
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: BoolMessage) =
        if other.Data <> ValueNone
        then me.Data <- other.Data
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Data <- ValueSome(input.ReadBool())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<BoolMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.BoolMessage_Descriptor()
module BoolMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        BoolMessage._UnknownFields = null
        BoolMessage.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        BoolMessage._UnknownFields = null
        BoolMessage.Data = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<BoolMessage>(global.System.Func<_>(empty))
    let DataFieldNumber = 1
type TestOneof = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Foo: ValueOption<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestOneof = {
        TestOneof._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Foo = me.Foo
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        match me.Foo with
        | ValueNone -> ()
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooInt x) ->
            output.WriteRawTag(8uy)
            output.WriteInt32(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooString x) ->
            output.WriteRawTag(18uy)
            output.WriteString(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooMessage x) ->
            output.WriteRawTag(26uy)
            output.WriteMessage(x)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        match me.Foo with
        | ValueNone -> ()
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooInt x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooString x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(x)
        | ValueSome (global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooMessage x) -> size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(x)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestOneof) =
        if other.Foo <> ValueNone
        then me.Foo <- other.Foo
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                let value = input.ReadInt32()
                me.Foo <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooInt(value))
            | 18u ->
                let value = input.ReadString()
                me.Foo <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooString(value))
            | 26u ->
                let value = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes.empty()
                input.ReadMessage(value)
                me.Foo <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooMessage(value))
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.FooCase =
        match me.Foo with
        | ValueNone -> 0
        | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooInt _) -> 1
        | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooString _) -> 2
        | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooMessage _) -> 3
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearFoo() = me.Foo <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.FooInt
        with get() =
            match me.Foo with
            | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooInt x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Foo <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooInt x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.FooString
        with get() =
            match me.Foo with
            | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooString x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Foo <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooString x)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.FooMessage
        with get() =
            match me.Foo with
            | ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooMessage x) -> x
            | _ -> Unchecked.defaultof<_>
        and set(x) =
            me.Foo <- ValueSome(global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestOneof.Types.Foo.FooMessage x)
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestOneof> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestOneof_Descriptor()
module TestOneof =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestOneof._UnknownFields = null
        Foo = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestOneof._UnknownFields = null
        Foo = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestOneof>(global.System.Func<_>(empty))
    let FooIntFieldNumber = 1
    let FooStringFieldNumber = 2
    let FooMessageFieldNumber = 3
    module Types =
        type Foo =
        | FooInt of int32
        | FooString of string
        | FooMessage of global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestAllTypes
type TestPackedTypes = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    PackedInt32: global.Google.Protobuf.Collections.RepeatedField<int32>
    PackedInt64: global.Google.Protobuf.Collections.RepeatedField<int64>
    PackedUint32: global.Google.Protobuf.Collections.RepeatedField<uint32>
    PackedUint64: global.Google.Protobuf.Collections.RepeatedField<uint64>
    PackedSint32: global.Google.Protobuf.Collections.RepeatedField<int32>
    PackedSint64: global.Google.Protobuf.Collections.RepeatedField<int64>
    PackedFixed32: global.Google.Protobuf.Collections.RepeatedField<uint32>
    PackedFixed64: global.Google.Protobuf.Collections.RepeatedField<uint64>
    PackedSfixed32: global.Google.Protobuf.Collections.RepeatedField<int32>
    PackedSfixed64: global.Google.Protobuf.Collections.RepeatedField<int64>
    PackedFloat: global.Google.Protobuf.Collections.RepeatedField<float32>
    PackedDouble: global.Google.Protobuf.Collections.RepeatedField<float>
    PackedBool: global.Google.Protobuf.Collections.RepeatedField<bool>
    PackedEnum: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestPackedTypes = {
        TestPackedTypes._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestPackedTypes.PackedInt32 = me.PackedInt32.Clone()
        TestPackedTypes.PackedInt64 = me.PackedInt64.Clone()
        TestPackedTypes.PackedUint32 = me.PackedUint32.Clone()
        TestPackedTypes.PackedUint64 = me.PackedUint64.Clone()
        TestPackedTypes.PackedSint32 = me.PackedSint32.Clone()
        TestPackedTypes.PackedSint64 = me.PackedSint64.Clone()
        TestPackedTypes.PackedFixed32 = me.PackedFixed32.Clone()
        TestPackedTypes.PackedFixed64 = me.PackedFixed64.Clone()
        TestPackedTypes.PackedSfixed32 = me.PackedSfixed32.Clone()
        TestPackedTypes.PackedSfixed64 = me.PackedSfixed64.Clone()
        TestPackedTypes.PackedFloat = me.PackedFloat.Clone()
        TestPackedTypes.PackedDouble = me.PackedDouble.Clone()
        TestPackedTypes.PackedBool = me.PackedBool.Clone()
        TestPackedTypes.PackedEnum = me.PackedEnum.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.PackedInt32.WriteTo(&output, TestPackedTypes.RepeatedPackedInt32Codec)
        me.PackedInt64.WriteTo(&output, TestPackedTypes.RepeatedPackedInt64Codec)
        me.PackedUint32.WriteTo(&output, TestPackedTypes.RepeatedPackedUint32Codec)
        me.PackedUint64.WriteTo(&output, TestPackedTypes.RepeatedPackedUint64Codec)
        me.PackedSint32.WriteTo(&output, TestPackedTypes.RepeatedPackedSint32Codec)
        me.PackedSint64.WriteTo(&output, TestPackedTypes.RepeatedPackedSint64Codec)
        me.PackedFixed32.WriteTo(&output, TestPackedTypes.RepeatedPackedFixed32Codec)
        me.PackedFixed64.WriteTo(&output, TestPackedTypes.RepeatedPackedFixed64Codec)
        me.PackedSfixed32.WriteTo(&output, TestPackedTypes.RepeatedPackedSfixed32Codec)
        me.PackedSfixed64.WriteTo(&output, TestPackedTypes.RepeatedPackedSfixed64Codec)
        me.PackedFloat.WriteTo(&output, TestPackedTypes.RepeatedPackedFloatCodec)
        me.PackedDouble.WriteTo(&output, TestPackedTypes.RepeatedPackedDoubleCodec)
        me.PackedBool.WriteTo(&output, TestPackedTypes.RepeatedPackedBoolCodec)
        me.PackedEnum.WriteTo(&output, TestPackedTypes.RepeatedPackedEnumCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.PackedInt32.CalculateSize(TestPackedTypes.RepeatedPackedInt32Codec)
        size <- size + me.PackedInt64.CalculateSize(TestPackedTypes.RepeatedPackedInt64Codec)
        size <- size + me.PackedUint32.CalculateSize(TestPackedTypes.RepeatedPackedUint32Codec)
        size <- size + me.PackedUint64.CalculateSize(TestPackedTypes.RepeatedPackedUint64Codec)
        size <- size + me.PackedSint32.CalculateSize(TestPackedTypes.RepeatedPackedSint32Codec)
        size <- size + me.PackedSint64.CalculateSize(TestPackedTypes.RepeatedPackedSint64Codec)
        size <- size + me.PackedFixed32.CalculateSize(TestPackedTypes.RepeatedPackedFixed32Codec)
        size <- size + me.PackedFixed64.CalculateSize(TestPackedTypes.RepeatedPackedFixed64Codec)
        size <- size + me.PackedSfixed32.CalculateSize(TestPackedTypes.RepeatedPackedSfixed32Codec)
        size <- size + me.PackedSfixed64.CalculateSize(TestPackedTypes.RepeatedPackedSfixed64Codec)
        size <- size + me.PackedFloat.CalculateSize(TestPackedTypes.RepeatedPackedFloatCodec)
        size <- size + me.PackedDouble.CalculateSize(TestPackedTypes.RepeatedPackedDoubleCodec)
        size <- size + me.PackedBool.CalculateSize(TestPackedTypes.RepeatedPackedBoolCodec)
        size <- size + me.PackedEnum.CalculateSize(TestPackedTypes.RepeatedPackedEnumCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestPackedTypes) =
        me.PackedInt32.Add(other.PackedInt32)
        me.PackedInt64.Add(other.PackedInt64)
        me.PackedUint32.Add(other.PackedUint32)
        me.PackedUint64.Add(other.PackedUint64)
        me.PackedSint32.Add(other.PackedSint32)
        me.PackedSint64.Add(other.PackedSint64)
        me.PackedFixed32.Add(other.PackedFixed32)
        me.PackedFixed64.Add(other.PackedFixed64)
        me.PackedSfixed32.Add(other.PackedSfixed32)
        me.PackedSfixed64.Add(other.PackedSfixed64)
        me.PackedFloat.Add(other.PackedFloat)
        me.PackedDouble.Add(other.PackedDouble)
        me.PackedBool.Add(other.PackedBool)
        me.PackedEnum.Add(other.PackedEnum)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 722u | 720u ->
                me.PackedInt32.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedInt32Codec)
            | 730u | 728u ->
                me.PackedInt64.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedInt64Codec)
            | 738u | 736u ->
                me.PackedUint32.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedUint32Codec)
            | 746u | 744u ->
                me.PackedUint64.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedUint64Codec)
            | 754u | 752u ->
                me.PackedSint32.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedSint32Codec)
            | 762u | 760u ->
                me.PackedSint64.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedSint64Codec)
            | 770u | 773u ->
                me.PackedFixed32.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedFixed32Codec)
            | 778u | 777u ->
                me.PackedFixed64.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedFixed64Codec)
            | 786u | 789u ->
                me.PackedSfixed32.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedSfixed32Codec)
            | 794u | 793u ->
                me.PackedSfixed64.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedSfixed64Codec)
            | 802u | 805u ->
                me.PackedFloat.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedFloatCodec)
            | 810u | 809u ->
                me.PackedDouble.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedDoubleCodec)
            | 818u | 816u ->
                me.PackedBool.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedBoolCodec)
            | 826u | 824u ->
                me.PackedEnum.AddEntriesFrom(&input, TestPackedTypes.RepeatedPackedEnumCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestPackedTypes> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestPackedTypes_Descriptor()
module TestPackedTypes =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestPackedTypes._UnknownFields = null
        TestPackedTypes.PackedInt32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestPackedTypes.PackedInt64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestPackedTypes.PackedUint32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestPackedTypes.PackedUint64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestPackedTypes.PackedSint32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestPackedTypes.PackedSint64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestPackedTypes.PackedFixed32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestPackedTypes.PackedFixed64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestPackedTypes.PackedSfixed32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestPackedTypes.PackedSfixed64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestPackedTypes.PackedFloat = global.Google.Protobuf.Collections.RepeatedField<float32>()
        TestPackedTypes.PackedDouble = global.Google.Protobuf.Collections.RepeatedField<float>()
        TestPackedTypes.PackedBool = global.Google.Protobuf.Collections.RepeatedField<bool>()
        TestPackedTypes.PackedEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestPackedTypes._UnknownFields = null
        TestPackedTypes.PackedInt32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestPackedTypes.PackedInt64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestPackedTypes.PackedUint32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestPackedTypes.PackedUint64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestPackedTypes.PackedSint32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestPackedTypes.PackedSint64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestPackedTypes.PackedFixed32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestPackedTypes.PackedFixed64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestPackedTypes.PackedSfixed32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestPackedTypes.PackedSfixed64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestPackedTypes.PackedFloat = global.Google.Protobuf.Collections.RepeatedField<float32>()
        TestPackedTypes.PackedDouble = global.Google.Protobuf.Collections.RepeatedField<float>()
        TestPackedTypes.PackedBool = global.Google.Protobuf.Collections.RepeatedField<bool>()
        TestPackedTypes.PackedEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestPackedTypes>(global.System.Func<_>(empty))
    let PackedInt32FieldNumber = 90
    let PackedInt64FieldNumber = 91
    let PackedUint32FieldNumber = 92
    let PackedUint64FieldNumber = 93
    let PackedSint32FieldNumber = 94
    let PackedSint64FieldNumber = 95
    let PackedFixed32FieldNumber = 96
    let PackedFixed64FieldNumber = 97
    let PackedSfixed32FieldNumber = 98
    let PackedSfixed64FieldNumber = 99
    let PackedFloatFieldNumber = 100
    let PackedDoubleFieldNumber = 101
    let PackedBoolFieldNumber = 102
    let PackedEnumFieldNumber = 103
    let RepeatedPackedInt32Codec = global.Google.Protobuf.FieldCodec.ForInt32(720u)
    let RepeatedPackedInt64Codec = global.Google.Protobuf.FieldCodec.ForInt64(728u)
    let RepeatedPackedUint32Codec = global.Google.Protobuf.FieldCodec.ForUInt32(736u)
    let RepeatedPackedUint64Codec = global.Google.Protobuf.FieldCodec.ForUInt64(744u)
    let RepeatedPackedSint32Codec = global.Google.Protobuf.FieldCodec.ForSInt32(752u)
    let RepeatedPackedSint64Codec = global.Google.Protobuf.FieldCodec.ForSInt64(760u)
    let RepeatedPackedFixed32Codec = global.Google.Protobuf.FieldCodec.ForFixed32(773u)
    let RepeatedPackedFixed64Codec = global.Google.Protobuf.FieldCodec.ForFixed64(777u)
    let RepeatedPackedSfixed32Codec = global.Google.Protobuf.FieldCodec.ForSFixed32(789u)
    let RepeatedPackedSfixed64Codec = global.Google.Protobuf.FieldCodec.ForSFixed64(793u)
    let RepeatedPackedFloatCodec = global.Google.Protobuf.FieldCodec.ForFloat(805u)
    let RepeatedPackedDoubleCodec = global.Google.Protobuf.FieldCodec.ForDouble(809u)
    let RepeatedPackedBoolCodec = global.Google.Protobuf.FieldCodec.ForBool(816u)
    let RepeatedPackedEnumCodec = global.Google.Protobuf.FieldCodec.ForEnum(824u, global.System.Func<_,_>(fun x -> int x), global.System.Func<_,_>(fun x -> enum x))
type TestUnpackedTypes = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    UnpackedInt32: global.Google.Protobuf.Collections.RepeatedField<int32>
    UnpackedInt64: global.Google.Protobuf.Collections.RepeatedField<int64>
    UnpackedUint32: global.Google.Protobuf.Collections.RepeatedField<uint32>
    UnpackedUint64: global.Google.Protobuf.Collections.RepeatedField<uint64>
    UnpackedSint32: global.Google.Protobuf.Collections.RepeatedField<int32>
    UnpackedSint64: global.Google.Protobuf.Collections.RepeatedField<int64>
    UnpackedFixed32: global.Google.Protobuf.Collections.RepeatedField<uint32>
    UnpackedFixed64: global.Google.Protobuf.Collections.RepeatedField<uint64>
    UnpackedSfixed32: global.Google.Protobuf.Collections.RepeatedField<int32>
    UnpackedSfixed64: global.Google.Protobuf.Collections.RepeatedField<int64>
    UnpackedFloat: global.Google.Protobuf.Collections.RepeatedField<float32>
    UnpackedDouble: global.Google.Protobuf.Collections.RepeatedField<float>
    UnpackedBool: global.Google.Protobuf.Collections.RepeatedField<bool>
    UnpackedEnum: global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestUnpackedTypes = {
        TestUnpackedTypes._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestUnpackedTypes.UnpackedInt32 = me.UnpackedInt32.Clone()
        TestUnpackedTypes.UnpackedInt64 = me.UnpackedInt64.Clone()
        TestUnpackedTypes.UnpackedUint32 = me.UnpackedUint32.Clone()
        TestUnpackedTypes.UnpackedUint64 = me.UnpackedUint64.Clone()
        TestUnpackedTypes.UnpackedSint32 = me.UnpackedSint32.Clone()
        TestUnpackedTypes.UnpackedSint64 = me.UnpackedSint64.Clone()
        TestUnpackedTypes.UnpackedFixed32 = me.UnpackedFixed32.Clone()
        TestUnpackedTypes.UnpackedFixed64 = me.UnpackedFixed64.Clone()
        TestUnpackedTypes.UnpackedSfixed32 = me.UnpackedSfixed32.Clone()
        TestUnpackedTypes.UnpackedSfixed64 = me.UnpackedSfixed64.Clone()
        TestUnpackedTypes.UnpackedFloat = me.UnpackedFloat.Clone()
        TestUnpackedTypes.UnpackedDouble = me.UnpackedDouble.Clone()
        TestUnpackedTypes.UnpackedBool = me.UnpackedBool.Clone()
        TestUnpackedTypes.UnpackedEnum = me.UnpackedEnum.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.UnpackedInt32.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedInt32Codec)
        me.UnpackedInt64.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedInt64Codec)
        me.UnpackedUint32.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedUint32Codec)
        me.UnpackedUint64.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedUint64Codec)
        me.UnpackedSint32.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedSint32Codec)
        me.UnpackedSint64.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedSint64Codec)
        me.UnpackedFixed32.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedFixed32Codec)
        me.UnpackedFixed64.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedFixed64Codec)
        me.UnpackedSfixed32.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedSfixed32Codec)
        me.UnpackedSfixed64.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedSfixed64Codec)
        me.UnpackedFloat.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedFloatCodec)
        me.UnpackedDouble.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedDoubleCodec)
        me.UnpackedBool.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedBoolCodec)
        me.UnpackedEnum.WriteTo(&output, TestUnpackedTypes.RepeatedUnpackedEnumCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.UnpackedInt32.CalculateSize(TestUnpackedTypes.RepeatedUnpackedInt32Codec)
        size <- size + me.UnpackedInt64.CalculateSize(TestUnpackedTypes.RepeatedUnpackedInt64Codec)
        size <- size + me.UnpackedUint32.CalculateSize(TestUnpackedTypes.RepeatedUnpackedUint32Codec)
        size <- size + me.UnpackedUint64.CalculateSize(TestUnpackedTypes.RepeatedUnpackedUint64Codec)
        size <- size + me.UnpackedSint32.CalculateSize(TestUnpackedTypes.RepeatedUnpackedSint32Codec)
        size <- size + me.UnpackedSint64.CalculateSize(TestUnpackedTypes.RepeatedUnpackedSint64Codec)
        size <- size + me.UnpackedFixed32.CalculateSize(TestUnpackedTypes.RepeatedUnpackedFixed32Codec)
        size <- size + me.UnpackedFixed64.CalculateSize(TestUnpackedTypes.RepeatedUnpackedFixed64Codec)
        size <- size + me.UnpackedSfixed32.CalculateSize(TestUnpackedTypes.RepeatedUnpackedSfixed32Codec)
        size <- size + me.UnpackedSfixed64.CalculateSize(TestUnpackedTypes.RepeatedUnpackedSfixed64Codec)
        size <- size + me.UnpackedFloat.CalculateSize(TestUnpackedTypes.RepeatedUnpackedFloatCodec)
        size <- size + me.UnpackedDouble.CalculateSize(TestUnpackedTypes.RepeatedUnpackedDoubleCodec)
        size <- size + me.UnpackedBool.CalculateSize(TestUnpackedTypes.RepeatedUnpackedBoolCodec)
        size <- size + me.UnpackedEnum.CalculateSize(TestUnpackedTypes.RepeatedUnpackedEnumCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestUnpackedTypes) =
        me.UnpackedInt32.Add(other.UnpackedInt32)
        me.UnpackedInt64.Add(other.UnpackedInt64)
        me.UnpackedUint32.Add(other.UnpackedUint32)
        me.UnpackedUint64.Add(other.UnpackedUint64)
        me.UnpackedSint32.Add(other.UnpackedSint32)
        me.UnpackedSint64.Add(other.UnpackedSint64)
        me.UnpackedFixed32.Add(other.UnpackedFixed32)
        me.UnpackedFixed64.Add(other.UnpackedFixed64)
        me.UnpackedSfixed32.Add(other.UnpackedSfixed32)
        me.UnpackedSfixed64.Add(other.UnpackedSfixed64)
        me.UnpackedFloat.Add(other.UnpackedFloat)
        me.UnpackedDouble.Add(other.UnpackedDouble)
        me.UnpackedBool.Add(other.UnpackedBool)
        me.UnpackedEnum.Add(other.UnpackedEnum)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 722u | 720u ->
                me.UnpackedInt32.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedInt32Codec)
            | 730u | 728u ->
                me.UnpackedInt64.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedInt64Codec)
            | 738u | 736u ->
                me.UnpackedUint32.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedUint32Codec)
            | 746u | 744u ->
                me.UnpackedUint64.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedUint64Codec)
            | 754u | 752u ->
                me.UnpackedSint32.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedSint32Codec)
            | 762u | 760u ->
                me.UnpackedSint64.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedSint64Codec)
            | 770u | 773u ->
                me.UnpackedFixed32.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedFixed32Codec)
            | 778u | 777u ->
                me.UnpackedFixed64.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedFixed64Codec)
            | 786u | 789u ->
                me.UnpackedSfixed32.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedSfixed32Codec)
            | 794u | 793u ->
                me.UnpackedSfixed64.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedSfixed64Codec)
            | 802u | 805u ->
                me.UnpackedFloat.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedFloatCodec)
            | 810u | 809u ->
                me.UnpackedDouble.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedDoubleCodec)
            | 818u | 816u ->
                me.UnpackedBool.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedBoolCodec)
            | 826u | 824u ->
                me.UnpackedEnum.AddEntriesFrom(&input, TestUnpackedTypes.RepeatedUnpackedEnumCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestUnpackedTypes> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestUnpackedTypes_Descriptor()
module TestUnpackedTypes =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestUnpackedTypes._UnknownFields = null
        TestUnpackedTypes.UnpackedInt32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestUnpackedTypes.UnpackedInt64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestUnpackedTypes.UnpackedUint32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestUnpackedTypes.UnpackedUint64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestUnpackedTypes.UnpackedSint32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestUnpackedTypes.UnpackedSint64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestUnpackedTypes.UnpackedFixed32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestUnpackedTypes.UnpackedFixed64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestUnpackedTypes.UnpackedSfixed32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestUnpackedTypes.UnpackedSfixed64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestUnpackedTypes.UnpackedFloat = global.Google.Protobuf.Collections.RepeatedField<float32>()
        TestUnpackedTypes.UnpackedDouble = global.Google.Protobuf.Collections.RepeatedField<float>()
        TestUnpackedTypes.UnpackedBool = global.Google.Protobuf.Collections.RepeatedField<bool>()
        TestUnpackedTypes.UnpackedEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestUnpackedTypes._UnknownFields = null
        TestUnpackedTypes.UnpackedInt32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestUnpackedTypes.UnpackedInt64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestUnpackedTypes.UnpackedUint32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestUnpackedTypes.UnpackedUint64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestUnpackedTypes.UnpackedSint32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestUnpackedTypes.UnpackedSint64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestUnpackedTypes.UnpackedFixed32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestUnpackedTypes.UnpackedFixed64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestUnpackedTypes.UnpackedSfixed32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestUnpackedTypes.UnpackedSfixed64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestUnpackedTypes.UnpackedFloat = global.Google.Protobuf.Collections.RepeatedField<float32>()
        TestUnpackedTypes.UnpackedDouble = global.Google.Protobuf.Collections.RepeatedField<float>()
        TestUnpackedTypes.UnpackedBool = global.Google.Protobuf.Collections.RepeatedField<bool>()
        TestUnpackedTypes.UnpackedEnum = global.Google.Protobuf.Collections.RepeatedField<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.ForeignEnum>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestUnpackedTypes>(global.System.Func<_>(empty))
    let UnpackedInt32FieldNumber = 90
    let UnpackedInt64FieldNumber = 91
    let UnpackedUint32FieldNumber = 92
    let UnpackedUint64FieldNumber = 93
    let UnpackedSint32FieldNumber = 94
    let UnpackedSint64FieldNumber = 95
    let UnpackedFixed32FieldNumber = 96
    let UnpackedFixed64FieldNumber = 97
    let UnpackedSfixed32FieldNumber = 98
    let UnpackedSfixed64FieldNumber = 99
    let UnpackedFloatFieldNumber = 100
    let UnpackedDoubleFieldNumber = 101
    let UnpackedBoolFieldNumber = 102
    let UnpackedEnumFieldNumber = 103
    let RepeatedUnpackedInt32Codec = global.Google.Protobuf.FieldCodec.ForInt32(720u)
    let RepeatedUnpackedInt64Codec = global.Google.Protobuf.FieldCodec.ForInt64(728u)
    let RepeatedUnpackedUint32Codec = global.Google.Protobuf.FieldCodec.ForUInt32(736u)
    let RepeatedUnpackedUint64Codec = global.Google.Protobuf.FieldCodec.ForUInt64(744u)
    let RepeatedUnpackedSint32Codec = global.Google.Protobuf.FieldCodec.ForSInt32(752u)
    let RepeatedUnpackedSint64Codec = global.Google.Protobuf.FieldCodec.ForSInt64(760u)
    let RepeatedUnpackedFixed32Codec = global.Google.Protobuf.FieldCodec.ForFixed32(773u)
    let RepeatedUnpackedFixed64Codec = global.Google.Protobuf.FieldCodec.ForFixed64(777u)
    let RepeatedUnpackedSfixed32Codec = global.Google.Protobuf.FieldCodec.ForSFixed32(789u)
    let RepeatedUnpackedSfixed64Codec = global.Google.Protobuf.FieldCodec.ForSFixed64(793u)
    let RepeatedUnpackedFloatCodec = global.Google.Protobuf.FieldCodec.ForFloat(805u)
    let RepeatedUnpackedDoubleCodec = global.Google.Protobuf.FieldCodec.ForDouble(809u)
    let RepeatedUnpackedBoolCodec = global.Google.Protobuf.FieldCodec.ForBool(816u)
    let RepeatedUnpackedEnumCodec = global.Google.Protobuf.FieldCodec.ForEnum(824u, global.System.Func<_,_>(fun x -> int x), global.System.Func<_,_>(fun x -> enum x))
type TestRepeatedScalarDifferentTagSizes = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    RepeatedFixed32: global.Google.Protobuf.Collections.RepeatedField<uint32>
    RepeatedInt32: global.Google.Protobuf.Collections.RepeatedField<int32>
    RepeatedFixed64: global.Google.Protobuf.Collections.RepeatedField<uint64>
    RepeatedInt64: global.Google.Protobuf.Collections.RepeatedField<int64>
    RepeatedFloat: global.Google.Protobuf.Collections.RepeatedField<float32>
    RepeatedUint64: global.Google.Protobuf.Collections.RepeatedField<uint64>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestRepeatedScalarDifferentTagSizes = {
        TestRepeatedScalarDifferentTagSizes._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestRepeatedScalarDifferentTagSizes.RepeatedFixed32 = me.RepeatedFixed32.Clone()
        TestRepeatedScalarDifferentTagSizes.RepeatedInt32 = me.RepeatedInt32.Clone()
        TestRepeatedScalarDifferentTagSizes.RepeatedFixed64 = me.RepeatedFixed64.Clone()
        TestRepeatedScalarDifferentTagSizes.RepeatedInt64 = me.RepeatedInt64.Clone()
        TestRepeatedScalarDifferentTagSizes.RepeatedFloat = me.RepeatedFloat.Clone()
        TestRepeatedScalarDifferentTagSizes.RepeatedUint64 = me.RepeatedUint64.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.RepeatedFixed32.WriteTo(&output, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFixed32Codec)
        me.RepeatedInt32.WriteTo(&output, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedInt32Codec)
        me.RepeatedFixed64.WriteTo(&output, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFixed64Codec)
        me.RepeatedInt64.WriteTo(&output, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedInt64Codec)
        me.RepeatedFloat.WriteTo(&output, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFloatCodec)
        me.RepeatedUint64.WriteTo(&output, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedUint64Codec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.RepeatedFixed32.CalculateSize(TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFixed32Codec)
        size <- size + me.RepeatedInt32.CalculateSize(TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedInt32Codec)
        size <- size + me.RepeatedFixed64.CalculateSize(TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFixed64Codec)
        size <- size + me.RepeatedInt64.CalculateSize(TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedInt64Codec)
        size <- size + me.RepeatedFloat.CalculateSize(TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFloatCodec)
        size <- size + me.RepeatedUint64.CalculateSize(TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedUint64Codec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestRepeatedScalarDifferentTagSizes) =
        me.RepeatedFixed32.Add(other.RepeatedFixed32)
        me.RepeatedInt32.Add(other.RepeatedInt32)
        me.RepeatedFixed64.Add(other.RepeatedFixed64)
        me.RepeatedInt64.Add(other.RepeatedInt64)
        me.RepeatedFloat.Add(other.RepeatedFloat)
        me.RepeatedUint64.Add(other.RepeatedUint64)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 98u | 101u ->
                me.RepeatedFixed32.AddEntriesFrom(&input, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFixed32Codec)
            | 106u | 104u ->
                me.RepeatedInt32.AddEntriesFrom(&input, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedInt32Codec)
            | 16370u | 16369u ->
                me.RepeatedFixed64.AddEntriesFrom(&input, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFixed64Codec)
            | 16378u | 16376u ->
                me.RepeatedInt64.AddEntriesFrom(&input, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedInt64Codec)
            | 2097138u | 2097141u ->
                me.RepeatedFloat.AddEntriesFrom(&input, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedFloatCodec)
            | 2097146u | 2097144u ->
                me.RepeatedUint64.AddEntriesFrom(&input, TestRepeatedScalarDifferentTagSizes.RepeatedRepeatedUint64Codec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestRepeatedScalarDifferentTagSizes> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestRepeatedScalarDifferentTagSizes_Descriptor()
module TestRepeatedScalarDifferentTagSizes =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestRepeatedScalarDifferentTagSizes._UnknownFields = null
        TestRepeatedScalarDifferentTagSizes.RepeatedFixed32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestRepeatedScalarDifferentTagSizes.RepeatedInt32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestRepeatedScalarDifferentTagSizes.RepeatedFixed64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestRepeatedScalarDifferentTagSizes.RepeatedInt64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestRepeatedScalarDifferentTagSizes.RepeatedFloat = global.Google.Protobuf.Collections.RepeatedField<float32>()
        TestRepeatedScalarDifferentTagSizes.RepeatedUint64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestRepeatedScalarDifferentTagSizes._UnknownFields = null
        TestRepeatedScalarDifferentTagSizes.RepeatedFixed32 = global.Google.Protobuf.Collections.RepeatedField<uint32>()
        TestRepeatedScalarDifferentTagSizes.RepeatedInt32 = global.Google.Protobuf.Collections.RepeatedField<int32>()
        TestRepeatedScalarDifferentTagSizes.RepeatedFixed64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
        TestRepeatedScalarDifferentTagSizes.RepeatedInt64 = global.Google.Protobuf.Collections.RepeatedField<int64>()
        TestRepeatedScalarDifferentTagSizes.RepeatedFloat = global.Google.Protobuf.Collections.RepeatedField<float32>()
        TestRepeatedScalarDifferentTagSizes.RepeatedUint64 = global.Google.Protobuf.Collections.RepeatedField<uint64>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestRepeatedScalarDifferentTagSizes>(global.System.Func<_>(empty))
    let RepeatedFixed32FieldNumber = 12
    let RepeatedInt32FieldNumber = 13
    let RepeatedFixed64FieldNumber = 2046
    let RepeatedInt64FieldNumber = 2047
    let RepeatedFloatFieldNumber = 262142
    let RepeatedUint64FieldNumber = 262143
    let RepeatedRepeatedFixed32Codec = global.Google.Protobuf.FieldCodec.ForFixed32(101u)
    let RepeatedRepeatedInt32Codec = global.Google.Protobuf.FieldCodec.ForInt32(104u)
    let RepeatedRepeatedFixed64Codec = global.Google.Protobuf.FieldCodec.ForFixed64(16369u)
    let RepeatedRepeatedInt64Codec = global.Google.Protobuf.FieldCodec.ForInt64(16376u)
    let RepeatedRepeatedFloatCodec = global.Google.Protobuf.FieldCodec.ForFloat(2097141u)
    let RepeatedRepeatedUint64Codec = global.Google.Protobuf.FieldCodec.ForUInt64(2097144u)
type TestCommentInjectionMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable A: ValueOption<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestCommentInjectionMessage = {
        TestCommentInjectionMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        TestCommentInjectionMessage.A = me.A
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.A <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.A.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.A <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.A.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestCommentInjectionMessage) =
        if other.A <> ValueNone
        then me.A <- other.A
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.A <- ValueSome(input.ReadString())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestCommentInjectionMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestCommentInjectionMessage_Descriptor()
module TestCommentInjectionMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestCommentInjectionMessage._UnknownFields = null
        TestCommentInjectionMessage.A = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestCommentInjectionMessage._UnknownFields = null
        TestCommentInjectionMessage.A = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestCommentInjectionMessage>(global.System.Func<_>(empty))
    let AFieldNumber = 1
type FooRequest = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FooRequest = {
        FooRequest._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FooRequest) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FooRequest> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.FooRequest_Descriptor()
module FooRequest =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FooRequest._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FooRequest._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FooRequest>(global.System.Func<_>(empty))
type FooResponse = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FooResponse = {
        FooResponse._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FooResponse) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FooResponse> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.FooResponse_Descriptor()
module FooResponse =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FooResponse._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FooResponse._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FooResponse>(global.System.Func<_>(empty))
type FooClientMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FooClientMessage = {
        FooClientMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FooClientMessage) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FooClientMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.FooClientMessage_Descriptor()
module FooClientMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FooClientMessage._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FooClientMessage._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FooClientMessage>(global.System.Func<_>(empty))
type FooServerMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FooServerMessage = {
        FooServerMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FooServerMessage) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FooServerMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.FooServerMessage_Descriptor()
module FooServerMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FooServerMessage._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FooServerMessage._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FooServerMessage>(global.System.Func<_>(empty))
type BarRequest = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : BarRequest = {
        BarRequest._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: BarRequest) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<BarRequest> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.BarRequest_Descriptor()
module BarRequest =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        BarRequest._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        BarRequest._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<BarRequest>(global.System.Func<_>(empty))
type BarResponse = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : BarResponse = {
        BarResponse._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: BarResponse) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<BarResponse> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.BarResponse_Descriptor()
module BarResponse =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        BarResponse._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        BarResponse._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<BarResponse>(global.System.Func<_>(empty))
type TestEmptyMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : TestEmptyMessage = {
        TestEmptyMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: TestEmptyMessage) =
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<TestEmptyMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.TestEmptyMessage_Descriptor()
module TestEmptyMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        TestEmptyMessage._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        TestEmptyMessage._UnknownFields = null
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<TestEmptyMessage>(global.System.Func<_>(empty))
type CommentMessage = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Text: ValueOption<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : CommentMessage = {
        CommentMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        CommentMessage.Text = me.Text
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Text <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Text.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Text <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Text.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: CommentMessage) =
        if other.Text <> ValueNone
        then me.Text <- other.Text
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Text <- ValueSome(input.ReadString())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<CommentMessage> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.CommentMessage_Descriptor()
module CommentMessage =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        CommentMessage._UnknownFields = null
        CommentMessage.Text = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        CommentMessage._UnknownFields = null
        CommentMessage.Text = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<CommentMessage>(global.System.Func<_>(empty))
    let TextFieldNumber = 1
    module Types =
        type NestedCommentEnum =
        | [<global.Google.Protobuf.Reflection.OriginalName("ZERO_VALUE")>] ZeroValue = 0
        type NestedCommentMessage = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            mutable NestedText: ValueOption<string>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : NestedCommentMessage = {
                NestedCommentMessage._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                NestedCommentMessage.NestedText = me.NestedText
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                if me.NestedText <> ValueNone
                then
                    output.WriteRawTag(10uy)
                    output.WriteString(me.NestedText.Value)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                if me.NestedText <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.NestedText.Value)
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: NestedCommentMessage) =
                if other.NestedText <> ValueNone
                then me.NestedText <- other.NestedText
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 10u ->
                        me.NestedText <- ValueSome(input.ReadString())
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<NestedCommentMessage> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.CommentMessage_NestedCommentMessage_Descriptor()
        module NestedCommentMessage =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                NestedCommentMessage._UnknownFields = null
                NestedCommentMessage.NestedText = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                NestedCommentMessage._UnknownFields = null
                NestedCommentMessage.NestedText = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<NestedCommentMessage>(global.System.Func<_>(empty))
            let NestedTextFieldNumber = 1
module TestService =
    let __ServiceName : string = "protobuf_unittest3.TestService"
    let private __Helper_SerializeMessage<'t when 't :> global.Google.Protobuf.IBufferMessage>(message: 't, ctx: global.Grpc.Core.SerializationContext) =
        ctx.SetPayloadLength(message.CalculateSize())
        global.Google.Protobuf.MessageExtensions.WriteTo(message :> global.Google.Protobuf.IBufferMessage, ctx.GetBufferWriter())
        ctx.Complete()
    let private __Helper_DeserializeMessage<'t when 't :> global.Google.Protobuf.IMessage<'t>>(ctx: global.Grpc.Core.DeserializationContext, parser: global.Google.Protobuf.MessageParser<'t>) : 't =
        parser.ParseFrom(ctx.PayloadAsReadOnlySequence())
    let private __Marshaller_global_FSharp_GrpcCodeGenerator_TestProtos_FSharp_BarRequest: global.Grpc.Core.Marshaller<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest> = global.Grpc.Core.Marshallers.Create(global.System.Action<_,_>(fun msg ctx -> __Helper_SerializeMessage(msg, ctx)), global.System.Func<_,_>(fun ctx -> __Helper_DeserializeMessage(ctx, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest.Parser)))
    let private __Marshaller_global_FSharp_GrpcCodeGenerator_TestProtos_FSharp_BarResponse: global.Grpc.Core.Marshaller<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse> = global.Grpc.Core.Marshallers.Create(global.System.Action<_,_>(fun msg ctx -> __Helper_SerializeMessage(msg, ctx)), global.System.Func<_,_>(fun ctx -> __Helper_DeserializeMessage(ctx, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse.Parser)))
    let private __Marshaller_global_FSharp_GrpcCodeGenerator_TestProtos_FSharp_FooRequest: global.Grpc.Core.Marshaller<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest> = global.Grpc.Core.Marshallers.Create(global.System.Action<_,_>(fun msg ctx -> __Helper_SerializeMessage(msg, ctx)), global.System.Func<_,_>(fun ctx -> __Helper_DeserializeMessage(ctx, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest.Parser)))
    let private __Marshaller_global_FSharp_GrpcCodeGenerator_TestProtos_FSharp_FooResponse: global.Grpc.Core.Marshaller<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse> = global.Grpc.Core.Marshallers.Create(global.System.Action<_,_>(fun msg ctx -> __Helper_SerializeMessage(msg, ctx)), global.System.Func<_,_>(fun ctx -> __Helper_DeserializeMessage(ctx, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse.Parser)))
    let private __Method_Foo = global.Grpc.Core.Method<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse>(global.Grpc.Core.MethodType.Unary, __ServiceName, "Foo", __Marshaller_global_FSharp_GrpcCodeGenerator_TestProtos_FSharp_FooRequest, __Marshaller_global_FSharp_GrpcCodeGenerator_TestProtos_FSharp_FooResponse)
    let private __Method_Bar = global.Grpc.Core.Method<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse>(global.Grpc.Core.MethodType.Unary, __ServiceName, "Bar", __Marshaller_global_FSharp_GrpcCodeGenerator_TestProtos_FSharp_BarRequest, __Marshaller_global_FSharp_GrpcCodeGenerator_TestProtos_FSharp_BarResponse)
    let Descriptor : global.Google.Protobuf.Reflection.ServiceDescriptor = global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.UnittestProto3Reflection.Descriptor().Services.[0]
    type TestServiceMethodBinder =
        static member BindService(serviceImpl: TestServiceBase) : global.Grpc.Core.ServerServiceDefinition =
            global.Grpc.Core.ServerServiceDefinition.CreateBuilder().AddMethod(__Method_Foo, serviceImpl.Foo).AddMethod(__Method_Bar, serviceImpl.Bar).Build()
        static member BindService(serviceBinder: global.Grpc.Core.ServiceBinderBase, serviceImpl: TestServiceBase) =
            serviceBinder.AddMethod(__Method_Foo, if isNull (box serviceImpl) then null else global.Grpc.Core.UnaryServerMethod<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse>(serviceImpl.Foo))
            serviceBinder.AddMethod(__Method_Bar, if isNull (box serviceImpl) then null else global.Grpc.Core.UnaryServerMethod<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest, global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse>(serviceImpl.Bar))
    [<global.Grpc.Core.BindServiceMethod(typeof<TestServiceMethodBinder>, "BindService")>]
    [<AbstractClass>]
    type TestServiceBase() =
        abstract Foo : request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest -> context: global.Grpc.Core.ServerCallContext -> global.System.Threading.Tasks.Task<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse>
        abstract Bar : request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest -> context: global.Grpc.Core.ServerCallContext -> global.System.Threading.Tasks.Task<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse>
    type TestServiceClient =
        inherit global.Grpc.Core.ClientBase<TestServiceClient>
        new(channel: global.Grpc.Core.ChannelBase) = { inherit global.Grpc.Core.ClientBase<TestServiceClient>(channel) }
        new(callInvoker: global.Grpc.Core.CallInvoker) = { inherit global.Grpc.Core.ClientBase<TestServiceClient>(callInvoker) }
        new(configuration: global.Grpc.Core.ClientBase.ClientBaseConfiguration) = { inherit global.Grpc.Core.ClientBase<TestServiceClient>(configuration) }
        member me.Foo(request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest, ?headers: global.Grpc.Core.Metadata, ?deadline: global.System.DateTime, ?cancellationToken: global.System.Threading.CancellationToken) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse =
            me.Foo(request, global.Grpc.Core.CallOptions(defaultArg headers null, Option.toNullable deadline, defaultArg cancellationToken global.System.Threading.CancellationToken.None))
        member me.Foo(request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest, callOptions: global.Grpc.Core.CallOptions) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse =
            me.CallInvoker.BlockingUnaryCall(__Method_Foo, null, callOptions, request)
        member me.FooAsync(request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest, ?headers: global.Grpc.Core.Metadata, ?deadline: global.System.DateTime, ?cancellationToken: global.System.Threading.CancellationToken) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse> =
            me.FooAsync(request, global.Grpc.Core.CallOptions(defaultArg headers null, Option.toNullable deadline, defaultArg cancellationToken global.System.Threading.CancellationToken.None))
        member me.FooAsync(request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest, callOptions: global.Grpc.Core.CallOptions) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse> =
            me.CallInvoker.AsyncUnaryCall(__Method_Foo, null, callOptions, request)
        member me.Bar(request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest, ?headers: global.Grpc.Core.Metadata, ?deadline: global.System.DateTime, ?cancellationToken: global.System.Threading.CancellationToken) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse =
            me.Bar(request, global.Grpc.Core.CallOptions(defaultArg headers null, Option.toNullable deadline, defaultArg cancellationToken global.System.Threading.CancellationToken.None))
        member me.Bar(request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest, callOptions: global.Grpc.Core.CallOptions) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse =
            me.CallInvoker.BlockingUnaryCall(__Method_Bar, null, callOptions, request)
        member me.BarAsync(request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest, ?headers: global.Grpc.Core.Metadata, ?deadline: global.System.DateTime, ?cancellationToken: global.System.Threading.CancellationToken) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse> =
            me.BarAsync(request, global.Grpc.Core.CallOptions(defaultArg headers null, Option.toNullable deadline, defaultArg cancellationToken global.System.Threading.CancellationToken.None))
        member me.BarAsync(request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest, callOptions: global.Grpc.Core.CallOptions) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse> =
            me.CallInvoker.AsyncUnaryCall(__Method_Bar, null, callOptions, request)
        override __.NewInstance(configuration: global.Grpc.Core.ClientBase.ClientBaseConfiguration) = TestServiceClient(configuration)
    module TestServiceClient =
        module Functions =
            let foo (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse = client.Foo(request)
            let fooOptions (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (options: global.Grpc.Core.CallOptions) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse = client.Foo(request, options)
            let fooHeaders (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (headers: global.Grpc.Core.Metadata) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse = client.Foo(request, headers)
            let fooAsync (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse> = client.FooAsync(request)
            let fooOptionsAsync (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (options: global.Grpc.Core.CallOptions) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse> = client.FooAsync(request, options)
            let fooHeadersAsync (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (headers: global.Grpc.Core.Metadata) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooRequest) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.FooResponse> = client.FooAsync(request, headers)
            let bar (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse = client.Bar(request)
            let barOptions (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (options: global.Grpc.Core.CallOptions) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse = client.Bar(request, options)
            let barHeaders (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (headers: global.Grpc.Core.Metadata) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest) : global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse = client.Bar(request, headers)
            let barAsync (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse> = client.BarAsync(request)
            let barOptionsAsync (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (options: global.Grpc.Core.CallOptions) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse> = client.BarAsync(request, options)
            let barHeadersAsync (client: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.TestService.TestServiceClient) (headers: global.Grpc.Core.Metadata) (request: global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarRequest) : global.Grpc.Core.AsyncUnaryCall<global.FSharp.GrpcCodeGenerator.TestProtos.FSharp.BarResponse> = client.BarAsync(request, headers)
// End of auto-generated code
