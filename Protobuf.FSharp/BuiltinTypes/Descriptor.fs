// <auto-generated>
//     Generated by the F# GRPC code generator. DO NOT EDIT!
//     source: google/protobuf/descriptor.proto
// </auto-generated>
namespace rec Google.Protobuf.FSharp.Reflection
#nowarn "40"
module DescriptorReflection =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FileDescriptorSet_Descriptor() = Descriptor().MessageTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FileDescriptorProto_Descriptor() = Descriptor().MessageTypes.[1]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DescriptorProto_Descriptor() = Descriptor().MessageTypes.[2]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DescriptorProto_ExtensionRange_Descriptor() = DescriptorProto_Descriptor().NestedTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DescriptorProto_ReservedRange_Descriptor() = DescriptorProto_Descriptor().NestedTypes.[1]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal ExtensionRangeOptions_Descriptor() = Descriptor().MessageTypes.[3]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FieldDescriptorProto_Descriptor() = Descriptor().MessageTypes.[4]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal OneofDescriptorProto_Descriptor() = Descriptor().MessageTypes.[5]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal EnumDescriptorProto_Descriptor() = Descriptor().MessageTypes.[6]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal EnumDescriptorProto_EnumReservedRange_Descriptor() = EnumDescriptorProto_Descriptor().NestedTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal EnumValueDescriptorProto_Descriptor() = Descriptor().MessageTypes.[7]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal ServiceDescriptorProto_Descriptor() = Descriptor().MessageTypes.[8]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal MethodDescriptorProto_Descriptor() = Descriptor().MessageTypes.[9]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FileOptions_Descriptor() = Descriptor().MessageTypes.[10]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal MessageOptions_Descriptor() = Descriptor().MessageTypes.[11]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal FieldOptions_Descriptor() = Descriptor().MessageTypes.[12]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal OneofOptions_Descriptor() = Descriptor().MessageTypes.[13]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal EnumOptions_Descriptor() = Descriptor().MessageTypes.[14]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal EnumValueOptions_Descriptor() = Descriptor().MessageTypes.[15]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal ServiceOptions_Descriptor() = Descriptor().MessageTypes.[16]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal MethodOptions_Descriptor() = Descriptor().MessageTypes.[17]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal UninterpretedOption_Descriptor() = Descriptor().MessageTypes.[18]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal UninterpretedOption_NamePart_Descriptor() = UninterpretedOption_Descriptor().NestedTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal SourceCodeInfo_Descriptor() = Descriptor().MessageTypes.[19]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal SourceCodeInfo_Location_Descriptor() = SourceCodeInfo_Descriptor().NestedTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal GeneratedCodeInfo_Descriptor() = Descriptor().MessageTypes.[20]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal GeneratedCodeInfo_Annotation_Descriptor() = GeneratedCodeInfo_Descriptor().NestedTypes.[0]
    let private descriptorBackingField: global.System.Lazy<global.Google.Protobuf.Reflection.FileDescriptor> =
        let descriptorData = global.System.Convert.FromBase64String("\
            CiBnb29nbGUvcHJvdG9idWYvZGVzY3JpcHRvci5wcm90bxIPZ29vZ2xlLnByb3RvYnVmIk0KEUZpbGVE\
            ZXNjcmlwdG9yU2V0EjgKBGZpbGUYASADKAsyJC5nb29nbGUucHJvdG9idWYuRmlsZURlc2NyaXB0b3JQ\
            cm90b1IEZmlsZSLkBAoTRmlsZURlc2NyaXB0b3JQcm90bxISCgRuYW1lGAEgASgJUgRuYW1lEhgKB3Bh\
            Y2thZ2UYAiABKAlSB3BhY2thZ2USHgoKZGVwZW5kZW5jeRgDIAMoCVIKZGVwZW5kZW5jeRIrChFwdWJs\
            aWNfZGVwZW5kZW5jeRgKIAMoBVIQcHVibGljRGVwZW5kZW5jeRInCg93ZWFrX2RlcGVuZGVuY3kYCyAD\
            KAVSDndlYWtEZXBlbmRlbmN5EkMKDG1lc3NhZ2VfdHlwZRgEIAMoCzIgLmdvb2dsZS5wcm90b2J1Zi5E\
            ZXNjcmlwdG9yUHJvdG9SC21lc3NhZ2VUeXBlEkEKCWVudW1fdHlwZRgFIAMoCzIkLmdvb2dsZS5wcm90\
            b2J1Zi5FbnVtRGVzY3JpcHRvclByb3RvUghlbnVtVHlwZRJBCgdzZXJ2aWNlGAYgAygLMicuZ29vZ2xl\
            LnByb3RvYnVmLlNlcnZpY2VEZXNjcmlwdG9yUHJvdG9SB3NlcnZpY2USQwoJZXh0ZW5zaW9uGAcgAygL\
            MiUuZ29vZ2xlLnByb3RvYnVmLkZpZWxkRGVzY3JpcHRvclByb3RvUglleHRlbnNpb24SNgoHb3B0aW9u\
            cxgIIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5GaWxlT3B0aW9uc1IHb3B0aW9ucxJJChBzb3VyY2VfY29k\
            ZV9pbmZvGAkgASgLMh8uZ29vZ2xlLnByb3RvYnVmLlNvdXJjZUNvZGVJbmZvUg5zb3VyY2VDb2RlSW5m\
            bxIWCgZzeW50YXgYDCABKAlSBnN5bnRheCK5BgoPRGVzY3JpcHRvclByb3RvEhIKBG5hbWUYASABKAlS\
            BG5hbWUSOwoFZmllbGQYAiADKAsyJS5nb29nbGUucHJvdG9idWYuRmllbGREZXNjcmlwdG9yUHJvdG9S\
            BWZpZWxkEkMKCWV4dGVuc2lvbhgGIAMoCzIlLmdvb2dsZS5wcm90b2J1Zi5GaWVsZERlc2NyaXB0b3JQ\
            cm90b1IJZXh0ZW5zaW9uEkEKC25lc3RlZF90eXBlGAMgAygLMiAuZ29vZ2xlLnByb3RvYnVmLkRlc2Ny\
            aXB0b3JQcm90b1IKbmVzdGVkVHlwZRJBCgllbnVtX3R5cGUYBCADKAsyJC5nb29nbGUucHJvdG9idWYu\
            RW51bURlc2NyaXB0b3JQcm90b1IIZW51bVR5cGUSWAoPZXh0ZW5zaW9uX3JhbmdlGAUgAygLMi8uZ29v\
            Z2xlLnByb3RvYnVmLkRlc2NyaXB0b3JQcm90by5FeHRlbnNpb25SYW5nZVIOZXh0ZW5zaW9uUmFuZ2US\
            RAoKb25lb2ZfZGVjbBgIIAMoCzIlLmdvb2dsZS5wcm90b2J1Zi5PbmVvZkRlc2NyaXB0b3JQcm90b1IJ\
            b25lb2ZEZWNsEjkKB29wdGlvbnMYByABKAsyHy5nb29nbGUucHJvdG9idWYuTWVzc2FnZU9wdGlvbnNS\
            B29wdGlvbnMSVQoOcmVzZXJ2ZWRfcmFuZ2UYCSADKAsyLi5nb29nbGUucHJvdG9idWYuRGVzY3JpcHRv\
            clByb3RvLlJlc2VydmVkUmFuZ2VSDXJlc2VydmVkUmFuZ2USIwoNcmVzZXJ2ZWRfbmFtZRgKIAMoCVIM\
            cmVzZXJ2ZWROYW1lGnoKDkV4dGVuc2lvblJhbmdlEhQKBXN0YXJ0GAEgASgFUgVzdGFydBIQCgNlbmQY\
            AiABKAVSA2VuZBJACgdvcHRpb25zGAMgASgLMiYuZ29vZ2xlLnByb3RvYnVmLkV4dGVuc2lvblJhbmdl\
            T3B0aW9uc1IHb3B0aW9ucxo3Cg1SZXNlcnZlZFJhbmdlEhQKBXN0YXJ0GAEgASgFUgVzdGFydBIQCgNl\
            bmQYAiABKAVSA2VuZCJ8ChVFeHRlbnNpb25SYW5nZU9wdGlvbnMSWAoUdW5pbnRlcnByZXRlZF9vcHRp\
            b24Y5wcgAygLMiQuZ29vZ2xlLnByb3RvYnVmLlVuaW50ZXJwcmV0ZWRPcHRpb25SE3VuaW50ZXJwcmV0\
            ZWRPcHRpb24qCQjoBxCAgICAAiLBBgoURmllbGREZXNjcmlwdG9yUHJvdG8SEgoEbmFtZRgBIAEoCVIE\
            bmFtZRIWCgZudW1iZXIYAyABKAVSBm51bWJlchJBCgVsYWJlbBgEIAEoDjIrLmdvb2dsZS5wcm90b2J1\
            Zi5GaWVsZERlc2NyaXB0b3JQcm90by5MYWJlbFIFbGFiZWwSPgoEdHlwZRgFIAEoDjIqLmdvb2dsZS5w\
            cm90b2J1Zi5GaWVsZERlc2NyaXB0b3JQcm90by5UeXBlUgR0eXBlEhsKCXR5cGVfbmFtZRgGIAEoCVII\
            dHlwZU5hbWUSGgoIZXh0ZW5kZWUYAiABKAlSCGV4dGVuZGVlEiMKDWRlZmF1bHRfdmFsdWUYByABKAlS\
            DGRlZmF1bHRWYWx1ZRIfCgtvbmVvZl9pbmRleBgJIAEoBVIKb25lb2ZJbmRleBIbCglqc29uX25hbWUY\
            CiABKAlSCGpzb25OYW1lEjcKB29wdGlvbnMYCCABKAsyHS5nb29nbGUucHJvdG9idWYuRmllbGRPcHRp\
            b25zUgdvcHRpb25zEicKD3Byb3RvM19vcHRpb25hbBgRIAEoCFIOcHJvdG8zT3B0aW9uYWwitgIKBFR5\
            cGUSDwoLVFlQRV9ET1VCTEUQARIOCgpUWVBFX0ZMT0FUEAISDgoKVFlQRV9JTlQ2NBADEg8KC1RZUEVf\
            VUlOVDY0EAQSDgoKVFlQRV9JTlQzMhAFEhAKDFRZUEVfRklYRUQ2NBAGEhAKDFRZUEVfRklYRUQzMhAH\
            Eg0KCVRZUEVfQk9PTBAIEg8KC1RZUEVfU1RSSU5HEAkSDgoKVFlQRV9HUk9VUBAKEhAKDFRZUEVfTUVT\
            U0FHRRALEg4KClRZUEVfQllURVMQDBIPCgtUWVBFX1VJTlQzMhANEg0KCVRZUEVfRU5VTRAOEhEKDVRZ\
            UEVfU0ZJWEVEMzIQDxIRCg1UWVBFX1NGSVhFRDY0EBASDwoLVFlQRV9TSU5UMzIQERIPCgtUWVBFX1NJ\
            TlQ2NBASIkMKBUxhYmVsEhIKDkxBQkVMX09QVElPTkFMEAESEgoOTEFCRUxfUkVRVUlSRUQQAhISCg5M\
            QUJFTF9SRVBFQVRFRBADImMKFE9uZW9mRGVzY3JpcHRvclByb3RvEhIKBG5hbWUYASABKAlSBG5hbWUS\
            NwoHb3B0aW9ucxgCIAEoCzIdLmdvb2dsZS5wcm90b2J1Zi5PbmVvZk9wdGlvbnNSB29wdGlvbnMi4wIK\
            E0VudW1EZXNjcmlwdG9yUHJvdG8SEgoEbmFtZRgBIAEoCVIEbmFtZRI/CgV2YWx1ZRgCIAMoCzIpLmdv\
            b2dsZS5wcm90b2J1Zi5FbnVtVmFsdWVEZXNjcmlwdG9yUHJvdG9SBXZhbHVlEjYKB29wdGlvbnMYAyAB\
            KAsyHC5nb29nbGUucHJvdG9idWYuRW51bU9wdGlvbnNSB29wdGlvbnMSXQoOcmVzZXJ2ZWRfcmFuZ2UY\
            BCADKAsyNi5nb29nbGUucHJvdG9idWYuRW51bURlc2NyaXB0b3JQcm90by5FbnVtUmVzZXJ2ZWRSYW5n\
            ZVINcmVzZXJ2ZWRSYW5nZRIjCg1yZXNlcnZlZF9uYW1lGAUgAygJUgxyZXNlcnZlZE5hbWUaOwoRRW51\
            bVJlc2VydmVkUmFuZ2USFAoFc3RhcnQYASABKAVSBXN0YXJ0EhAKA2VuZBgCIAEoBVIDZW5kIoMBChhF\
            bnVtVmFsdWVEZXNjcmlwdG9yUHJvdG8SEgoEbmFtZRgBIAEoCVIEbmFtZRIWCgZudW1iZXIYAiABKAVS\
            Bm51bWJlchI7CgdvcHRpb25zGAMgASgLMiEuZ29vZ2xlLnByb3RvYnVmLkVudW1WYWx1ZU9wdGlvbnNS\
            B29wdGlvbnMipwEKFlNlcnZpY2VEZXNjcmlwdG9yUHJvdG8SEgoEbmFtZRgBIAEoCVIEbmFtZRI+CgZt\
            ZXRob2QYAiADKAsyJi5nb29nbGUucHJvdG9idWYuTWV0aG9kRGVzY3JpcHRvclByb3RvUgZtZXRob2QS\
            OQoHb3B0aW9ucxgDIAEoCzIfLmdvb2dsZS5wcm90b2J1Zi5TZXJ2aWNlT3B0aW9uc1IHb3B0aW9ucyKJ\
            AgoVTWV0aG9kRGVzY3JpcHRvclByb3RvEhIKBG5hbWUYASABKAlSBG5hbWUSHQoKaW5wdXRfdHlwZRgC\
            IAEoCVIJaW5wdXRUeXBlEh8KC291dHB1dF90eXBlGAMgASgJUgpvdXRwdXRUeXBlEjgKB29wdGlvbnMY\
            BCABKAsyHi5nb29nbGUucHJvdG9idWYuTWV0aG9kT3B0aW9uc1IHb3B0aW9ucxIwChBjbGllbnRfc3Ry\
            ZWFtaW5nGAUgASgIOgVmYWxzZVIPY2xpZW50U3RyZWFtaW5nEjAKEHNlcnZlcl9zdHJlYW1pbmcYBiAB\
            KAg6BWZhbHNlUg9zZXJ2ZXJTdHJlYW1pbmcikQkKC0ZpbGVPcHRpb25zEiEKDGphdmFfcGFja2FnZRgB\
            IAEoCVILamF2YVBhY2thZ2USMAoUamF2YV9vdXRlcl9jbGFzc25hbWUYCCABKAlSEmphdmFPdXRlckNs\
            YXNzbmFtZRI1ChNqYXZhX211bHRpcGxlX2ZpbGVzGAogASgIOgVmYWxzZVIRamF2YU11bHRpcGxlRmls\
            ZXMSRAodamF2YV9nZW5lcmF0ZV9lcXVhbHNfYW5kX2hhc2gYFCABKAhCAhgBUhlqYXZhR2VuZXJhdGVF\
            cXVhbHNBbmRIYXNoEjoKFmphdmFfc3RyaW5nX2NoZWNrX3V0ZjgYGyABKAg6BWZhbHNlUhNqYXZhU3Ry\
            aW5nQ2hlY2tVdGY4ElMKDG9wdGltaXplX2ZvchgJIAEoDjIpLmdvb2dsZS5wcm90b2J1Zi5GaWxlT3B0\
            aW9ucy5PcHRpbWl6ZU1vZGU6BVNQRUVEUgtvcHRpbWl6ZUZvchIdCgpnb19wYWNrYWdlGAsgASgJUgln\
            b1BhY2thZ2USNQoTY2NfZ2VuZXJpY19zZXJ2aWNlcxgQIAEoCDoFZmFsc2VSEWNjR2VuZXJpY1NlcnZp\
            Y2VzEjkKFWphdmFfZ2VuZXJpY19zZXJ2aWNlcxgRIAEoCDoFZmFsc2VSE2phdmFHZW5lcmljU2Vydmlj\
            ZXMSNQoTcHlfZ2VuZXJpY19zZXJ2aWNlcxgSIAEoCDoFZmFsc2VSEXB5R2VuZXJpY1NlcnZpY2VzEjcK\
            FHBocF9nZW5lcmljX3NlcnZpY2VzGCogASgIOgVmYWxzZVIScGhwR2VuZXJpY1NlcnZpY2VzEiUKCmRl\
            cHJlY2F0ZWQYFyABKAg6BWZhbHNlUgpkZXByZWNhdGVkEi4KEGNjX2VuYWJsZV9hcmVuYXMYHyABKAg6\
            BHRydWVSDmNjRW5hYmxlQXJlbmFzEioKEW9iamNfY2xhc3NfcHJlZml4GCQgASgJUg9vYmpjQ2xhc3NQ\
            cmVmaXgSKQoQY3NoYXJwX25hbWVzcGFjZRglIAEoCVIPY3NoYXJwTmFtZXNwYWNlEiEKDHN3aWZ0X3By\
            ZWZpeBgnIAEoCVILc3dpZnRQcmVmaXgSKAoQcGhwX2NsYXNzX3ByZWZpeBgoIAEoCVIOcGhwQ2xhc3NQ\
            cmVmaXgSIwoNcGhwX25hbWVzcGFjZRgpIAEoCVIMcGhwTmFtZXNwYWNlEjQKFnBocF9tZXRhZGF0YV9u\
            YW1lc3BhY2UYLCABKAlSFHBocE1ldGFkYXRhTmFtZXNwYWNlEiEKDHJ1YnlfcGFja2FnZRgtIAEoCVIL\
            cnVieVBhY2thZ2USWAoUdW5pbnRlcnByZXRlZF9vcHRpb24Y5wcgAygLMiQuZ29vZ2xlLnByb3RvYnVm\
            LlVuaW50ZXJwcmV0ZWRPcHRpb25SE3VuaW50ZXJwcmV0ZWRPcHRpb24iOgoMT3B0aW1pemVNb2RlEgkK\
            BVNQRUVEEAESDQoJQ09ERV9TSVpFEAISEAoMTElURV9SVU5USU1FEAMqCQjoBxCAgICAAkoECCYQJyLj\
            AgoOTWVzc2FnZU9wdGlvbnMSPAoXbWVzc2FnZV9zZXRfd2lyZV9mb3JtYXQYASABKAg6BWZhbHNlUhRt\
            ZXNzYWdlU2V0V2lyZUZvcm1hdBJMCh9ub19zdGFuZGFyZF9kZXNjcmlwdG9yX2FjY2Vzc29yGAIgASgI\
            OgVmYWxzZVIcbm9TdGFuZGFyZERlc2NyaXB0b3JBY2Nlc3NvchIlCgpkZXByZWNhdGVkGAMgASgIOgVm\
            YWxzZVIKZGVwcmVjYXRlZBIbCgltYXBfZW50cnkYByABKAhSCG1hcEVudHJ5ElgKFHVuaW50ZXJwcmV0\
            ZWRfb3B0aW9uGOcHIAMoCzIkLmdvb2dsZS5wcm90b2J1Zi5VbmludGVycHJldGVkT3B0aW9uUhN1bmlu\
            dGVycHJldGVkT3B0aW9uKgkI6AcQgICAgAJKBAgEEAVKBAgFEAZKBAgGEAdKBAgIEAlKBAgJEAoi4gMK\
            DEZpZWxkT3B0aW9ucxJBCgVjdHlwZRgBIAEoDjIjLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE9wdGlvbnMu\
            Q1R5cGU6BlNUUklOR1IFY3R5cGUSFgoGcGFja2VkGAIgASgIUgZwYWNrZWQSRwoGanN0eXBlGAYgASgO\
            MiQuZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucy5KU1R5cGU6CUpTX05PUk1BTFIGanN0eXBlEhkK\
            BGxhenkYBSABKAg6BWZhbHNlUgRsYXp5EiUKCmRlcHJlY2F0ZWQYAyABKAg6BWZhbHNlUgpkZXByZWNh\
            dGVkEhkKBHdlYWsYCiABKAg6BWZhbHNlUgR3ZWFrElgKFHVuaW50ZXJwcmV0ZWRfb3B0aW9uGOcHIAMo\
            CzIkLmdvb2dsZS5wcm90b2J1Zi5VbmludGVycHJldGVkT3B0aW9uUhN1bmludGVycHJldGVkT3B0aW9u\
            Ii8KBUNUeXBlEgoKBlNUUklORxAAEggKBENPUkQQARIQCgxTVFJJTkdfUElFQ0UQAiI1CgZKU1R5cGUS\
            DQoJSlNfTk9STUFMEAASDQoJSlNfU1RSSU5HEAESDQoJSlNfTlVNQkVSEAIqCQjoBxCAgICAAkoECAQQ\
            BSJzCgxPbmVvZk9wdGlvbnMSWAoUdW5pbnRlcnByZXRlZF9vcHRpb24Y5wcgAygLMiQuZ29vZ2xlLnBy\
            b3RvYnVmLlVuaW50ZXJwcmV0ZWRPcHRpb25SE3VuaW50ZXJwcmV0ZWRPcHRpb24qCQjoBxCAgICAAiLA\
            AQoLRW51bU9wdGlvbnMSHwoLYWxsb3dfYWxpYXMYAiABKAhSCmFsbG93QWxpYXMSJQoKZGVwcmVjYXRl\
            ZBgDIAEoCDoFZmFsc2VSCmRlcHJlY2F0ZWQSWAoUdW5pbnRlcnByZXRlZF9vcHRpb24Y5wcgAygLMiQu\
            Z29vZ2xlLnByb3RvYnVmLlVuaW50ZXJwcmV0ZWRPcHRpb25SE3VuaW50ZXJwcmV0ZWRPcHRpb24qCQjo\
            BxCAgICAAkoECAUQBiKeAQoQRW51bVZhbHVlT3B0aW9ucxIlCgpkZXByZWNhdGVkGAEgASgIOgVmYWxz\
            ZVIKZGVwcmVjYXRlZBJYChR1bmludGVycHJldGVkX29wdGlvbhjnByADKAsyJC5nb29nbGUucHJvdG9i\
            dWYuVW5pbnRlcnByZXRlZE9wdGlvblITdW5pbnRlcnByZXRlZE9wdGlvbioJCOgHEICAgIACIpwBCg5T\
            ZXJ2aWNlT3B0aW9ucxIlCgpkZXByZWNhdGVkGCEgASgIOgVmYWxzZVIKZGVwcmVjYXRlZBJYChR1bmlu\
            dGVycHJldGVkX29wdGlvbhjnByADKAsyJC5nb29nbGUucHJvdG9idWYuVW5pbnRlcnByZXRlZE9wdGlv\
            blITdW5pbnRlcnByZXRlZE9wdGlvbioJCOgHEICAgIACIuACCg1NZXRob2RPcHRpb25zEiUKCmRlcHJl\
            Y2F0ZWQYISABKAg6BWZhbHNlUgpkZXByZWNhdGVkEnEKEWlkZW1wb3RlbmN5X2xldmVsGCIgASgOMi8u\
            Z29vZ2xlLnByb3RvYnVmLk1ldGhvZE9wdGlvbnMuSWRlbXBvdGVuY3lMZXZlbDoTSURFTVBPVEVOQ1lf\
            VU5LTk9XTlIQaWRlbXBvdGVuY3lMZXZlbBJYChR1bmludGVycHJldGVkX29wdGlvbhjnByADKAsyJC5n\
            b29nbGUucHJvdG9idWYuVW5pbnRlcnByZXRlZE9wdGlvblITdW5pbnRlcnByZXRlZE9wdGlvbiJQChBJ\
            ZGVtcG90ZW5jeUxldmVsEhcKE0lERU1QT1RFTkNZX1VOS05PV04QABITCg9OT19TSURFX0VGRkVDVFMQ\
            ARIOCgpJREVNUE9URU5UEAIqCQjoBxCAgICAAiKaAwoTVW5pbnRlcnByZXRlZE9wdGlvbhJBCgRuYW1l\
            GAIgAygLMi0uZ29vZ2xlLnByb3RvYnVmLlVuaW50ZXJwcmV0ZWRPcHRpb24uTmFtZVBhcnRSBG5hbWUS\
            KQoQaWRlbnRpZmllcl92YWx1ZRgDIAEoCVIPaWRlbnRpZmllclZhbHVlEiwKEnBvc2l0aXZlX2ludF92\
            YWx1ZRgEIAEoBFIQcG9zaXRpdmVJbnRWYWx1ZRIsChJuZWdhdGl2ZV9pbnRfdmFsdWUYBSABKANSEG5l\
            Z2F0aXZlSW50VmFsdWUSIQoMZG91YmxlX3ZhbHVlGAYgASgBUgtkb3VibGVWYWx1ZRIhCgxzdHJpbmdf\
            dmFsdWUYByABKAxSC3N0cmluZ1ZhbHVlEicKD2FnZ3JlZ2F0ZV92YWx1ZRgIIAEoCVIOYWdncmVnYXRl\
            VmFsdWUaSgoITmFtZVBhcnQSGwoJbmFtZV9wYXJ0GAEgAigJUghuYW1lUGFydBIhCgxpc19leHRlbnNp\
            b24YAiACKAhSC2lzRXh0ZW5zaW9uIqcCCg5Tb3VyY2VDb2RlSW5mbxJECghsb2NhdGlvbhgBIAMoCzIo\
            Lmdvb2dsZS5wcm90b2J1Zi5Tb3VyY2VDb2RlSW5mby5Mb2NhdGlvblIIbG9jYXRpb24azgEKCExvY2F0\
            aW9uEhYKBHBhdGgYASADKAVCAhABUgRwYXRoEhYKBHNwYW4YAiADKAVCAhABUgRzcGFuEikKEGxlYWRp\
            bmdfY29tbWVudHMYAyABKAlSD2xlYWRpbmdDb21tZW50cxIrChF0cmFpbGluZ19jb21tZW50cxgEIAEo\
            CVIQdHJhaWxpbmdDb21tZW50cxI6ChlsZWFkaW5nX2RldGFjaGVkX2NvbW1lbnRzGAYgAygJUhdsZWFk\
            aW5nRGV0YWNoZWRDb21tZW50cyLRAQoRR2VuZXJhdGVkQ29kZUluZm8STQoKYW5ub3RhdGlvbhgBIAMo\
            CzItLmdvb2dsZS5wcm90b2J1Zi5HZW5lcmF0ZWRDb2RlSW5mby5Bbm5vdGF0aW9uUgphbm5vdGF0aW9u\
            Gm0KCkFubm90YXRpb24SFgoEcGF0aBgBIAMoBUICEAFSBHBhdGgSHwoLc291cmNlX2ZpbGUYAiABKAlS\
            CnNvdXJjZUZpbGUSFAoFYmVnaW4YAyABKAVSBWJlZ2luEhAKA2VuZBgEIAEoBVIDZW5kQn4KE2NvbS5n\
            b29nbGUucHJvdG9idWZCEERlc2NyaXB0b3JQcm90b3NIAVotZ29vZ2xlLmdvbGFuZy5vcmcvcHJvdG9i\
            dWYvdHlwZXMvZGVzY3JpcHRvcnBi+AEBogIDR1BCqgIaR29vZ2xlLlByb3RvYnVmLlJlZmxlY3Rpb24=")
        global.System.Lazy<_>(
            (fun () ->
                global.Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(
                    descriptorData,
                    [|
                    |],
                    new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(
                        null,
                        null,
                        [|
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.FileDescriptorSet>, global.Google.Protobuf.FSharp.Reflection.FileDescriptorSet.Parser, [| "File" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.FileDescriptorProto>, global.Google.Protobuf.FSharp.Reflection.FileDescriptorProto.Parser, [| "Name"; "Package"; "Dependency"; "PublicDependency"; "WeakDependency"; "MessageType"; "EnumType"; "Service"; "Extension"; "Options"; "SourceCodeInfo"; "Syntax" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.DescriptorProto>, global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Parser, [| "Name"; "Field"; "Extension"; "NestedType"; "EnumType"; "ExtensionRange"; "OneofDecl"; "Options"; "ReservedRange"; "ReservedName" |], null, null, null, [| new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ExtensionRange>, global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ExtensionRange.Parser, [| "Start"; "End"; "Options" |], null, null, null, null); new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ReservedRange>, global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ReservedRange.Parser, [| "Start"; "End" |], null, null, null, null) |])
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.ExtensionRangeOptions>, global.Google.Protobuf.FSharp.Reflection.ExtensionRangeOptions.Parser, [| "UninterpretedOption" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>, global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto.Parser, [| "Name"; "Number"; "Label"; "Type"; "TypeName"; "Extendee"; "DefaultValue"; "OneofIndex"; "JsonName"; "Options"; "Proto3Optional" |], null, [| typeof<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto.Types.Type>; typeof<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto.Types.Label> |], null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.OneofDescriptorProto>, global.Google.Protobuf.FSharp.Reflection.OneofDescriptorProto.Parser, [| "Name"; "Options" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto>, global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Parser, [| "Name"; "Value"; "Options"; "ReservedRange"; "ReservedName" |], null, null, null, [| new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Types.EnumReservedRange>, global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Types.EnumReservedRange.Parser, [| "Start"; "End" |], null, null, null, null) |])
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.EnumValueDescriptorProto>, global.Google.Protobuf.FSharp.Reflection.EnumValueDescriptorProto.Parser, [| "Name"; "Number"; "Options" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.ServiceDescriptorProto>, global.Google.Protobuf.FSharp.Reflection.ServiceDescriptorProto.Parser, [| "Name"; "Method"; "Options" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.MethodDescriptorProto>, global.Google.Protobuf.FSharp.Reflection.MethodDescriptorProto.Parser, [| "Name"; "InputType"; "OutputType"; "Options"; "ClientStreaming"; "ServerStreaming" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.FileOptions>, global.Google.Protobuf.FSharp.Reflection.FileOptions.Parser, [| "JavaPackage"; "JavaOuterClassname"; "JavaMultipleFiles"; "JavaGenerateEqualsAndHash"; "JavaStringCheckUtf8"; "OptimizeFor"; "GoPackage"; "CcGenericServices"; "JavaGenericServices"; "PyGenericServices"; "PhpGenericServices"; "Deprecated"; "CcEnableArenas"; "ObjcClassPrefix"; "CsharpNamespace"; "SwiftPrefix"; "PhpClassPrefix"; "PhpNamespace"; "PhpMetadataNamespace"; "RubyPackage"; "UninterpretedOption" |], null, [| typeof<global.Google.Protobuf.FSharp.Reflection.FileOptions.Types.OptimizeMode> |], null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.MessageOptions>, global.Google.Protobuf.FSharp.Reflection.MessageOptions.Parser, [| "MessageSetWireFormat"; "NoStandardDescriptorAccessor"; "Deprecated"; "MapEntry"; "UninterpretedOption" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.FieldOptions>, global.Google.Protobuf.FSharp.Reflection.FieldOptions.Parser, [| "Ctype"; "Packed"; "Jstype"; "Lazy"; "Deprecated"; "Weak"; "UninterpretedOption" |], null, [| typeof<global.Google.Protobuf.FSharp.Reflection.FieldOptions.Types.CType>; typeof<global.Google.Protobuf.FSharp.Reflection.FieldOptions.Types.JSType> |], null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.OneofOptions>, global.Google.Protobuf.FSharp.Reflection.OneofOptions.Parser, [| "UninterpretedOption" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.EnumOptions>, global.Google.Protobuf.FSharp.Reflection.EnumOptions.Parser, [| "AllowAlias"; "Deprecated"; "UninterpretedOption" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.EnumValueOptions>, global.Google.Protobuf.FSharp.Reflection.EnumValueOptions.Parser, [| "Deprecated"; "UninterpretedOption" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.ServiceOptions>, global.Google.Protobuf.FSharp.Reflection.ServiceOptions.Parser, [| "Deprecated"; "UninterpretedOption" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.MethodOptions>, global.Google.Protobuf.FSharp.Reflection.MethodOptions.Parser, [| "Deprecated"; "IdempotencyLevel"; "UninterpretedOption" |], null, [| typeof<global.Google.Protobuf.FSharp.Reflection.MethodOptions.Types.IdempotencyLevel> |], null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser, [| "Name"; "IdentifierValue"; "PositiveIntValue"; "NegativeIntValue"; "DoubleValue"; "StringValue"; "AggregateValue" |], null, null, null, [| new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Types.NamePart>, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Types.NamePart.Parser, [| "NamePart"; "IsExtension" |], null, null, null, null) |])
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo>, global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.Parser, [| "Location" |], null, null, null, [| new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.Types.Location>, global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.Types.Location.Parser, [| "Path"; "Span"; "LeadingComments"; "TrailingComments"; "LeadingDetachedComments" |], null, null, null, null) |])
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.GeneratedCodeInfo>, global.Google.Protobuf.FSharp.Reflection.GeneratedCodeInfo.Parser, [| "Annotation" |], null, null, null, [| new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.Reflection.GeneratedCodeInfo.Types.Annotation>, global.Google.Protobuf.FSharp.Reflection.GeneratedCodeInfo.Types.Annotation.Parser, [| "Path"; "SourceFile"; "Begin"; "End" |], null, null, null, null) |])
                        |]
                    )
                )
            ),
            true
        )
    let Descriptor(): global.Google.Protobuf.Reflection.FileDescriptor = descriptorBackingField.Value
type FileDescriptorSet = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    File: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FileDescriptorProto>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FileDescriptorSet = {
        FileDescriptorSet._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        FileDescriptorSet.File = me.File.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.File.WriteTo(&output, FileDescriptorSet.RepeatedFileCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.File.CalculateSize(FileDescriptorSet.RepeatedFileCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FileDescriptorSet) =
        me.File.Add(other.File)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.File.AddEntriesFrom(&input, FileDescriptorSet.RepeatedFileCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FileDescriptorSet> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.FileDescriptorSet_Descriptor()
module FileDescriptorSet =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FileDescriptorSet._UnknownFields = null
        FileDescriptorSet.File = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FileDescriptorProto>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FileDescriptorSet._UnknownFields = null
        FileDescriptorSet.File = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FileDescriptorProto>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FileDescriptorSet>(global.System.Func<_>(empty))
    let FileFieldNumber = 1
    let RepeatedFileCodec = global.Google.Protobuf.FieldCodec.ForMessage(10u, global.Google.Protobuf.FSharp.Reflection.FileDescriptorProto.Parser)
type FileDescriptorProto = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    mutable Package: ValueOption<string>
    Dependency: global.Google.Protobuf.Collections.RepeatedField<string>
    MessageType: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto>
    EnumType: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto>
    Service: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.ServiceDescriptorProto>
    Extension: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>
    mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.FileOptions>
    mutable SourceCodeInfo: ValueOption<global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo>
    PublicDependency: global.Google.Protobuf.Collections.RepeatedField<int32>
    WeakDependency: global.Google.Protobuf.Collections.RepeatedField<int32>
    mutable Syntax: ValueOption<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FileDescriptorProto = {
        FileDescriptorProto._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        FileDescriptorProto.Name = me.Name
        FileDescriptorProto.Package = me.Package
        FileDescriptorProto.Dependency = me.Dependency.Clone()
        FileDescriptorProto.MessageType = me.MessageType.Clone()
        FileDescriptorProto.EnumType = me.EnumType.Clone()
        FileDescriptorProto.Service = me.Service.Clone()
        FileDescriptorProto.Extension = me.Extension.Clone()
        FileDescriptorProto.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.FileOptions>).Clone())
        FileDescriptorProto.SourceCodeInfo = me.SourceCodeInfo |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo>).Clone())
        FileDescriptorProto.PublicDependency = me.PublicDependency.Clone()
        FileDescriptorProto.WeakDependency = me.WeakDependency.Clone()
        FileDescriptorProto.Syntax = me.Syntax
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        if me.Package <> ValueNone
        then
            output.WriteRawTag(18uy)
            output.WriteString(me.Package.Value)
        me.Dependency.WriteTo(&output, FileDescriptorProto.RepeatedDependencyCodec)
        me.MessageType.WriteTo(&output, FileDescriptorProto.RepeatedMessageTypeCodec)
        me.EnumType.WriteTo(&output, FileDescriptorProto.RepeatedEnumTypeCodec)
        me.Service.WriteTo(&output, FileDescriptorProto.RepeatedServiceCodec)
        me.Extension.WriteTo(&output, FileDescriptorProto.RepeatedExtensionCodec)
        if me.Options <> ValueNone
        then
            output.WriteRawTag(66uy)
            output.WriteMessage(me.Options.Value)
        if me.SourceCodeInfo <> ValueNone
        then
            output.WriteRawTag(74uy)
            output.WriteMessage(me.SourceCodeInfo.Value)
        me.PublicDependency.WriteTo(&output, FileDescriptorProto.RepeatedPublicDependencyCodec)
        me.WeakDependency.WriteTo(&output, FileDescriptorProto.RepeatedWeakDependencyCodec)
        if me.Syntax <> ValueNone
        then
            output.WriteRawTag(98uy)
            output.WriteString(me.Syntax.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        if me.Package <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Package.Value)
        size <- size + me.Dependency.CalculateSize(FileDescriptorProto.RepeatedDependencyCodec)
        size <- size + me.MessageType.CalculateSize(FileDescriptorProto.RepeatedMessageTypeCodec)
        size <- size + me.EnumType.CalculateSize(FileDescriptorProto.RepeatedEnumTypeCodec)
        size <- size + me.Service.CalculateSize(FileDescriptorProto.RepeatedServiceCodec)
        size <- size + me.Extension.CalculateSize(FileDescriptorProto.RepeatedExtensionCodec)
        if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
        if me.SourceCodeInfo <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.SourceCodeInfo.Value)
        size <- size + me.PublicDependency.CalculateSize(FileDescriptorProto.RepeatedPublicDependencyCodec)
        size <- size + me.WeakDependency.CalculateSize(FileDescriptorProto.RepeatedWeakDependencyCodec)
        if me.Syntax <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Syntax.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FileDescriptorProto) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        if other.Package <> ValueNone
        then me.Package <- other.Package
        me.Dependency.Add(other.Dependency)
        me.MessageType.Add(other.MessageType)
        me.EnumType.Add(other.EnumType)
        me.Service.Add(other.Service)
        me.Extension.Add(other.Extension)
        if other.Options <> ValueNone
        then
            if me.Options.IsNone
            then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.FileOptions.empty())
            (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.FileOptions>).MergeFrom(other.Options.Value)
        if other.SourceCodeInfo <> ValueNone
        then
            if me.SourceCodeInfo.IsNone
            then me.SourceCodeInfo <- ValueSome(global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.empty())
            (me.SourceCodeInfo.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo>).MergeFrom(other.SourceCodeInfo.Value)
        me.PublicDependency.Add(other.PublicDependency)
        me.WeakDependency.Add(other.WeakDependency)
        if other.Syntax <> ValueNone
        then me.Syntax <- other.Syntax
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                me.Package <- ValueSome(input.ReadString())
            | 26u ->
                me.Dependency.AddEntriesFrom(&input, FileDescriptorProto.RepeatedDependencyCodec)
            | 34u ->
                me.MessageType.AddEntriesFrom(&input, FileDescriptorProto.RepeatedMessageTypeCodec)
            | 42u ->
                me.EnumType.AddEntriesFrom(&input, FileDescriptorProto.RepeatedEnumTypeCodec)
            | 50u ->
                me.Service.AddEntriesFrom(&input, FileDescriptorProto.RepeatedServiceCodec)
            | 58u ->
                me.Extension.AddEntriesFrom(&input, FileDescriptorProto.RepeatedExtensionCodec)
            | 66u ->
                if me.Options.IsNone
                then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.FileOptions.empty())
                input.ReadMessage(me.Options.Value)
            | 74u ->
                if me.SourceCodeInfo.IsNone
                then me.SourceCodeInfo <- ValueSome(global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.empty())
                input.ReadMessage(me.SourceCodeInfo.Value)
            | 82u | 80u ->
                me.PublicDependency.AddEntriesFrom(&input, FileDescriptorProto.RepeatedPublicDependencyCodec)
            | 90u | 88u ->
                me.WeakDependency.AddEntriesFrom(&input, FileDescriptorProto.RepeatedWeakDependencyCodec)
            | 98u ->
                me.Syntax <- ValueSome(input.ReadString())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasName =
        match me.Name with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearName () = me.Name <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasPackage =
        match me.Package with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearPackage () = me.Package <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasSyntax =
        match me.Syntax with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearSyntax () = me.Syntax <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FileDescriptorProto> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.FileDescriptorProto_Descriptor()
module FileDescriptorProto =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FileDescriptorProto._UnknownFields = null
        FileDescriptorProto.Name = ValueNone
        FileDescriptorProto.Package = ValueNone
        FileDescriptorProto.Dependency = global.Google.Protobuf.Collections.RepeatedField<string>()
        FileDescriptorProto.MessageType = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto>()
        FileDescriptorProto.EnumType = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto>()
        FileDescriptorProto.Service = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.ServiceDescriptorProto>()
        FileDescriptorProto.Extension = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>()
        FileDescriptorProto.Options = ValueNone
        FileDescriptorProto.SourceCodeInfo = ValueNone
        FileDescriptorProto.PublicDependency = global.Google.Protobuf.Collections.RepeatedField<int32>()
        FileDescriptorProto.WeakDependency = global.Google.Protobuf.Collections.RepeatedField<int32>()
        FileDescriptorProto.Syntax = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FileDescriptorProto._UnknownFields = null
        FileDescriptorProto.Name = ValueNone
        FileDescriptorProto.Package = ValueNone
        FileDescriptorProto.Dependency = global.Google.Protobuf.Collections.RepeatedField<string>()
        FileDescriptorProto.MessageType = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto>()
        FileDescriptorProto.EnumType = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto>()
        FileDescriptorProto.Service = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.ServiceDescriptorProto>()
        FileDescriptorProto.Extension = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>()
        FileDescriptorProto.Options = ValueNone
        FileDescriptorProto.SourceCodeInfo = ValueNone
        FileDescriptorProto.PublicDependency = global.Google.Protobuf.Collections.RepeatedField<int32>()
        FileDescriptorProto.WeakDependency = global.Google.Protobuf.Collections.RepeatedField<int32>()
        FileDescriptorProto.Syntax = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FileDescriptorProto>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let PackageFieldNumber = 2
    let DependencyFieldNumber = 3
    let PublicDependencyFieldNumber = 10
    let WeakDependencyFieldNumber = 11
    let MessageTypeFieldNumber = 4
    let EnumTypeFieldNumber = 5
    let ServiceFieldNumber = 6
    let ExtensionFieldNumber = 7
    let OptionsFieldNumber = 8
    let SourceCodeInfoFieldNumber = 9
    let SyntaxFieldNumber = 12
    let RepeatedDependencyCodec = global.Google.Protobuf.FieldCodec.ForString(26u)
    let RepeatedMessageTypeCodec = global.Google.Protobuf.FieldCodec.ForMessage(34u, global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Parser)
    let RepeatedEnumTypeCodec = global.Google.Protobuf.FieldCodec.ForMessage(42u, global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Parser)
    let RepeatedServiceCodec = global.Google.Protobuf.FieldCodec.ForMessage(50u, global.Google.Protobuf.FSharp.Reflection.ServiceDescriptorProto.Parser)
    let RepeatedExtensionCodec = global.Google.Protobuf.FieldCodec.ForMessage(58u, global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto.Parser)
    let RepeatedPublicDependencyCodec = global.Google.Protobuf.FieldCodec.ForInt32(80u)
    let RepeatedWeakDependencyCodec = global.Google.Protobuf.FieldCodec.ForInt32(88u)
type DescriptorProto = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    Field: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>
    NestedType: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto>
    EnumType: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto>
    ExtensionRange: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ExtensionRange>
    Extension: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>
    mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.MessageOptions>
    OneofDecl: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.OneofDescriptorProto>
    ReservedRange: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ReservedRange>
    ReservedName: global.Google.Protobuf.Collections.RepeatedField<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : DescriptorProto = {
        DescriptorProto._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        DescriptorProto.Name = me.Name
        DescriptorProto.Field = me.Field.Clone()
        DescriptorProto.NestedType = me.NestedType.Clone()
        DescriptorProto.EnumType = me.EnumType.Clone()
        DescriptorProto.ExtensionRange = me.ExtensionRange.Clone()
        DescriptorProto.Extension = me.Extension.Clone()
        DescriptorProto.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.MessageOptions>).Clone())
        DescriptorProto.OneofDecl = me.OneofDecl.Clone()
        DescriptorProto.ReservedRange = me.ReservedRange.Clone()
        DescriptorProto.ReservedName = me.ReservedName.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        me.Field.WriteTo(&output, DescriptorProto.RepeatedFieldCodec)
        me.NestedType.WriteTo(&output, DescriptorProto.RepeatedNestedTypeCodec)
        me.EnumType.WriteTo(&output, DescriptorProto.RepeatedEnumTypeCodec)
        me.ExtensionRange.WriteTo(&output, DescriptorProto.RepeatedExtensionRangeCodec)
        me.Extension.WriteTo(&output, DescriptorProto.RepeatedExtensionCodec)
        if me.Options <> ValueNone
        then
            output.WriteRawTag(58uy)
            output.WriteMessage(me.Options.Value)
        me.OneofDecl.WriteTo(&output, DescriptorProto.RepeatedOneofDeclCodec)
        me.ReservedRange.WriteTo(&output, DescriptorProto.RepeatedReservedRangeCodec)
        me.ReservedName.WriteTo(&output, DescriptorProto.RepeatedReservedNameCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        size <- size + me.Field.CalculateSize(DescriptorProto.RepeatedFieldCodec)
        size <- size + me.NestedType.CalculateSize(DescriptorProto.RepeatedNestedTypeCodec)
        size <- size + me.EnumType.CalculateSize(DescriptorProto.RepeatedEnumTypeCodec)
        size <- size + me.ExtensionRange.CalculateSize(DescriptorProto.RepeatedExtensionRangeCodec)
        size <- size + me.Extension.CalculateSize(DescriptorProto.RepeatedExtensionCodec)
        if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
        size <- size + me.OneofDecl.CalculateSize(DescriptorProto.RepeatedOneofDeclCodec)
        size <- size + me.ReservedRange.CalculateSize(DescriptorProto.RepeatedReservedRangeCodec)
        size <- size + me.ReservedName.CalculateSize(DescriptorProto.RepeatedReservedNameCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: DescriptorProto) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        me.Field.Add(other.Field)
        me.NestedType.Add(other.NestedType)
        me.EnumType.Add(other.EnumType)
        me.ExtensionRange.Add(other.ExtensionRange)
        me.Extension.Add(other.Extension)
        if other.Options <> ValueNone
        then
            if me.Options.IsNone
            then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.MessageOptions.empty())
            (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.MessageOptions>).MergeFrom(other.Options.Value)
        me.OneofDecl.Add(other.OneofDecl)
        me.ReservedRange.Add(other.ReservedRange)
        me.ReservedName.Add(other.ReservedName)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                me.Field.AddEntriesFrom(&input, DescriptorProto.RepeatedFieldCodec)
            | 26u ->
                me.NestedType.AddEntriesFrom(&input, DescriptorProto.RepeatedNestedTypeCodec)
            | 34u ->
                me.EnumType.AddEntriesFrom(&input, DescriptorProto.RepeatedEnumTypeCodec)
            | 42u ->
                me.ExtensionRange.AddEntriesFrom(&input, DescriptorProto.RepeatedExtensionRangeCodec)
            | 50u ->
                me.Extension.AddEntriesFrom(&input, DescriptorProto.RepeatedExtensionCodec)
            | 58u ->
                if me.Options.IsNone
                then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.MessageOptions.empty())
                input.ReadMessage(me.Options.Value)
            | 66u ->
                me.OneofDecl.AddEntriesFrom(&input, DescriptorProto.RepeatedOneofDeclCodec)
            | 74u ->
                me.ReservedRange.AddEntriesFrom(&input, DescriptorProto.RepeatedReservedRangeCodec)
            | 82u ->
                me.ReservedName.AddEntriesFrom(&input, DescriptorProto.RepeatedReservedNameCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasName =
        match me.Name with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearName () = me.Name <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<DescriptorProto> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.DescriptorProto_Descriptor()
module DescriptorProto =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        DescriptorProto._UnknownFields = null
        DescriptorProto.Name = ValueNone
        DescriptorProto.Field = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>()
        DescriptorProto.NestedType = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto>()
        DescriptorProto.EnumType = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto>()
        DescriptorProto.ExtensionRange = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ExtensionRange>()
        DescriptorProto.Extension = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>()
        DescriptorProto.Options = ValueNone
        DescriptorProto.OneofDecl = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.OneofDescriptorProto>()
        DescriptorProto.ReservedRange = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ReservedRange>()
        DescriptorProto.ReservedName = global.Google.Protobuf.Collections.RepeatedField<string>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        DescriptorProto._UnknownFields = null
        DescriptorProto.Name = ValueNone
        DescriptorProto.Field = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>()
        DescriptorProto.NestedType = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto>()
        DescriptorProto.EnumType = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto>()
        DescriptorProto.ExtensionRange = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ExtensionRange>()
        DescriptorProto.Extension = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto>()
        DescriptorProto.Options = ValueNone
        DescriptorProto.OneofDecl = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.OneofDescriptorProto>()
        DescriptorProto.ReservedRange = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ReservedRange>()
        DescriptorProto.ReservedName = global.Google.Protobuf.Collections.RepeatedField<string>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<DescriptorProto>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let FieldFieldNumber = 2
    let ExtensionFieldNumber = 6
    let NestedTypeFieldNumber = 3
    let EnumTypeFieldNumber = 4
    let ExtensionRangeFieldNumber = 5
    let OneofDeclFieldNumber = 8
    let OptionsFieldNumber = 7
    let ReservedRangeFieldNumber = 9
    let ReservedNameFieldNumber = 10
    let RepeatedFieldCodec = global.Google.Protobuf.FieldCodec.ForMessage(18u, global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto.Parser)
    let RepeatedNestedTypeCodec = global.Google.Protobuf.FieldCodec.ForMessage(26u, global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Parser)
    let RepeatedEnumTypeCodec = global.Google.Protobuf.FieldCodec.ForMessage(34u, global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Parser)
    let RepeatedExtensionRangeCodec = global.Google.Protobuf.FieldCodec.ForMessage(42u, global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ExtensionRange.Parser)
    let RepeatedExtensionCodec = global.Google.Protobuf.FieldCodec.ForMessage(50u, global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto.Parser)
    let RepeatedOneofDeclCodec = global.Google.Protobuf.FieldCodec.ForMessage(66u, global.Google.Protobuf.FSharp.Reflection.OneofDescriptorProto.Parser)
    let RepeatedReservedRangeCodec = global.Google.Protobuf.FieldCodec.ForMessage(74u, global.Google.Protobuf.FSharp.Reflection.DescriptorProto.Types.ReservedRange.Parser)
    let RepeatedReservedNameCodec = global.Google.Protobuf.FieldCodec.ForString(82u)
    module Types =
        type ExtensionRange = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            mutable Start: ValueOption<int32>
            mutable End: ValueOption<int32>
            mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.ExtensionRangeOptions>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : ExtensionRange = {
                ExtensionRange._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                ExtensionRange.Start = me.Start
                ExtensionRange.End = me.End
                ExtensionRange.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.ExtensionRangeOptions>).Clone())
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                if me.Start <> ValueNone
                then
                    output.WriteRawTag(8uy)
                    output.WriteInt32(me.Start.Value)
                if me.End <> ValueNone
                then
                    output.WriteRawTag(16uy)
                    output.WriteInt32(me.End.Value)
                if me.Options <> ValueNone
                then
                    output.WriteRawTag(26uy)
                    output.WriteMessage(me.Options.Value)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                if me.Start <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Start.Value)
                if me.End <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.End.Value)
                if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: ExtensionRange) =
                if other.Start <> ValueNone
                then me.Start <- other.Start
                if other.End <> ValueNone
                then me.End <- other.End
                if other.Options <> ValueNone
                then
                    if me.Options.IsNone
                    then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.ExtensionRangeOptions.empty())
                    (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.ExtensionRangeOptions>).MergeFrom(other.Options.Value)
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 8u ->
                        me.Start <- ValueSome(input.ReadInt32())
                    | 16u ->
                        me.End <- ValueSome(input.ReadInt32())
                    | 26u ->
                        if me.Options.IsNone
                        then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.ExtensionRangeOptions.empty())
                        input.ReadMessage(me.Options.Value)
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasStart =
                match me.Start with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearStart () = me.Start <- ValueNone
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasEnd =
                match me.End with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearEnd () = me.End <- ValueNone
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<ExtensionRange> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.DescriptorProto_ExtensionRange_Descriptor()
        module ExtensionRange =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                ExtensionRange._UnknownFields = null
                ExtensionRange.Start = ValueNone
                ExtensionRange.End = ValueNone
                ExtensionRange.Options = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                ExtensionRange._UnknownFields = null
                ExtensionRange.Start = ValueNone
                ExtensionRange.End = ValueNone
                ExtensionRange.Options = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<ExtensionRange>(global.System.Func<_>(empty))
            let StartFieldNumber = 1
            let EndFieldNumber = 2
            let OptionsFieldNumber = 3
        type ReservedRange = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            mutable Start: ValueOption<int32>
            mutable End: ValueOption<int32>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : ReservedRange = {
                ReservedRange._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                ReservedRange.Start = me.Start
                ReservedRange.End = me.End
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                if me.Start <> ValueNone
                then
                    output.WriteRawTag(8uy)
                    output.WriteInt32(me.Start.Value)
                if me.End <> ValueNone
                then
                    output.WriteRawTag(16uy)
                    output.WriteInt32(me.End.Value)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                if me.Start <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Start.Value)
                if me.End <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.End.Value)
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: ReservedRange) =
                if other.Start <> ValueNone
                then me.Start <- other.Start
                if other.End <> ValueNone
                then me.End <- other.End
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 8u ->
                        me.Start <- ValueSome(input.ReadInt32())
                    | 16u ->
                        me.End <- ValueSome(input.ReadInt32())
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasStart =
                match me.Start with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearStart () = me.Start <- ValueNone
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasEnd =
                match me.End with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearEnd () = me.End <- ValueNone
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<ReservedRange> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.DescriptorProto_ReservedRange_Descriptor()
        module ReservedRange =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                ReservedRange._UnknownFields = null
                ReservedRange.Start = ValueNone
                ReservedRange.End = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                ReservedRange._UnknownFields = null
                ReservedRange.Start = ValueNone
                ReservedRange.End = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<ReservedRange>(global.System.Func<_>(empty))
            let StartFieldNumber = 1
            let EndFieldNumber = 2
type ExtensionRangeOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<ExtensionRangeOptions>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : ExtensionRangeOptions = {
        ExtensionRangeOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        ExtensionRangeOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.UninterpretedOption.WriteTo(&output, ExtensionRangeOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.UninterpretedOption.CalculateSize(ExtensionRangeOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: ExtensionRangeOptions) =
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, ExtensionRangeOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<ExtensionRangeOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.ExtensionRangeOptions_Descriptor()
module ExtensionRangeOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        ExtensionRangeOptions._UnknownFields = null
        ExtensionRangeOptions._Extensions = null
        ExtensionRangeOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        ExtensionRangeOptions._UnknownFields = null
        ExtensionRangeOptions._Extensions = null
        ExtensionRangeOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<ExtensionRangeOptions>(global.System.Func<_>(empty))
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
type FieldDescriptorProto = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    mutable Extendee: ValueOption<string>
    mutable Number: ValueOption<int32>
    mutable Label: ValueOption<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto.Types.Label>
    mutable Type: ValueOption<global.Google.Protobuf.FSharp.Reflection.FieldDescriptorProto.Types.Type>
    mutable TypeName: ValueOption<string>
    mutable DefaultValue: ValueOption<string>
    mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.FieldOptions>
    mutable OneofIndex: ValueOption<int32>
    mutable JsonName: ValueOption<string>
    mutable Proto3Optional: ValueOption<bool>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FieldDescriptorProto = {
        FieldDescriptorProto._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        FieldDescriptorProto.Name = me.Name
        FieldDescriptorProto.Extendee = me.Extendee
        FieldDescriptorProto.Number = me.Number
        FieldDescriptorProto.Label = me.Label
        FieldDescriptorProto.Type = me.Type
        FieldDescriptorProto.TypeName = me.TypeName
        FieldDescriptorProto.DefaultValue = me.DefaultValue
        FieldDescriptorProto.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.FieldOptions>).Clone())
        FieldDescriptorProto.OneofIndex = me.OneofIndex
        FieldDescriptorProto.JsonName = me.JsonName
        FieldDescriptorProto.Proto3Optional = me.Proto3Optional
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        if me.Extendee <> ValueNone
        then
            output.WriteRawTag(18uy)
            output.WriteString(me.Extendee.Value)
        if me.Number <> ValueNone
        then
            output.WriteRawTag(24uy)
            output.WriteInt32(me.Number.Value)
        if me.Label <> ValueNone
        then
            output.WriteRawTag(32uy)
            output.WriteEnum(int me.Label.Value)
        if me.Type <> ValueNone
        then
            output.WriteRawTag(40uy)
            output.WriteEnum(int me.Type.Value)
        if me.TypeName <> ValueNone
        then
            output.WriteRawTag(50uy)
            output.WriteString(me.TypeName.Value)
        if me.DefaultValue <> ValueNone
        then
            output.WriteRawTag(58uy)
            output.WriteString(me.DefaultValue.Value)
        if me.Options <> ValueNone
        then
            output.WriteRawTag(66uy)
            output.WriteMessage(me.Options.Value)
        if me.OneofIndex <> ValueNone
        then
            output.WriteRawTag(72uy)
            output.WriteInt32(me.OneofIndex.Value)
        if me.JsonName <> ValueNone
        then
            output.WriteRawTag(82uy)
            output.WriteString(me.JsonName.Value)
        if me.Proto3Optional <> ValueNone
        then
            output.WriteRawTag(136uy, 1uy)
            output.WriteBool(me.Proto3Optional.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        if me.Extendee <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Extendee.Value)
        if me.Number <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Number.Value)
        if me.Label <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Label.Value)
        if me.Type <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Type.Value)
        if me.TypeName <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.TypeName.Value)
        if me.DefaultValue <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.DefaultValue.Value)
        if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
        if me.OneofIndex <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.OneofIndex.Value)
        if me.JsonName <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.JsonName.Value)
        if me.Proto3Optional <> ValueNone then size <- size + 3
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FieldDescriptorProto) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        if other.Extendee <> ValueNone
        then me.Extendee <- other.Extendee
        if other.Number <> ValueNone
        then me.Number <- other.Number
        if other.Label <> ValueNone
        then me.Label <- other.Label
        if other.Type <> ValueNone
        then me.Type <- other.Type
        if other.TypeName <> ValueNone
        then me.TypeName <- other.TypeName
        if other.DefaultValue <> ValueNone
        then me.DefaultValue <- other.DefaultValue
        if other.Options <> ValueNone
        then
            if me.Options.IsNone
            then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.FieldOptions.empty())
            (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.FieldOptions>).MergeFrom(other.Options.Value)
        if other.OneofIndex <> ValueNone
        then me.OneofIndex <- other.OneofIndex
        if other.JsonName <> ValueNone
        then me.JsonName <- other.JsonName
        if other.Proto3Optional <> ValueNone
        then me.Proto3Optional <- other.Proto3Optional
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                me.Extendee <- ValueSome(input.ReadString())
            | 24u ->
                me.Number <- ValueSome(input.ReadInt32())
            | 32u ->
                me.Label <- ValueSome(enum(input.ReadEnum()))
            | 40u ->
                me.Type <- ValueSome(enum(input.ReadEnum()))
            | 50u ->
                me.TypeName <- ValueSome(input.ReadString())
            | 58u ->
                me.DefaultValue <- ValueSome(input.ReadString())
            | 66u ->
                if me.Options.IsNone
                then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.FieldOptions.empty())
                input.ReadMessage(me.Options.Value)
            | 72u ->
                me.OneofIndex <- ValueSome(input.ReadInt32())
            | 82u ->
                me.JsonName <- ValueSome(input.ReadString())
            | 136u ->
                me.Proto3Optional <- ValueSome(input.ReadBool())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasName =
        match me.Name with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearName () = me.Name <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasExtendee =
        match me.Extendee with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearExtendee () = me.Extendee <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasNumber =
        match me.Number with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearNumber () = me.Number <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasLabel =
        match me.Label with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearLabel () = me.Label <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasType =
        match me.Type with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearType () = me.Type <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasTypeName =
        match me.TypeName with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearTypeName () = me.TypeName <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDefaultValue =
        match me.DefaultValue with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDefaultValue () = me.DefaultValue <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasOneofIndex =
        match me.OneofIndex with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearOneofIndex () = me.OneofIndex <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasJsonName =
        match me.JsonName with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearJsonName () = me.JsonName <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasProto3Optional =
        match me.Proto3Optional with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearProto3Optional () = me.Proto3Optional <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<FieldDescriptorProto> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.FieldDescriptorProto_Descriptor()
module FieldDescriptorProto =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FieldDescriptorProto._UnknownFields = null
        FieldDescriptorProto.Name = ValueNone
        FieldDescriptorProto.Extendee = ValueNone
        FieldDescriptorProto.Number = ValueNone
        FieldDescriptorProto.Label = ValueNone
        FieldDescriptorProto.Type = ValueNone
        FieldDescriptorProto.TypeName = ValueNone
        FieldDescriptorProto.DefaultValue = ValueNone
        FieldDescriptorProto.Options = ValueNone
        FieldDescriptorProto.OneofIndex = ValueNone
        FieldDescriptorProto.JsonName = ValueNone
        FieldDescriptorProto.Proto3Optional = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FieldDescriptorProto._UnknownFields = null
        FieldDescriptorProto.Name = ValueNone
        FieldDescriptorProto.Extendee = ValueNone
        FieldDescriptorProto.Number = ValueNone
        FieldDescriptorProto.Label = ValueNone
        FieldDescriptorProto.Type = ValueNone
        FieldDescriptorProto.TypeName = ValueNone
        FieldDescriptorProto.DefaultValue = ValueNone
        FieldDescriptorProto.Options = ValueNone
        FieldDescriptorProto.OneofIndex = ValueNone
        FieldDescriptorProto.JsonName = ValueNone
        FieldDescriptorProto.Proto3Optional = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FieldDescriptorProto>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let NumberFieldNumber = 3
    let LabelFieldNumber = 4
    let TypeFieldNumber = 5
    let TypeNameFieldNumber = 6
    let ExtendeeFieldNumber = 2
    let DefaultValueFieldNumber = 7
    let OneofIndexFieldNumber = 9
    let JsonNameFieldNumber = 10
    let OptionsFieldNumber = 8
    let Proto3OptionalFieldNumber = 17
    module Types =
        type Type =
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_DOUBLE")>] Double = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_FLOAT")>] Float = 2
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_INT64")>] Int64 = 3
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_UINT64")>] Uint64 = 4
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_INT32")>] Int32 = 5
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_FIXED64")>] Fixed64 = 6
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_FIXED32")>] Fixed32 = 7
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_BOOL")>] Bool = 8
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_STRING")>] String = 9
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_GROUP")>] Group = 10
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_MESSAGE")>] Message = 11
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_BYTES")>] Bytes = 12
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_UINT32")>] Uint32 = 13
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_ENUM")>] Enum = 14
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_SFIXED32")>] Sfixed32 = 15
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_SFIXED64")>] Sfixed64 = 16
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_SINT32")>] Sint32 = 17
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_SINT64")>] Sint64 = 18
        type Label =
        | [<global.Google.Protobuf.Reflection.OriginalName("LABEL_OPTIONAL")>] Optional = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("LABEL_REQUIRED")>] Required = 2
        | [<global.Google.Protobuf.Reflection.OriginalName("LABEL_REPEATED")>] Repeated = 3
type OneofDescriptorProto = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.OneofOptions>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : OneofDescriptorProto = {
        OneofDescriptorProto._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        OneofDescriptorProto.Name = me.Name
        OneofDescriptorProto.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.OneofOptions>).Clone())
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        if me.Options <> ValueNone
        then
            output.WriteRawTag(18uy)
            output.WriteMessage(me.Options.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: OneofDescriptorProto) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        if other.Options <> ValueNone
        then
            if me.Options.IsNone
            then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.OneofOptions.empty())
            (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.OneofOptions>).MergeFrom(other.Options.Value)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                if me.Options.IsNone
                then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.OneofOptions.empty())
                input.ReadMessage(me.Options.Value)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasName =
        match me.Name with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearName () = me.Name <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<OneofDescriptorProto> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.OneofDescriptorProto_Descriptor()
module OneofDescriptorProto =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        OneofDescriptorProto._UnknownFields = null
        OneofDescriptorProto.Name = ValueNone
        OneofDescriptorProto.Options = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        OneofDescriptorProto._UnknownFields = null
        OneofDescriptorProto.Name = ValueNone
        OneofDescriptorProto.Options = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<OneofDescriptorProto>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let OptionsFieldNumber = 2
type EnumDescriptorProto = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    Value: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumValueDescriptorProto>
    mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.EnumOptions>
    ReservedRange: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Types.EnumReservedRange>
    ReservedName: global.Google.Protobuf.Collections.RepeatedField<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : EnumDescriptorProto = {
        EnumDescriptorProto._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        EnumDescriptorProto.Name = me.Name
        EnumDescriptorProto.Value = me.Value.Clone()
        EnumDescriptorProto.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.EnumOptions>).Clone())
        EnumDescriptorProto.ReservedRange = me.ReservedRange.Clone()
        EnumDescriptorProto.ReservedName = me.ReservedName.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        me.Value.WriteTo(&output, EnumDescriptorProto.RepeatedValueCodec)
        if me.Options <> ValueNone
        then
            output.WriteRawTag(26uy)
            output.WriteMessage(me.Options.Value)
        me.ReservedRange.WriteTo(&output, EnumDescriptorProto.RepeatedReservedRangeCodec)
        me.ReservedName.WriteTo(&output, EnumDescriptorProto.RepeatedReservedNameCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        size <- size + me.Value.CalculateSize(EnumDescriptorProto.RepeatedValueCodec)
        if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
        size <- size + me.ReservedRange.CalculateSize(EnumDescriptorProto.RepeatedReservedRangeCodec)
        size <- size + me.ReservedName.CalculateSize(EnumDescriptorProto.RepeatedReservedNameCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: EnumDescriptorProto) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        me.Value.Add(other.Value)
        if other.Options <> ValueNone
        then
            if me.Options.IsNone
            then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.EnumOptions.empty())
            (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.EnumOptions>).MergeFrom(other.Options.Value)
        me.ReservedRange.Add(other.ReservedRange)
        me.ReservedName.Add(other.ReservedName)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                me.Value.AddEntriesFrom(&input, EnumDescriptorProto.RepeatedValueCodec)
            | 26u ->
                if me.Options.IsNone
                then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.EnumOptions.empty())
                input.ReadMessage(me.Options.Value)
            | 34u ->
                me.ReservedRange.AddEntriesFrom(&input, EnumDescriptorProto.RepeatedReservedRangeCodec)
            | 42u ->
                me.ReservedName.AddEntriesFrom(&input, EnumDescriptorProto.RepeatedReservedNameCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasName =
        match me.Name with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearName () = me.Name <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<EnumDescriptorProto> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.EnumDescriptorProto_Descriptor()
module EnumDescriptorProto =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        EnumDescriptorProto._UnknownFields = null
        EnumDescriptorProto.Name = ValueNone
        EnumDescriptorProto.Value = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumValueDescriptorProto>()
        EnumDescriptorProto.Options = ValueNone
        EnumDescriptorProto.ReservedRange = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Types.EnumReservedRange>()
        EnumDescriptorProto.ReservedName = global.Google.Protobuf.Collections.RepeatedField<string>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        EnumDescriptorProto._UnknownFields = null
        EnumDescriptorProto.Name = ValueNone
        EnumDescriptorProto.Value = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumValueDescriptorProto>()
        EnumDescriptorProto.Options = ValueNone
        EnumDescriptorProto.ReservedRange = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Types.EnumReservedRange>()
        EnumDescriptorProto.ReservedName = global.Google.Protobuf.Collections.RepeatedField<string>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<EnumDescriptorProto>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let ValueFieldNumber = 2
    let OptionsFieldNumber = 3
    let ReservedRangeFieldNumber = 4
    let ReservedNameFieldNumber = 5
    let RepeatedValueCodec = global.Google.Protobuf.FieldCodec.ForMessage(18u, global.Google.Protobuf.FSharp.Reflection.EnumValueDescriptorProto.Parser)
    let RepeatedReservedRangeCodec = global.Google.Protobuf.FieldCodec.ForMessage(34u, global.Google.Protobuf.FSharp.Reflection.EnumDescriptorProto.Types.EnumReservedRange.Parser)
    let RepeatedReservedNameCodec = global.Google.Protobuf.FieldCodec.ForString(42u)
    module Types =
        type EnumReservedRange = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            mutable Start: ValueOption<int32>
            mutable End: ValueOption<int32>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : EnumReservedRange = {
                EnumReservedRange._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                EnumReservedRange.Start = me.Start
                EnumReservedRange.End = me.End
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                if me.Start <> ValueNone
                then
                    output.WriteRawTag(8uy)
                    output.WriteInt32(me.Start.Value)
                if me.End <> ValueNone
                then
                    output.WriteRawTag(16uy)
                    output.WriteInt32(me.End.Value)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                if me.Start <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Start.Value)
                if me.End <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.End.Value)
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: EnumReservedRange) =
                if other.Start <> ValueNone
                then me.Start <- other.Start
                if other.End <> ValueNone
                then me.End <- other.End
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 8u ->
                        me.Start <- ValueSome(input.ReadInt32())
                    | 16u ->
                        me.End <- ValueSome(input.ReadInt32())
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasStart =
                match me.Start with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearStart () = me.Start <- ValueNone
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasEnd =
                match me.End with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearEnd () = me.End <- ValueNone
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<EnumReservedRange> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.EnumDescriptorProto_EnumReservedRange_Descriptor()
        module EnumReservedRange =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                EnumReservedRange._UnknownFields = null
                EnumReservedRange.Start = ValueNone
                EnumReservedRange.End = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                EnumReservedRange._UnknownFields = null
                EnumReservedRange.Start = ValueNone
                EnumReservedRange.End = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<EnumReservedRange>(global.System.Func<_>(empty))
            let StartFieldNumber = 1
            let EndFieldNumber = 2
type EnumValueDescriptorProto = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    mutable Number: ValueOption<int32>
    mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.EnumValueOptions>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : EnumValueDescriptorProto = {
        EnumValueDescriptorProto._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        EnumValueDescriptorProto.Name = me.Name
        EnumValueDescriptorProto.Number = me.Number
        EnumValueDescriptorProto.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.EnumValueOptions>).Clone())
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        if me.Number <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteInt32(me.Number.Value)
        if me.Options <> ValueNone
        then
            output.WriteRawTag(26uy)
            output.WriteMessage(me.Options.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        if me.Number <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Number.Value)
        if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: EnumValueDescriptorProto) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        if other.Number <> ValueNone
        then me.Number <- other.Number
        if other.Options <> ValueNone
        then
            if me.Options.IsNone
            then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.EnumValueOptions.empty())
            (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.EnumValueOptions>).MergeFrom(other.Options.Value)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 16u ->
                me.Number <- ValueSome(input.ReadInt32())
            | 26u ->
                if me.Options.IsNone
                then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.EnumValueOptions.empty())
                input.ReadMessage(me.Options.Value)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasName =
        match me.Name with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearName () = me.Name <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasNumber =
        match me.Number with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearNumber () = me.Number <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<EnumValueDescriptorProto> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.EnumValueDescriptorProto_Descriptor()
module EnumValueDescriptorProto =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        EnumValueDescriptorProto._UnknownFields = null
        EnumValueDescriptorProto.Name = ValueNone
        EnumValueDescriptorProto.Number = ValueNone
        EnumValueDescriptorProto.Options = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        EnumValueDescriptorProto._UnknownFields = null
        EnumValueDescriptorProto.Name = ValueNone
        EnumValueDescriptorProto.Number = ValueNone
        EnumValueDescriptorProto.Options = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<EnumValueDescriptorProto>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let NumberFieldNumber = 2
    let OptionsFieldNumber = 3
type ServiceDescriptorProto = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    Method: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.MethodDescriptorProto>
    mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.ServiceOptions>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : ServiceDescriptorProto = {
        ServiceDescriptorProto._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        ServiceDescriptorProto.Name = me.Name
        ServiceDescriptorProto.Method = me.Method.Clone()
        ServiceDescriptorProto.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.ServiceOptions>).Clone())
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        me.Method.WriteTo(&output, ServiceDescriptorProto.RepeatedMethodCodec)
        if me.Options <> ValueNone
        then
            output.WriteRawTag(26uy)
            output.WriteMessage(me.Options.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        size <- size + me.Method.CalculateSize(ServiceDescriptorProto.RepeatedMethodCodec)
        if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: ServiceDescriptorProto) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        me.Method.Add(other.Method)
        if other.Options <> ValueNone
        then
            if me.Options.IsNone
            then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.ServiceOptions.empty())
            (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.ServiceOptions>).MergeFrom(other.Options.Value)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                me.Method.AddEntriesFrom(&input, ServiceDescriptorProto.RepeatedMethodCodec)
            | 26u ->
                if me.Options.IsNone
                then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.ServiceOptions.empty())
                input.ReadMessage(me.Options.Value)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasName =
        match me.Name with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearName () = me.Name <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<ServiceDescriptorProto> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.ServiceDescriptorProto_Descriptor()
module ServiceDescriptorProto =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        ServiceDescriptorProto._UnknownFields = null
        ServiceDescriptorProto.Name = ValueNone
        ServiceDescriptorProto.Method = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.MethodDescriptorProto>()
        ServiceDescriptorProto.Options = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        ServiceDescriptorProto._UnknownFields = null
        ServiceDescriptorProto.Name = ValueNone
        ServiceDescriptorProto.Method = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.MethodDescriptorProto>()
        ServiceDescriptorProto.Options = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<ServiceDescriptorProto>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let MethodFieldNumber = 2
    let OptionsFieldNumber = 3
    let RepeatedMethodCodec = global.Google.Protobuf.FieldCodec.ForMessage(18u, global.Google.Protobuf.FSharp.Reflection.MethodDescriptorProto.Parser)
type MethodDescriptorProto = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    mutable InputType: ValueOption<string>
    mutable OutputType: ValueOption<string>
    mutable Options: ValueOption<global.Google.Protobuf.FSharp.Reflection.MethodOptions>
    mutable ClientStreaming: ValueOption<bool>
    mutable ServerStreaming: ValueOption<bool>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : MethodDescriptorProto = {
        MethodDescriptorProto._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        MethodDescriptorProto.Name = me.Name
        MethodDescriptorProto.InputType = me.InputType
        MethodDescriptorProto.OutputType = me.OutputType
        MethodDescriptorProto.Options = me.Options |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.MethodOptions>).Clone())
        MethodDescriptorProto.ClientStreaming = me.ClientStreaming
        MethodDescriptorProto.ServerStreaming = me.ServerStreaming
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        if me.InputType <> ValueNone
        then
            output.WriteRawTag(18uy)
            output.WriteString(me.InputType.Value)
        if me.OutputType <> ValueNone
        then
            output.WriteRawTag(26uy)
            output.WriteString(me.OutputType.Value)
        if me.Options <> ValueNone
        then
            output.WriteRawTag(34uy)
            output.WriteMessage(me.Options.Value)
        if me.ClientStreaming <> ValueNone
        then
            output.WriteRawTag(40uy)
            output.WriteBool(me.ClientStreaming.Value)
        if me.ServerStreaming <> ValueNone
        then
            output.WriteRawTag(48uy)
            output.WriteBool(me.ServerStreaming.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        if me.InputType <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.InputType.Value)
        if me.OutputType <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.OutputType.Value)
        if me.Options <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Options.Value)
        if me.ClientStreaming <> ValueNone then size <- size + 2
        if me.ServerStreaming <> ValueNone then size <- size + 2
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: MethodDescriptorProto) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        if other.InputType <> ValueNone
        then me.InputType <- other.InputType
        if other.OutputType <> ValueNone
        then me.OutputType <- other.OutputType
        if other.Options <> ValueNone
        then
            if me.Options.IsNone
            then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.MethodOptions.empty())
            (me.Options.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.Reflection.MethodOptions>).MergeFrom(other.Options.Value)
        if other.ClientStreaming <> ValueNone
        then me.ClientStreaming <- other.ClientStreaming
        if other.ServerStreaming <> ValueNone
        then me.ServerStreaming <- other.ServerStreaming
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                me.InputType <- ValueSome(input.ReadString())
            | 26u ->
                me.OutputType <- ValueSome(input.ReadString())
            | 34u ->
                if me.Options.IsNone
                then me.Options <- ValueSome(global.Google.Protobuf.FSharp.Reflection.MethodOptions.empty())
                input.ReadMessage(me.Options.Value)
            | 40u ->
                me.ClientStreaming <- ValueSome(input.ReadBool())
            | 48u ->
                me.ServerStreaming <- ValueSome(input.ReadBool())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasName =
        match me.Name with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearName () = me.Name <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasInputType =
        match me.InputType with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearInputType () = me.InputType <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasOutputType =
        match me.OutputType with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearOutputType () = me.OutputType <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasClientStreaming =
        match me.ClientStreaming with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearClientStreaming () = me.ClientStreaming <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasServerStreaming =
        match me.ServerStreaming with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearServerStreaming () = me.ServerStreaming <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<MethodDescriptorProto> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.MethodDescriptorProto_Descriptor()
module MethodDescriptorProto =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        MethodDescriptorProto._UnknownFields = null
        MethodDescriptorProto.Name = ValueNone
        MethodDescriptorProto.InputType = ValueNone
        MethodDescriptorProto.OutputType = ValueNone
        MethodDescriptorProto.Options = ValueNone
        MethodDescriptorProto.ClientStreaming = ValueNone
        MethodDescriptorProto.ServerStreaming = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        MethodDescriptorProto._UnknownFields = null
        MethodDescriptorProto.Name = ValueNone
        MethodDescriptorProto.InputType = ValueNone
        MethodDescriptorProto.OutputType = ValueNone
        MethodDescriptorProto.Options = ValueNone
        MethodDescriptorProto.ClientStreaming = ValueNone
        MethodDescriptorProto.ServerStreaming = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<MethodDescriptorProto>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let InputTypeFieldNumber = 2
    let OutputTypeFieldNumber = 3
    let OptionsFieldNumber = 4
    let ClientStreamingFieldNumber = 5
    let ServerStreamingFieldNumber = 6
type FileOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<FileOptions>
    mutable JavaPackage: ValueOption<string>
    mutable JavaOuterClassname: ValueOption<string>
    mutable OptimizeFor: ValueOption<global.Google.Protobuf.FSharp.Reflection.FileOptions.Types.OptimizeMode>
    mutable JavaMultipleFiles: ValueOption<bool>
    mutable GoPackage: ValueOption<string>
    mutable CcGenericServices: ValueOption<bool>
    mutable JavaGenericServices: ValueOption<bool>
    mutable PyGenericServices: ValueOption<bool>
    mutable JavaGenerateEqualsAndHash: ValueOption<bool>
    mutable Deprecated: ValueOption<bool>
    mutable JavaStringCheckUtf8: ValueOption<bool>
    mutable CcEnableArenas: ValueOption<bool>
    mutable ObjcClassPrefix: ValueOption<string>
    mutable CsharpNamespace: ValueOption<string>
    mutable SwiftPrefix: ValueOption<string>
    mutable PhpClassPrefix: ValueOption<string>
    mutable PhpNamespace: ValueOption<string>
    mutable PhpGenericServices: ValueOption<bool>
    mutable PhpMetadataNamespace: ValueOption<string>
    mutable RubyPackage: ValueOption<string>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FileOptions = {
        FileOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        FileOptions.JavaPackage = me.JavaPackage
        FileOptions.JavaOuterClassname = me.JavaOuterClassname
        FileOptions.OptimizeFor = me.OptimizeFor
        FileOptions.JavaMultipleFiles = me.JavaMultipleFiles
        FileOptions.GoPackage = me.GoPackage
        FileOptions.CcGenericServices = me.CcGenericServices
        FileOptions.JavaGenericServices = me.JavaGenericServices
        FileOptions.PyGenericServices = me.PyGenericServices
        FileOptions.JavaGenerateEqualsAndHash = me.JavaGenerateEqualsAndHash
        FileOptions.Deprecated = me.Deprecated
        FileOptions.JavaStringCheckUtf8 = me.JavaStringCheckUtf8
        FileOptions.CcEnableArenas = me.CcEnableArenas
        FileOptions.ObjcClassPrefix = me.ObjcClassPrefix
        FileOptions.CsharpNamespace = me.CsharpNamespace
        FileOptions.SwiftPrefix = me.SwiftPrefix
        FileOptions.PhpClassPrefix = me.PhpClassPrefix
        FileOptions.PhpNamespace = me.PhpNamespace
        FileOptions.PhpGenericServices = me.PhpGenericServices
        FileOptions.PhpMetadataNamespace = me.PhpMetadataNamespace
        FileOptions.RubyPackage = me.RubyPackage
        FileOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.JavaPackage <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.JavaPackage.Value)
        if me.JavaOuterClassname <> ValueNone
        then
            output.WriteRawTag(66uy)
            output.WriteString(me.JavaOuterClassname.Value)
        if me.OptimizeFor <> ValueNone
        then
            output.WriteRawTag(72uy)
            output.WriteEnum(int me.OptimizeFor.Value)
        if me.JavaMultipleFiles <> ValueNone
        then
            output.WriteRawTag(80uy)
            output.WriteBool(me.JavaMultipleFiles.Value)
        if me.GoPackage <> ValueNone
        then
            output.WriteRawTag(90uy)
            output.WriteString(me.GoPackage.Value)
        if me.CcGenericServices <> ValueNone
        then
            output.WriteRawTag(128uy, 1uy)
            output.WriteBool(me.CcGenericServices.Value)
        if me.JavaGenericServices <> ValueNone
        then
            output.WriteRawTag(136uy, 1uy)
            output.WriteBool(me.JavaGenericServices.Value)
        if me.PyGenericServices <> ValueNone
        then
            output.WriteRawTag(144uy, 1uy)
            output.WriteBool(me.PyGenericServices.Value)
        if me.JavaGenerateEqualsAndHash <> ValueNone
        then
            output.WriteRawTag(160uy, 1uy)
            output.WriteBool(me.JavaGenerateEqualsAndHash.Value)
        if me.Deprecated <> ValueNone
        then
            output.WriteRawTag(184uy, 1uy)
            output.WriteBool(me.Deprecated.Value)
        if me.JavaStringCheckUtf8 <> ValueNone
        then
            output.WriteRawTag(216uy, 1uy)
            output.WriteBool(me.JavaStringCheckUtf8.Value)
        if me.CcEnableArenas <> ValueNone
        then
            output.WriteRawTag(248uy, 1uy)
            output.WriteBool(me.CcEnableArenas.Value)
        if me.ObjcClassPrefix <> ValueNone
        then
            output.WriteRawTag(162uy, 2uy)
            output.WriteString(me.ObjcClassPrefix.Value)
        if me.CsharpNamespace <> ValueNone
        then
            output.WriteRawTag(170uy, 2uy)
            output.WriteString(me.CsharpNamespace.Value)
        if me.SwiftPrefix <> ValueNone
        then
            output.WriteRawTag(186uy, 2uy)
            output.WriteString(me.SwiftPrefix.Value)
        if me.PhpClassPrefix <> ValueNone
        then
            output.WriteRawTag(194uy, 2uy)
            output.WriteString(me.PhpClassPrefix.Value)
        if me.PhpNamespace <> ValueNone
        then
            output.WriteRawTag(202uy, 2uy)
            output.WriteString(me.PhpNamespace.Value)
        if me.PhpGenericServices <> ValueNone
        then
            output.WriteRawTag(208uy, 2uy)
            output.WriteBool(me.PhpGenericServices.Value)
        if me.PhpMetadataNamespace <> ValueNone
        then
            output.WriteRawTag(226uy, 2uy)
            output.WriteString(me.PhpMetadataNamespace.Value)
        if me.RubyPackage <> ValueNone
        then
            output.WriteRawTag(234uy, 2uy)
            output.WriteString(me.RubyPackage.Value)
        me.UninterpretedOption.WriteTo(&output, FileOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.JavaPackage <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.JavaPackage.Value)
        if me.JavaOuterClassname <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.JavaOuterClassname.Value)
        if me.OptimizeFor <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.OptimizeFor.Value)
        if me.JavaMultipleFiles <> ValueNone then size <- size + 2
        if me.GoPackage <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.GoPackage.Value)
        if me.CcGenericServices <> ValueNone then size <- size + 3
        if me.JavaGenericServices <> ValueNone then size <- size + 3
        if me.PyGenericServices <> ValueNone then size <- size + 3
        if me.JavaGenerateEqualsAndHash <> ValueNone then size <- size + 3
        if me.Deprecated <> ValueNone then size <- size + 3
        if me.JavaStringCheckUtf8 <> ValueNone then size <- size + 3
        if me.CcEnableArenas <> ValueNone then size <- size + 3
        if me.ObjcClassPrefix <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.ObjcClassPrefix.Value)
        if me.CsharpNamespace <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.CsharpNamespace.Value)
        if me.SwiftPrefix <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.SwiftPrefix.Value)
        if me.PhpClassPrefix <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.PhpClassPrefix.Value)
        if me.PhpNamespace <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.PhpNamespace.Value)
        if me.PhpGenericServices <> ValueNone then size <- size + 3
        if me.PhpMetadataNamespace <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.PhpMetadataNamespace.Value)
        if me.RubyPackage <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.RubyPackage.Value)
        size <- size + me.UninterpretedOption.CalculateSize(FileOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FileOptions) =
        if other.JavaPackage <> ValueNone
        then me.JavaPackage <- other.JavaPackage
        if other.JavaOuterClassname <> ValueNone
        then me.JavaOuterClassname <- other.JavaOuterClassname
        if other.OptimizeFor <> ValueNone
        then me.OptimizeFor <- other.OptimizeFor
        if other.JavaMultipleFiles <> ValueNone
        then me.JavaMultipleFiles <- other.JavaMultipleFiles
        if other.GoPackage <> ValueNone
        then me.GoPackage <- other.GoPackage
        if other.CcGenericServices <> ValueNone
        then me.CcGenericServices <- other.CcGenericServices
        if other.JavaGenericServices <> ValueNone
        then me.JavaGenericServices <- other.JavaGenericServices
        if other.PyGenericServices <> ValueNone
        then me.PyGenericServices <- other.PyGenericServices
        if other.JavaGenerateEqualsAndHash <> ValueNone
        then me.JavaGenerateEqualsAndHash <- other.JavaGenerateEqualsAndHash
        if other.Deprecated <> ValueNone
        then me.Deprecated <- other.Deprecated
        if other.JavaStringCheckUtf8 <> ValueNone
        then me.JavaStringCheckUtf8 <- other.JavaStringCheckUtf8
        if other.CcEnableArenas <> ValueNone
        then me.CcEnableArenas <- other.CcEnableArenas
        if other.ObjcClassPrefix <> ValueNone
        then me.ObjcClassPrefix <- other.ObjcClassPrefix
        if other.CsharpNamespace <> ValueNone
        then me.CsharpNamespace <- other.CsharpNamespace
        if other.SwiftPrefix <> ValueNone
        then me.SwiftPrefix <- other.SwiftPrefix
        if other.PhpClassPrefix <> ValueNone
        then me.PhpClassPrefix <- other.PhpClassPrefix
        if other.PhpNamespace <> ValueNone
        then me.PhpNamespace <- other.PhpNamespace
        if other.PhpGenericServices <> ValueNone
        then me.PhpGenericServices <- other.PhpGenericServices
        if other.PhpMetadataNamespace <> ValueNone
        then me.PhpMetadataNamespace <- other.PhpMetadataNamespace
        if other.RubyPackage <> ValueNone
        then me.RubyPackage <- other.RubyPackage
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.JavaPackage <- ValueSome(input.ReadString())
            | 66u ->
                me.JavaOuterClassname <- ValueSome(input.ReadString())
            | 72u ->
                me.OptimizeFor <- ValueSome(enum(input.ReadEnum()))
            | 80u ->
                me.JavaMultipleFiles <- ValueSome(input.ReadBool())
            | 90u ->
                me.GoPackage <- ValueSome(input.ReadString())
            | 128u ->
                me.CcGenericServices <- ValueSome(input.ReadBool())
            | 136u ->
                me.JavaGenericServices <- ValueSome(input.ReadBool())
            | 144u ->
                me.PyGenericServices <- ValueSome(input.ReadBool())
            | 160u ->
                me.JavaGenerateEqualsAndHash <- ValueSome(input.ReadBool())
            | 184u ->
                me.Deprecated <- ValueSome(input.ReadBool())
            | 216u ->
                me.JavaStringCheckUtf8 <- ValueSome(input.ReadBool())
            | 248u ->
                me.CcEnableArenas <- ValueSome(input.ReadBool())
            | 290u ->
                me.ObjcClassPrefix <- ValueSome(input.ReadString())
            | 298u ->
                me.CsharpNamespace <- ValueSome(input.ReadString())
            | 314u ->
                me.SwiftPrefix <- ValueSome(input.ReadString())
            | 322u ->
                me.PhpClassPrefix <- ValueSome(input.ReadString())
            | 330u ->
                me.PhpNamespace <- ValueSome(input.ReadString())
            | 336u ->
                me.PhpGenericServices <- ValueSome(input.ReadBool())
            | 354u ->
                me.PhpMetadataNamespace <- ValueSome(input.ReadString())
            | 362u ->
                me.RubyPackage <- ValueSome(input.ReadString())
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, FileOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasJavaPackage =
        match me.JavaPackage with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearJavaPackage () = me.JavaPackage <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasJavaOuterClassname =
        match me.JavaOuterClassname with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearJavaOuterClassname () = me.JavaOuterClassname <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasOptimizeFor =
        match me.OptimizeFor with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearOptimizeFor () = me.OptimizeFor <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasJavaMultipleFiles =
        match me.JavaMultipleFiles with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearJavaMultipleFiles () = me.JavaMultipleFiles <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasGoPackage =
        match me.GoPackage with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearGoPackage () = me.GoPackage <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasCcGenericServices =
        match me.CcGenericServices with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearCcGenericServices () = me.CcGenericServices <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasJavaGenericServices =
        match me.JavaGenericServices with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearJavaGenericServices () = me.JavaGenericServices <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasPyGenericServices =
        match me.PyGenericServices with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearPyGenericServices () = me.PyGenericServices <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasJavaGenerateEqualsAndHash =
        match me.JavaGenerateEqualsAndHash with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearJavaGenerateEqualsAndHash () = me.JavaGenerateEqualsAndHash <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDeprecated =
        match me.Deprecated with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDeprecated () = me.Deprecated <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasJavaStringCheckUtf8 =
        match me.JavaStringCheckUtf8 with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearJavaStringCheckUtf8 () = me.JavaStringCheckUtf8 <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasCcEnableArenas =
        match me.CcEnableArenas with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearCcEnableArenas () = me.CcEnableArenas <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasObjcClassPrefix =
        match me.ObjcClassPrefix with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearObjcClassPrefix () = me.ObjcClassPrefix <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasCsharpNamespace =
        match me.CsharpNamespace with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearCsharpNamespace () = me.CsharpNamespace <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasSwiftPrefix =
        match me.SwiftPrefix with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearSwiftPrefix () = me.SwiftPrefix <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasPhpClassPrefix =
        match me.PhpClassPrefix with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearPhpClassPrefix () = me.PhpClassPrefix <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasPhpNamespace =
        match me.PhpNamespace with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearPhpNamespace () = me.PhpNamespace <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasPhpGenericServices =
        match me.PhpGenericServices with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearPhpGenericServices () = me.PhpGenericServices <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasPhpMetadataNamespace =
        match me.PhpMetadataNamespace with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearPhpMetadataNamespace () = me.PhpMetadataNamespace <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasRubyPackage =
        match me.RubyPackage with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearRubyPackage () = me.RubyPackage <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<FileOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.FileOptions_Descriptor()
module FileOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FileOptions._UnknownFields = null
        FileOptions._Extensions = null
        FileOptions.JavaPackage = ValueNone
        FileOptions.JavaOuterClassname = ValueNone
        FileOptions.OptimizeFor = ValueNone
        FileOptions.JavaMultipleFiles = ValueNone
        FileOptions.GoPackage = ValueNone
        FileOptions.CcGenericServices = ValueNone
        FileOptions.JavaGenericServices = ValueNone
        FileOptions.PyGenericServices = ValueNone
        FileOptions.JavaGenerateEqualsAndHash = ValueNone
        FileOptions.Deprecated = ValueNone
        FileOptions.JavaStringCheckUtf8 = ValueNone
        FileOptions.CcEnableArenas = ValueNone
        FileOptions.ObjcClassPrefix = ValueNone
        FileOptions.CsharpNamespace = ValueNone
        FileOptions.SwiftPrefix = ValueNone
        FileOptions.PhpClassPrefix = ValueNone
        FileOptions.PhpNamespace = ValueNone
        FileOptions.PhpGenericServices = ValueNone
        FileOptions.PhpMetadataNamespace = ValueNone
        FileOptions.RubyPackage = ValueNone
        FileOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FileOptions._UnknownFields = null
        FileOptions._Extensions = null
        FileOptions.JavaPackage = ValueNone
        FileOptions.JavaOuterClassname = ValueNone
        FileOptions.OptimizeFor = ValueNone
        FileOptions.JavaMultipleFiles = ValueNone
        FileOptions.GoPackage = ValueNone
        FileOptions.CcGenericServices = ValueNone
        FileOptions.JavaGenericServices = ValueNone
        FileOptions.PyGenericServices = ValueNone
        FileOptions.JavaGenerateEqualsAndHash = ValueNone
        FileOptions.Deprecated = ValueNone
        FileOptions.JavaStringCheckUtf8 = ValueNone
        FileOptions.CcEnableArenas = ValueNone
        FileOptions.ObjcClassPrefix = ValueNone
        FileOptions.CsharpNamespace = ValueNone
        FileOptions.SwiftPrefix = ValueNone
        FileOptions.PhpClassPrefix = ValueNone
        FileOptions.PhpNamespace = ValueNone
        FileOptions.PhpGenericServices = ValueNone
        FileOptions.PhpMetadataNamespace = ValueNone
        FileOptions.RubyPackage = ValueNone
        FileOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FileOptions>(global.System.Func<_>(empty))
    let JavaPackageFieldNumber = 1
    let JavaOuterClassnameFieldNumber = 8
    let JavaMultipleFilesFieldNumber = 10
    let JavaGenerateEqualsAndHashFieldNumber = 20
    let JavaStringCheckUtf8FieldNumber = 27
    let OptimizeForFieldNumber = 9
    let GoPackageFieldNumber = 11
    let CcGenericServicesFieldNumber = 16
    let JavaGenericServicesFieldNumber = 17
    let PyGenericServicesFieldNumber = 18
    let PhpGenericServicesFieldNumber = 42
    let DeprecatedFieldNumber = 23
    let CcEnableArenasFieldNumber = 31
    let ObjcClassPrefixFieldNumber = 36
    let CsharpNamespaceFieldNumber = 37
    let SwiftPrefixFieldNumber = 39
    let PhpClassPrefixFieldNumber = 40
    let PhpNamespaceFieldNumber = 41
    let PhpMetadataNamespaceFieldNumber = 44
    let RubyPackageFieldNumber = 45
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
    module Types =
        type OptimizeMode =
        | [<global.Google.Protobuf.Reflection.OriginalName("SPEED")>] Speed = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("CODE_SIZE")>] CodeSize = 2
        | [<global.Google.Protobuf.Reflection.OriginalName("LITE_RUNTIME")>] LiteRuntime = 3
type MessageOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<MessageOptions>
    mutable MessageSetWireFormat: ValueOption<bool>
    mutable NoStandardDescriptorAccessor: ValueOption<bool>
    mutable Deprecated: ValueOption<bool>
    mutable MapEntry: ValueOption<bool>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : MessageOptions = {
        MessageOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        MessageOptions.MessageSetWireFormat = me.MessageSetWireFormat
        MessageOptions.NoStandardDescriptorAccessor = me.NoStandardDescriptorAccessor
        MessageOptions.Deprecated = me.Deprecated
        MessageOptions.MapEntry = me.MapEntry
        MessageOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.MessageSetWireFormat <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteBool(me.MessageSetWireFormat.Value)
        if me.NoStandardDescriptorAccessor <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteBool(me.NoStandardDescriptorAccessor.Value)
        if me.Deprecated <> ValueNone
        then
            output.WriteRawTag(24uy)
            output.WriteBool(me.Deprecated.Value)
        if me.MapEntry <> ValueNone
        then
            output.WriteRawTag(56uy)
            output.WriteBool(me.MapEntry.Value)
        me.UninterpretedOption.WriteTo(&output, MessageOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.MessageSetWireFormat <> ValueNone then size <- size + 2
        if me.NoStandardDescriptorAccessor <> ValueNone then size <- size + 2
        if me.Deprecated <> ValueNone then size <- size + 2
        if me.MapEntry <> ValueNone then size <- size + 2
        size <- size + me.UninterpretedOption.CalculateSize(MessageOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: MessageOptions) =
        if other.MessageSetWireFormat <> ValueNone
        then me.MessageSetWireFormat <- other.MessageSetWireFormat
        if other.NoStandardDescriptorAccessor <> ValueNone
        then me.NoStandardDescriptorAccessor <- other.NoStandardDescriptorAccessor
        if other.Deprecated <> ValueNone
        then me.Deprecated <- other.Deprecated
        if other.MapEntry <> ValueNone
        then me.MapEntry <- other.MapEntry
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.MessageSetWireFormat <- ValueSome(input.ReadBool())
            | 16u ->
                me.NoStandardDescriptorAccessor <- ValueSome(input.ReadBool())
            | 24u ->
                me.Deprecated <- ValueSome(input.ReadBool())
            | 56u ->
                me.MapEntry <- ValueSome(input.ReadBool())
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, MessageOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasMessageSetWireFormat =
        match me.MessageSetWireFormat with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearMessageSetWireFormat () = me.MessageSetWireFormat <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasNoStandardDescriptorAccessor =
        match me.NoStandardDescriptorAccessor with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearNoStandardDescriptorAccessor () = me.NoStandardDescriptorAccessor <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDeprecated =
        match me.Deprecated with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDeprecated () = me.Deprecated <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasMapEntry =
        match me.MapEntry with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearMapEntry () = me.MapEntry <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<MessageOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.MessageOptions_Descriptor()
module MessageOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        MessageOptions._UnknownFields = null
        MessageOptions._Extensions = null
        MessageOptions.MessageSetWireFormat = ValueNone
        MessageOptions.NoStandardDescriptorAccessor = ValueNone
        MessageOptions.Deprecated = ValueNone
        MessageOptions.MapEntry = ValueNone
        MessageOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        MessageOptions._UnknownFields = null
        MessageOptions._Extensions = null
        MessageOptions.MessageSetWireFormat = ValueNone
        MessageOptions.NoStandardDescriptorAccessor = ValueNone
        MessageOptions.Deprecated = ValueNone
        MessageOptions.MapEntry = ValueNone
        MessageOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<MessageOptions>(global.System.Func<_>(empty))
    let MessageSetWireFormatFieldNumber = 1
    let NoStandardDescriptorAccessorFieldNumber = 2
    let DeprecatedFieldNumber = 3
    let MapEntryFieldNumber = 7
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
type FieldOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<FieldOptions>
    mutable Ctype: ValueOption<global.Google.Protobuf.FSharp.Reflection.FieldOptions.Types.CType>
    mutable Packed: ValueOption<bool>
    mutable Deprecated: ValueOption<bool>
    mutable Lazy: ValueOption<bool>
    mutable Jstype: ValueOption<global.Google.Protobuf.FSharp.Reflection.FieldOptions.Types.JSType>
    mutable Weak: ValueOption<bool>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : FieldOptions = {
        FieldOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        FieldOptions.Ctype = me.Ctype
        FieldOptions.Packed = me.Packed
        FieldOptions.Deprecated = me.Deprecated
        FieldOptions.Lazy = me.Lazy
        FieldOptions.Jstype = me.Jstype
        FieldOptions.Weak = me.Weak
        FieldOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Ctype <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteEnum(int me.Ctype.Value)
        if me.Packed <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteBool(me.Packed.Value)
        if me.Deprecated <> ValueNone
        then
            output.WriteRawTag(24uy)
            output.WriteBool(me.Deprecated.Value)
        if me.Lazy <> ValueNone
        then
            output.WriteRawTag(40uy)
            output.WriteBool(me.Lazy.Value)
        if me.Jstype <> ValueNone
        then
            output.WriteRawTag(48uy)
            output.WriteEnum(int me.Jstype.Value)
        if me.Weak <> ValueNone
        then
            output.WriteRawTag(80uy)
            output.WriteBool(me.Weak.Value)
        me.UninterpretedOption.WriteTo(&output, FieldOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Ctype <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Ctype.Value)
        if me.Packed <> ValueNone then size <- size + 2
        if me.Deprecated <> ValueNone then size <- size + 2
        if me.Lazy <> ValueNone then size <- size + 2
        if me.Jstype <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Jstype.Value)
        if me.Weak <> ValueNone then size <- size + 2
        size <- size + me.UninterpretedOption.CalculateSize(FieldOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: FieldOptions) =
        if other.Ctype <> ValueNone
        then me.Ctype <- other.Ctype
        if other.Packed <> ValueNone
        then me.Packed <- other.Packed
        if other.Deprecated <> ValueNone
        then me.Deprecated <- other.Deprecated
        if other.Lazy <> ValueNone
        then me.Lazy <- other.Lazy
        if other.Jstype <> ValueNone
        then me.Jstype <- other.Jstype
        if other.Weak <> ValueNone
        then me.Weak <- other.Weak
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Ctype <- ValueSome(enum(input.ReadEnum()))
            | 16u ->
                me.Packed <- ValueSome(input.ReadBool())
            | 24u ->
                me.Deprecated <- ValueSome(input.ReadBool())
            | 40u ->
                me.Lazy <- ValueSome(input.ReadBool())
            | 48u ->
                me.Jstype <- ValueSome(enum(input.ReadEnum()))
            | 80u ->
                me.Weak <- ValueSome(input.ReadBool())
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, FieldOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasCtype =
        match me.Ctype with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearCtype () = me.Ctype <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasPacked =
        match me.Packed with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearPacked () = me.Packed <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDeprecated =
        match me.Deprecated with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDeprecated () = me.Deprecated <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasLazy =
        match me.Lazy with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearLazy () = me.Lazy <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasJstype =
        match me.Jstype with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearJstype () = me.Jstype <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasWeak =
        match me.Weak with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearWeak () = me.Weak <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<FieldOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.FieldOptions_Descriptor()
module FieldOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        FieldOptions._UnknownFields = null
        FieldOptions._Extensions = null
        FieldOptions.Ctype = ValueNone
        FieldOptions.Packed = ValueNone
        FieldOptions.Deprecated = ValueNone
        FieldOptions.Lazy = ValueNone
        FieldOptions.Jstype = ValueNone
        FieldOptions.Weak = ValueNone
        FieldOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        FieldOptions._UnknownFields = null
        FieldOptions._Extensions = null
        FieldOptions.Ctype = ValueNone
        FieldOptions.Packed = ValueNone
        FieldOptions.Deprecated = ValueNone
        FieldOptions.Lazy = ValueNone
        FieldOptions.Jstype = ValueNone
        FieldOptions.Weak = ValueNone
        FieldOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<FieldOptions>(global.System.Func<_>(empty))
    let CtypeFieldNumber = 1
    let PackedFieldNumber = 2
    let JstypeFieldNumber = 6
    let LazyFieldNumber = 5
    let DeprecatedFieldNumber = 3
    let WeakFieldNumber = 10
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
    module Types =
        type CType =
        | [<global.Google.Protobuf.Reflection.OriginalName("STRING")>] String = 0
        | [<global.Google.Protobuf.Reflection.OriginalName("CORD")>] Cord = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("STRING_PIECE")>] StringPiece = 2
        type JSType =
        | [<global.Google.Protobuf.Reflection.OriginalName("JS_NORMAL")>] JsNormal = 0
        | [<global.Google.Protobuf.Reflection.OriginalName("JS_STRING")>] JsString = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("JS_NUMBER")>] JsNumber = 2
type OneofOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<OneofOptions>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : OneofOptions = {
        OneofOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        OneofOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.UninterpretedOption.WriteTo(&output, OneofOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.UninterpretedOption.CalculateSize(OneofOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: OneofOptions) =
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, OneofOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<OneofOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.OneofOptions_Descriptor()
module OneofOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        OneofOptions._UnknownFields = null
        OneofOptions._Extensions = null
        OneofOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        OneofOptions._UnknownFields = null
        OneofOptions._Extensions = null
        OneofOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<OneofOptions>(global.System.Func<_>(empty))
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
type EnumOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<EnumOptions>
    mutable AllowAlias: ValueOption<bool>
    mutable Deprecated: ValueOption<bool>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : EnumOptions = {
        EnumOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        EnumOptions.AllowAlias = me.AllowAlias
        EnumOptions.Deprecated = me.Deprecated
        EnumOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.AllowAlias <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteBool(me.AllowAlias.Value)
        if me.Deprecated <> ValueNone
        then
            output.WriteRawTag(24uy)
            output.WriteBool(me.Deprecated.Value)
        me.UninterpretedOption.WriteTo(&output, EnumOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.AllowAlias <> ValueNone then size <- size + 2
        if me.Deprecated <> ValueNone then size <- size + 2
        size <- size + me.UninterpretedOption.CalculateSize(EnumOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: EnumOptions) =
        if other.AllowAlias <> ValueNone
        then me.AllowAlias <- other.AllowAlias
        if other.Deprecated <> ValueNone
        then me.Deprecated <- other.Deprecated
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 16u ->
                me.AllowAlias <- ValueSome(input.ReadBool())
            | 24u ->
                me.Deprecated <- ValueSome(input.ReadBool())
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, EnumOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasAllowAlias =
        match me.AllowAlias with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearAllowAlias () = me.AllowAlias <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDeprecated =
        match me.Deprecated with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDeprecated () = me.Deprecated <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<EnumOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.EnumOptions_Descriptor()
module EnumOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        EnumOptions._UnknownFields = null
        EnumOptions._Extensions = null
        EnumOptions.AllowAlias = ValueNone
        EnumOptions.Deprecated = ValueNone
        EnumOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        EnumOptions._UnknownFields = null
        EnumOptions._Extensions = null
        EnumOptions.AllowAlias = ValueNone
        EnumOptions.Deprecated = ValueNone
        EnumOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<EnumOptions>(global.System.Func<_>(empty))
    let AllowAliasFieldNumber = 2
    let DeprecatedFieldNumber = 3
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
type EnumValueOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<EnumValueOptions>
    mutable Deprecated: ValueOption<bool>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : EnumValueOptions = {
        EnumValueOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        EnumValueOptions.Deprecated = me.Deprecated
        EnumValueOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Deprecated <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteBool(me.Deprecated.Value)
        me.UninterpretedOption.WriteTo(&output, EnumValueOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Deprecated <> ValueNone then size <- size + 2
        size <- size + me.UninterpretedOption.CalculateSize(EnumValueOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: EnumValueOptions) =
        if other.Deprecated <> ValueNone
        then me.Deprecated <- other.Deprecated
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Deprecated <- ValueSome(input.ReadBool())
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, EnumValueOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDeprecated =
        match me.Deprecated with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDeprecated () = me.Deprecated <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<EnumValueOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.EnumValueOptions_Descriptor()
module EnumValueOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        EnumValueOptions._UnknownFields = null
        EnumValueOptions._Extensions = null
        EnumValueOptions.Deprecated = ValueNone
        EnumValueOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        EnumValueOptions._UnknownFields = null
        EnumValueOptions._Extensions = null
        EnumValueOptions.Deprecated = ValueNone
        EnumValueOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<EnumValueOptions>(global.System.Func<_>(empty))
    let DeprecatedFieldNumber = 1
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
type ServiceOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<ServiceOptions>
    mutable Deprecated: ValueOption<bool>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : ServiceOptions = {
        ServiceOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        ServiceOptions.Deprecated = me.Deprecated
        ServiceOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Deprecated <> ValueNone
        then
            output.WriteRawTag(136uy, 2uy)
            output.WriteBool(me.Deprecated.Value)
        me.UninterpretedOption.WriteTo(&output, ServiceOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Deprecated <> ValueNone then size <- size + 3
        size <- size + me.UninterpretedOption.CalculateSize(ServiceOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: ServiceOptions) =
        if other.Deprecated <> ValueNone
        then me.Deprecated <- other.Deprecated
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 264u ->
                me.Deprecated <- ValueSome(input.ReadBool())
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, ServiceOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDeprecated =
        match me.Deprecated with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDeprecated () = me.Deprecated <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<ServiceOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.ServiceOptions_Descriptor()
module ServiceOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        ServiceOptions._UnknownFields = null
        ServiceOptions._Extensions = null
        ServiceOptions.Deprecated = ValueNone
        ServiceOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        ServiceOptions._UnknownFields = null
        ServiceOptions._Extensions = null
        ServiceOptions.Deprecated = ValueNone
        ServiceOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<ServiceOptions>(global.System.Func<_>(empty))
    let DeprecatedFieldNumber = 33
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
type MethodOptions = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable _Extensions: global.Google.Protobuf.ExtensionSet<MethodOptions>
    mutable Deprecated: ValueOption<bool>
    mutable IdempotencyLevel: ValueOption<global.Google.Protobuf.FSharp.Reflection.MethodOptions.Types.IdempotencyLevel>
    UninterpretedOption: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : MethodOptions = {
        MethodOptions._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        MethodOptions.Deprecated = me.Deprecated
        MethodOptions.IdempotencyLevel = me.IdempotencyLevel
        MethodOptions.UninterpretedOption = me.UninterpretedOption.Clone()
        _Extensions = global.Google.Protobuf.ExtensionSet.Clone(me._Extensions)
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Deprecated <> ValueNone
        then
            output.WriteRawTag(136uy, 2uy)
            output.WriteBool(me.Deprecated.Value)
        if me.IdempotencyLevel <> ValueNone
        then
            output.WriteRawTag(144uy, 2uy)
            output.WriteEnum(int me.IdempotencyLevel.Value)
        me.UninterpretedOption.WriteTo(&output, MethodOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then me._Extensions.WriteTo(&output)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Deprecated <> ValueNone then size <- size + 3
        if me.IdempotencyLevel <> ValueNone then size <- size + 2 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.IdempotencyLevel.Value)
        size <- size + me.UninterpretedOption.CalculateSize(MethodOptions.RepeatedUninterpretedOptionCodec)
        if not <| isNull me._Extensions then size <- size + me._Extensions.CalculateSize()
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: MethodOptions) =
        if other.Deprecated <> ValueNone
        then me.Deprecated <- other.Deprecated
        if other.IdempotencyLevel <> ValueNone
        then me.IdempotencyLevel <- other.IdempotencyLevel
        me.UninterpretedOption.Add(other.UninterpretedOption)
        global.Google.Protobuf.ExtensionSet.MergeFrom(&me._Extensions, other._Extensions)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 264u ->
                me.Deprecated <- ValueSome(input.ReadBool())
            | 272u ->
                me.IdempotencyLevel <- ValueSome(enum(input.ReadEnum()))
            | 7994u ->
                me.UninterpretedOption.AddEntriesFrom(&input, MethodOptions.RepeatedUninterpretedOptionCodec)
            | _ ->
                if not <| global.Google.Protobuf.ExtensionSet.TryMergeFieldFrom(&me._Extensions, &input)
                then me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDeprecated =
        match me.Deprecated with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDeprecated () = me.Deprecated <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasIdempotencyLevel =
        match me.IdempotencyLevel with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearIdempotencyLevel () = me.IdempotencyLevel <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IExtendableMessage<MethodOptions> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.ClearExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Clear(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.Extension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetExtension(extension: global.Google.Protobuf.RepeatedExtension<_,'TValue>) = global.Google.Protobuf.ExtensionSet.Get(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.GetOrInitializeExtension(extension) = global.Google.Protobuf.ExtensionSet.GetOrInitialize(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.HasExtension(extension) = global.Google.Protobuf.ExtensionSet.Has(&me._Extensions, extension)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.SetExtension(extension, value) = global.Google.Protobuf.ExtensionSet.Set(&me._Extensions, extension, value)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.MethodOptions_Descriptor()
module MethodOptions =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        MethodOptions._UnknownFields = null
        MethodOptions._Extensions = null
        MethodOptions.Deprecated = ValueNone
        MethodOptions.IdempotencyLevel = ValueNone
        MethodOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        MethodOptions._UnknownFields = null
        MethodOptions._Extensions = null
        MethodOptions.Deprecated = ValueNone
        MethodOptions.IdempotencyLevel = ValueNone
        MethodOptions.UninterpretedOption = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<MethodOptions>(global.System.Func<_>(empty))
    let DeprecatedFieldNumber = 33
    let IdempotencyLevelFieldNumber = 34
    let UninterpretedOptionFieldNumber = 999
    let RepeatedUninterpretedOptionCodec = global.Google.Protobuf.FieldCodec.ForMessage(7994u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Parser)
    module Types =
        type IdempotencyLevel =
        | [<global.Google.Protobuf.Reflection.OriginalName("IDEMPOTENCY_UNKNOWN")>] IdempotencyUnknown = 0
        | [<global.Google.Protobuf.Reflection.OriginalName("NO_SIDE_EFFECTS")>] NoSideEffects = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("IDEMPOTENT")>] Idempotent = 2
type UninterpretedOption = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    Name: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Types.NamePart>
    mutable IdentifierValue: ValueOption<string>
    mutable PositiveIntValue: ValueOption<uint64>
    mutable NegativeIntValue: ValueOption<int64>
    mutable DoubleValue: ValueOption<float>
    mutable StringValue: ValueOption<global.Google.Protobuf.ByteString>
    mutable AggregateValue: ValueOption<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : UninterpretedOption = {
        UninterpretedOption._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        UninterpretedOption.Name = me.Name.Clone()
        UninterpretedOption.IdentifierValue = me.IdentifierValue
        UninterpretedOption.PositiveIntValue = me.PositiveIntValue
        UninterpretedOption.NegativeIntValue = me.NegativeIntValue
        UninterpretedOption.DoubleValue = me.DoubleValue
        UninterpretedOption.StringValue = me.StringValue
        UninterpretedOption.AggregateValue = me.AggregateValue
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.Name.WriteTo(&output, UninterpretedOption.RepeatedNameCodec)
        if me.IdentifierValue <> ValueNone
        then
            output.WriteRawTag(26uy)
            output.WriteString(me.IdentifierValue.Value)
        if me.PositiveIntValue <> ValueNone
        then
            output.WriteRawTag(32uy)
            output.WriteUInt64(me.PositiveIntValue.Value)
        if me.NegativeIntValue <> ValueNone
        then
            output.WriteRawTag(40uy)
            output.WriteInt64(me.NegativeIntValue.Value)
        if me.DoubleValue <> ValueNone
        then
            output.WriteRawTag(49uy)
            output.WriteDouble(me.DoubleValue.Value)
        if me.StringValue <> ValueNone
        then
            output.WriteRawTag(58uy)
            output.WriteBytes(me.StringValue.Value)
        if me.AggregateValue <> ValueNone
        then
            output.WriteRawTag(66uy)
            output.WriteString(me.AggregateValue.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.Name.CalculateSize(UninterpretedOption.RepeatedNameCodec)
        if me.IdentifierValue <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.IdentifierValue.Value)
        if me.PositiveIntValue <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeUInt64Size(me.PositiveIntValue.Value)
        if me.NegativeIntValue <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt64Size(me.NegativeIntValue.Value)
        if me.DoubleValue <> ValueNone then size <- size + 9
        if me.StringValue <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeBytesSize(me.StringValue.Value)
        if me.AggregateValue <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.AggregateValue.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: UninterpretedOption) =
        me.Name.Add(other.Name)
        if other.IdentifierValue <> ValueNone
        then me.IdentifierValue <- other.IdentifierValue
        if other.PositiveIntValue <> ValueNone
        then me.PositiveIntValue <- other.PositiveIntValue
        if other.NegativeIntValue <> ValueNone
        then me.NegativeIntValue <- other.NegativeIntValue
        if other.DoubleValue <> ValueNone
        then me.DoubleValue <- other.DoubleValue
        if other.StringValue <> ValueNone
        then me.StringValue <- other.StringValue
        if other.AggregateValue <> ValueNone
        then me.AggregateValue <- other.AggregateValue
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 18u ->
                me.Name.AddEntriesFrom(&input, UninterpretedOption.RepeatedNameCodec)
            | 26u ->
                me.IdentifierValue <- ValueSome(input.ReadString())
            | 32u ->
                me.PositiveIntValue <- ValueSome(input.ReadUInt64())
            | 40u ->
                me.NegativeIntValue <- ValueSome(input.ReadInt64())
            | 49u ->
                me.DoubleValue <- ValueSome(input.ReadDouble())
            | 58u ->
                me.StringValue <- ValueSome(input.ReadBytes())
            | 66u ->
                me.AggregateValue <- ValueSome(input.ReadString())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasIdentifierValue =
        match me.IdentifierValue with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearIdentifierValue () = me.IdentifierValue <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasPositiveIntValue =
        match me.PositiveIntValue with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearPositiveIntValue () = me.PositiveIntValue <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasNegativeIntValue =
        match me.NegativeIntValue with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearNegativeIntValue () = me.NegativeIntValue <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasDoubleValue =
        match me.DoubleValue with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearDoubleValue () = me.DoubleValue <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasStringValue =
        match me.StringValue with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearStringValue () = me.StringValue <- ValueNone
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.HasAggregateValue =
        match me.AggregateValue with
        | ValueNone -> false
        | ValueSome(_) -> true
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.ClearAggregateValue () = me.AggregateValue <- ValueNone
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<UninterpretedOption> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.UninterpretedOption_Descriptor()
module UninterpretedOption =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        UninterpretedOption._UnknownFields = null
        UninterpretedOption.Name = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Types.NamePart>()
        UninterpretedOption.IdentifierValue = ValueNone
        UninterpretedOption.PositiveIntValue = ValueNone
        UninterpretedOption.NegativeIntValue = ValueNone
        UninterpretedOption.DoubleValue = ValueNone
        UninterpretedOption.StringValue = ValueNone
        UninterpretedOption.AggregateValue = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        UninterpretedOption._UnknownFields = null
        UninterpretedOption.Name = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Types.NamePart>()
        UninterpretedOption.IdentifierValue = ValueNone
        UninterpretedOption.PositiveIntValue = ValueNone
        UninterpretedOption.NegativeIntValue = ValueNone
        UninterpretedOption.DoubleValue = ValueNone
        UninterpretedOption.StringValue = ValueNone
        UninterpretedOption.AggregateValue = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<UninterpretedOption>(global.System.Func<_>(empty))
    let NameFieldNumber = 2
    let IdentifierValueFieldNumber = 3
    let PositiveIntValueFieldNumber = 4
    let NegativeIntValueFieldNumber = 5
    let DoubleValueFieldNumber = 6
    let StringValueFieldNumber = 7
    let AggregateValueFieldNumber = 8
    let RepeatedNameCodec = global.Google.Protobuf.FieldCodec.ForMessage(18u, global.Google.Protobuf.FSharp.Reflection.UninterpretedOption.Types.NamePart.Parser)
    module Types =
        type NamePart = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            mutable NamePart: ValueOption<string>
            mutable IsExtension: ValueOption<bool>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : NamePart = {
                NamePart._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                NamePart.NamePart = me.NamePart
                NamePart.IsExtension = me.IsExtension
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                if me.NamePart <> ValueNone
                then
                    output.WriteRawTag(10uy)
                    output.WriteString(me.NamePart.Value)
                if me.IsExtension <> ValueNone
                then
                    output.WriteRawTag(16uy)
                    output.WriteBool(me.IsExtension.Value)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                if me.NamePart <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.NamePart.Value)
                if me.IsExtension <> ValueNone then size <- size + 2
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: NamePart) =
                if other.NamePart <> ValueNone
                then me.NamePart <- other.NamePart
                if other.IsExtension <> ValueNone
                then me.IsExtension <- other.IsExtension
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 10u ->
                        me.NamePart <- ValueSome(input.ReadString())
                    | 16u ->
                        me.IsExtension <- ValueSome(input.ReadBool())
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasNamePart =
                match me.NamePart with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearNamePart () = me.NamePart <- ValueNone
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasIsExtension =
                match me.IsExtension with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearIsExtension () = me.IsExtension <- ValueNone
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<NamePart> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.UninterpretedOption_NamePart_Descriptor()
        module NamePart =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                NamePart._UnknownFields = null
                NamePart.NamePart = ValueNone
                NamePart.IsExtension = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                NamePart._UnknownFields = null
                NamePart.NamePart = ValueNone
                NamePart.IsExtension = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<NamePart>(global.System.Func<_>(empty))
            let NamePartFieldNumber = 1
            let IsExtensionFieldNumber = 2
type SourceCodeInfo = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    Location: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.Types.Location>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : SourceCodeInfo = {
        SourceCodeInfo._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        SourceCodeInfo.Location = me.Location.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.Location.WriteTo(&output, SourceCodeInfo.RepeatedLocationCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.Location.CalculateSize(SourceCodeInfo.RepeatedLocationCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: SourceCodeInfo) =
        me.Location.Add(other.Location)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Location.AddEntriesFrom(&input, SourceCodeInfo.RepeatedLocationCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<SourceCodeInfo> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.SourceCodeInfo_Descriptor()
module SourceCodeInfo =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        SourceCodeInfo._UnknownFields = null
        SourceCodeInfo.Location = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.Types.Location>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        SourceCodeInfo._UnknownFields = null
        SourceCodeInfo.Location = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.Types.Location>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<SourceCodeInfo>(global.System.Func<_>(empty))
    let LocationFieldNumber = 1
    let RepeatedLocationCodec = global.Google.Protobuf.FieldCodec.ForMessage(10u, global.Google.Protobuf.FSharp.Reflection.SourceCodeInfo.Types.Location.Parser)
    module Types =
        type Location = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            Path: global.Google.Protobuf.Collections.RepeatedField<int32>
            Span: global.Google.Protobuf.Collections.RepeatedField<int32>
            mutable LeadingComments: ValueOption<string>
            mutable TrailingComments: ValueOption<string>
            LeadingDetachedComments: global.Google.Protobuf.Collections.RepeatedField<string>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : Location = {
                Location._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                Location.Path = me.Path.Clone()
                Location.Span = me.Span.Clone()
                Location.LeadingComments = me.LeadingComments
                Location.TrailingComments = me.TrailingComments
                Location.LeadingDetachedComments = me.LeadingDetachedComments.Clone()
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                me.Path.WriteTo(&output, Location.RepeatedPathCodec)
                me.Span.WriteTo(&output, Location.RepeatedSpanCodec)
                if me.LeadingComments <> ValueNone
                then
                    output.WriteRawTag(26uy)
                    output.WriteString(me.LeadingComments.Value)
                if me.TrailingComments <> ValueNone
                then
                    output.WriteRawTag(34uy)
                    output.WriteString(me.TrailingComments.Value)
                me.LeadingDetachedComments.WriteTo(&output, Location.RepeatedLeadingDetachedCommentsCodec)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                size <- size + me.Path.CalculateSize(Location.RepeatedPathCodec)
                size <- size + me.Span.CalculateSize(Location.RepeatedSpanCodec)
                if me.LeadingComments <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.LeadingComments.Value)
                if me.TrailingComments <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.TrailingComments.Value)
                size <- size + me.LeadingDetachedComments.CalculateSize(Location.RepeatedLeadingDetachedCommentsCodec)
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: Location) =
                me.Path.Add(other.Path)
                me.Span.Add(other.Span)
                if other.LeadingComments <> ValueNone
                then me.LeadingComments <- other.LeadingComments
                if other.TrailingComments <> ValueNone
                then me.TrailingComments <- other.TrailingComments
                me.LeadingDetachedComments.Add(other.LeadingDetachedComments)
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 10u | 8u ->
                        me.Path.AddEntriesFrom(&input, Location.RepeatedPathCodec)
                    | 18u | 16u ->
                        me.Span.AddEntriesFrom(&input, Location.RepeatedSpanCodec)
                    | 26u ->
                        me.LeadingComments <- ValueSome(input.ReadString())
                    | 34u ->
                        me.TrailingComments <- ValueSome(input.ReadString())
                    | 50u ->
                        me.LeadingDetachedComments.AddEntriesFrom(&input, Location.RepeatedLeadingDetachedCommentsCodec)
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasLeadingComments =
                match me.LeadingComments with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearLeadingComments () = me.LeadingComments <- ValueNone
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasTrailingComments =
                match me.TrailingComments with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearTrailingComments () = me.TrailingComments <- ValueNone
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<Location> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.SourceCodeInfo_Location_Descriptor()
        module Location =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                Location._UnknownFields = null
                Location.Path = global.Google.Protobuf.Collections.RepeatedField<int32>()
                Location.Span = global.Google.Protobuf.Collections.RepeatedField<int32>()
                Location.LeadingComments = ValueNone
                Location.TrailingComments = ValueNone
                Location.LeadingDetachedComments = global.Google.Protobuf.Collections.RepeatedField<string>()
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                Location._UnknownFields = null
                Location.Path = global.Google.Protobuf.Collections.RepeatedField<int32>()
                Location.Span = global.Google.Protobuf.Collections.RepeatedField<int32>()
                Location.LeadingComments = ValueNone
                Location.TrailingComments = ValueNone
                Location.LeadingDetachedComments = global.Google.Protobuf.Collections.RepeatedField<string>()
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<Location>(global.System.Func<_>(empty))
            let PathFieldNumber = 1
            let SpanFieldNumber = 2
            let LeadingCommentsFieldNumber = 3
            let TrailingCommentsFieldNumber = 4
            let LeadingDetachedCommentsFieldNumber = 6
            let RepeatedPathCodec = global.Google.Protobuf.FieldCodec.ForInt32(8u)
            let RepeatedSpanCodec = global.Google.Protobuf.FieldCodec.ForInt32(16u)
            let RepeatedLeadingDetachedCommentsCodec = global.Google.Protobuf.FieldCodec.ForString(50u)
type GeneratedCodeInfo = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    Annotation: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.GeneratedCodeInfo.Types.Annotation>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : GeneratedCodeInfo = {
        GeneratedCodeInfo._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        GeneratedCodeInfo.Annotation = me.Annotation.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        me.Annotation.WriteTo(&output, GeneratedCodeInfo.RepeatedAnnotationCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        size <- size + me.Annotation.CalculateSize(GeneratedCodeInfo.RepeatedAnnotationCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: GeneratedCodeInfo) =
        me.Annotation.Add(other.Annotation)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Annotation.AddEntriesFrom(&input, GeneratedCodeInfo.RepeatedAnnotationCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<GeneratedCodeInfo> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.GeneratedCodeInfo_Descriptor()
module GeneratedCodeInfo =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        GeneratedCodeInfo._UnknownFields = null
        GeneratedCodeInfo.Annotation = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.GeneratedCodeInfo.Types.Annotation>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        GeneratedCodeInfo._UnknownFields = null
        GeneratedCodeInfo.Annotation = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.Reflection.GeneratedCodeInfo.Types.Annotation>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<GeneratedCodeInfo>(global.System.Func<_>(empty))
    let AnnotationFieldNumber = 1
    let RepeatedAnnotationCodec = global.Google.Protobuf.FieldCodec.ForMessage(10u, global.Google.Protobuf.FSharp.Reflection.GeneratedCodeInfo.Types.Annotation.Parser)
    module Types =
        type Annotation = {
            mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
            Path: global.Google.Protobuf.Collections.RepeatedField<int32>
            mutable SourceFile: ValueOption<string>
            mutable Begin: ValueOption<int32>
            mutable End: ValueOption<int32>
        } with
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.Clone() : Annotation = {
                Annotation._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
                Annotation.Path = me.Path.Clone()
                Annotation.SourceFile = me.SourceFile
                Annotation.Begin = me.Begin
                Annotation.End = me.End
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
                me.Path.WriteTo(&output, Annotation.RepeatedPathCodec)
                if me.SourceFile <> ValueNone
                then
                    output.WriteRawTag(18uy)
                    output.WriteString(me.SourceFile.Value)
                if me.Begin <> ValueNone
                then
                    output.WriteRawTag(24uy)
                    output.WriteInt32(me.Begin.Value)
                if me.End <> ValueNone
                then
                    output.WriteRawTag(32uy)
                    output.WriteInt32(me.End.Value)
                if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.CalculateSize() =
                let mutable size = 0
                size <- size + me.Path.CalculateSize(Annotation.RepeatedPathCodec)
                if me.SourceFile <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.SourceFile.Value)
                if me.Begin <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Begin.Value)
                if me.End <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.End.Value)
                if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
                size
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.MergeFrom(other: Annotation) =
                me.Path.Add(other.Path)
                if other.SourceFile <> ValueNone
                then me.SourceFile <- other.SourceFile
                if other.Begin <> ValueNone
                then me.Begin <- other.Begin
                if other.End <> ValueNone
                then me.End <- other.End
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
                let mutable tag = input.ReadTag()
                while tag <> 0u do
                    match tag with
                    | 10u | 8u ->
                        me.Path.AddEntriesFrom(&input, Annotation.RepeatedPathCodec)
                    | 18u ->
                        me.SourceFile <- ValueSome(input.ReadString())
                    | 24u ->
                        me.Begin <- ValueSome(input.ReadInt32())
                    | 32u ->
                        me.End <- ValueSome(input.ReadInt32())
                    | _ ->
                        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
                    tag <- input.ReadTag()
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasSourceFile =
                match me.SourceFile with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearSourceFile () = me.SourceFile <- ValueNone
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasBegin =
                match me.Begin with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearBegin () = me.Begin <- ValueNone
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.HasEnd =
                match me.End with
                | ValueNone -> false
                | ValueSome(_) -> true
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            member me.ClearEnd () = me.End <- ValueNone
            interface global.Google.Protobuf.IBufferMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
            interface global.Google.Protobuf.IMessage<Annotation> with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.Clone() = me.Clone()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(other) = me.MergeFrom(other)
            interface global.Google.Protobuf.IMessage with
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.CalculateSize() = me.CalculateSize()
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.MergeFrom(input) = input.ReadRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member me.WriteTo(output) = output.WriteRawMessage(me)
                [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
                member __.Descriptor = global.Google.Protobuf.FSharp.Reflection.DescriptorReflection.GeneratedCodeInfo_Annotation_Descriptor()
        module Annotation =
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let internal DefaultValue = {
                Annotation._UnknownFields = null
                Annotation.Path = global.Google.Protobuf.Collections.RepeatedField<int32>()
                Annotation.SourceFile = ValueNone
                Annotation.Begin = ValueNone
                Annotation.End = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let empty () = {
                Annotation._UnknownFields = null
                Annotation.Path = global.Google.Protobuf.Collections.RepeatedField<int32>()
                Annotation.SourceFile = ValueNone
                Annotation.Begin = ValueNone
                Annotation.End = ValueNone
            }
            [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
            let Parser = global.Google.Protobuf.MessageParser<Annotation>(global.System.Func<_>(empty))
            let PathFieldNumber = 1
            let SourceFileFieldNumber = 2
            let BeginFieldNumber = 3
            let EndFieldNumber = 4
            let RepeatedPathCodec = global.Google.Protobuf.FieldCodec.ForInt32(8u)
// End of auto-generated code
