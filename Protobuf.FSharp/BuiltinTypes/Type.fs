// <auto-generated>
//     Generated by the F# GRPC code generator. DO NOT EDIT!
//     source: google/protobuf/type.proto
// </auto-generated>
namespace rec Google.Protobuf.FSharp.WellKnownTypes
#nowarn "40"
module TypeReflection =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Type_Descriptor() = Descriptor().MessageTypes.[0]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Field_Descriptor() = Descriptor().MessageTypes.[1]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Enum_Descriptor() = Descriptor().MessageTypes.[2]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal EnumValue_Descriptor() = Descriptor().MessageTypes.[3]
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal Option_Descriptor() = Descriptor().MessageTypes.[4]
    let private descriptorBackingField: global.System.Lazy<global.Google.Protobuf.Reflection.FileDescriptor> =
        let descriptorData = global.System.Convert.FromBase64String("\
            Chpnb29nbGUvcHJvdG9idWYvdHlwZS5wcm90bxIPZ29vZ2xlLnByb3RvYnVmGhlnb29nbGUvcHJvdG9i\
            dWYvYW55LnByb3RvGiRnb29nbGUvcHJvdG9idWYvc291cmNlX2NvbnRleHQucHJvdG8ijQIKBFR5cGUS\
            EgoEbmFtZRgBIAEoCVIEbmFtZRIuCgZmaWVsZHMYAiADKAsyFi5nb29nbGUucHJvdG9idWYuRmllbGRS\
            BmZpZWxkcxIWCgZvbmVvZnMYAyADKAlSBm9uZW9mcxIxCgdvcHRpb25zGAQgAygLMhcuZ29vZ2xlLnBy\
            b3RvYnVmLk9wdGlvblIHb3B0aW9ucxJFCg5zb3VyY2VfY29udGV4dBgFIAEoCzIeLmdvb2dsZS5wcm90\
            b2J1Zi5Tb3VyY2VDb250ZXh0Ug1zb3VyY2VDb250ZXh0Ei8KBnN5bnRheBgGIAEoDjIXLmdvb2dsZS5w\
            cm90b2J1Zi5TeW50YXhSBnN5bnRheCK0BgoFRmllbGQSLwoEa2luZBgBIAEoDjIbLmdvb2dsZS5wcm90\
            b2J1Zi5GaWVsZC5LaW5kUgRraW5kEkQKC2NhcmRpbmFsaXR5GAIgASgOMiIuZ29vZ2xlLnByb3RvYnVm\
            LkZpZWxkLkNhcmRpbmFsaXR5UgtjYXJkaW5hbGl0eRIWCgZudW1iZXIYAyABKAVSBm51bWJlchISCgRu\
            YW1lGAQgASgJUgRuYW1lEhkKCHR5cGVfdXJsGAYgASgJUgd0eXBlVXJsEh8KC29uZW9mX2luZGV4GAcg\
            ASgFUgpvbmVvZkluZGV4EhYKBnBhY2tlZBgIIAEoCFIGcGFja2VkEjEKB29wdGlvbnMYCSADKAsyFy5n\
            b29nbGUucHJvdG9idWYuT3B0aW9uUgdvcHRpb25zEhsKCWpzb25fbmFtZRgKIAEoCVIIanNvbk5hbWUS\
            IwoNZGVmYXVsdF92YWx1ZRgLIAEoCVIMZGVmYXVsdFZhbHVlIsgCCgRLaW5kEhAKDFRZUEVfVU5LTk9X\
            ThAAEg8KC1RZUEVfRE9VQkxFEAESDgoKVFlQRV9GTE9BVBACEg4KClRZUEVfSU5UNjQQAxIPCgtUWVBF\
            X1VJTlQ2NBAEEg4KClRZUEVfSU5UMzIQBRIQCgxUWVBFX0ZJWEVENjQQBhIQCgxUWVBFX0ZJWEVEMzIQ\
            BxINCglUWVBFX0JPT0wQCBIPCgtUWVBFX1NUUklORxAJEg4KClRZUEVfR1JPVVAQChIQCgxUWVBFX01F\
            U1NBR0UQCxIOCgpUWVBFX0JZVEVTEAwSDwoLVFlQRV9VSU5UMzIQDRINCglUWVBFX0VOVU0QDhIRCg1U\
            WVBFX1NGSVhFRDMyEA8SEQoNVFlQRV9TRklYRUQ2NBAQEg8KC1RZUEVfU0lOVDMyEBESDwoLVFlQRV9T\
            SU5UNjQQEiJ0CgtDYXJkaW5hbGl0eRIXChNDQVJESU5BTElUWV9VTktOT1dOEAASGAoUQ0FSRElOQUxJ\
            VFlfT1BUSU9OQUwQARIYChRDQVJESU5BTElUWV9SRVFVSVJFRBACEhgKFENBUkRJTkFMSVRZX1JFUEVB\
            VEVEEAMi/wEKBEVudW0SEgoEbmFtZRgBIAEoCVIEbmFtZRI4CgllbnVtdmFsdWUYAiADKAsyGi5nb29n\
            bGUucHJvdG9idWYuRW51bVZhbHVlUgllbnVtdmFsdWUSMQoHb3B0aW9ucxgDIAMoCzIXLmdvb2dsZS5w\
            cm90b2J1Zi5PcHRpb25SB29wdGlvbnMSRQoOc291cmNlX2NvbnRleHQYBCABKAsyHi5nb29nbGUucHJv\
            dG9idWYuU291cmNlQ29udGV4dFINc291cmNlQ29udGV4dBIvCgZzeW50YXgYBSABKA4yFy5nb29nbGUu\
            cHJvdG9idWYuU3ludGF4UgZzeW50YXgiagoJRW51bVZhbHVlEhIKBG5hbWUYASABKAlSBG5hbWUSFgoG\
            bnVtYmVyGAIgASgFUgZudW1iZXISMQoHb3B0aW9ucxgDIAMoCzIXLmdvb2dsZS5wcm90b2J1Zi5PcHRp\
            b25SB29wdGlvbnMiSAoGT3B0aW9uEhIKBG5hbWUYASABKAlSBG5hbWUSKgoFdmFsdWUYAiABKAsyFC5n\
            b29nbGUucHJvdG9idWYuQW55UgV2YWx1ZSouCgZTeW50YXgSEQoNU1lOVEFYX1BST1RPMhAAEhEKDVNZ\
            TlRBWF9QUk9UTzMQAUJ7ChNjb20uZ29vZ2xlLnByb3RvYnVmQglUeXBlUHJvdG9QAVotZ29vZ2xlLmdv\
            bGFuZy5vcmcvcHJvdG9idWYvdHlwZXMva25vd24vdHlwZXBi+AEBogIDR1BCqgIeR29vZ2xlLlByb3Rv\
            YnVmLldlbGxLbm93blR5cGVzYgZwcm90bzM=")
        global.System.Lazy<_>(
            (fun () ->
                global.Google.Protobuf.Reflection.FileDescriptor.FromGeneratedCode(
                    descriptorData,
                    [|
                        global.Google.Protobuf.FSharp.WellKnownTypes.AnyReflection.Descriptor()
                        global.Google.Protobuf.FSharp.WellKnownTypes.SourceContextReflection.Descriptor()
                    |],
                    new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(
                        [|
                            typeof<global.Google.Protobuf.FSharp.WellKnownTypes.Syntax>
                        |],
                        null,
                        [|
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.WellKnownTypes.Type>, global.Google.Protobuf.FSharp.WellKnownTypes.Type.Parser, [| "Name"; "Fields"; "Oneofs"; "Options"; "SourceContext"; "Syntax" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.WellKnownTypes.Field>, global.Google.Protobuf.FSharp.WellKnownTypes.Field.Parser, [| "Kind"; "Cardinality"; "Number"; "Name"; "TypeUrl"; "OneofIndex"; "Packed"; "Options"; "JsonName"; "DefaultValue" |], null, [| typeof<global.Google.Protobuf.FSharp.WellKnownTypes.Field.Types.Kind>; typeof<global.Google.Protobuf.FSharp.WellKnownTypes.Field.Types.Cardinality> |], null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.WellKnownTypes.Enum>, global.Google.Protobuf.FSharp.WellKnownTypes.Enum.Parser, [| "Name"; "Enumvalue"; "Options"; "SourceContext"; "Syntax" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.WellKnownTypes.EnumValue>, global.Google.Protobuf.FSharp.WellKnownTypes.EnumValue.Parser, [| "Name"; "Number"; "Options" |], null, null, null, null)
                            new global.Google.Protobuf.Reflection.GeneratedClrTypeInfo(typeof<global.Google.Protobuf.FSharp.WellKnownTypes.Option>, global.Google.Protobuf.FSharp.WellKnownTypes.Option.Parser, [| "Name"; "Value" |], null, null, null, null)
                        |]
                    )
                )
            ),
            true
        )
    let Descriptor(): global.Google.Protobuf.Reflection.FileDescriptor = descriptorBackingField.Value
type Syntax =
| [<global.Google.Protobuf.Reflection.OriginalName("SYNTAX_PROTO2")>] Proto2 = 0
| [<global.Google.Protobuf.Reflection.OriginalName("SYNTAX_PROTO3")>] Proto3 = 1
type Type = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    Fields: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Field>
    Oneofs: global.Google.Protobuf.Collections.RepeatedField<string>
    Options: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>
    mutable SourceContext: ValueOption<global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext>
    mutable Syntax: ValueOption<global.Google.Protobuf.FSharp.WellKnownTypes.Syntax>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Type = {
        Type._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Type.Name = me.Name
        Type.Fields = me.Fields.Clone()
        Type.Oneofs = me.Oneofs.Clone()
        Type.Options = me.Options.Clone()
        Type.SourceContext = me.SourceContext |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext>).Clone())
        Type.Syntax = me.Syntax
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        me.Fields.WriteTo(&output, Type.RepeatedFieldsCodec)
        me.Oneofs.WriteTo(&output, Type.RepeatedOneofsCodec)
        me.Options.WriteTo(&output, Type.RepeatedOptionsCodec)
        if me.SourceContext <> ValueNone
        then
            output.WriteRawTag(42uy)
            output.WriteMessage(me.SourceContext.Value)
        if me.Syntax <> ValueNone
        then
            output.WriteRawTag(48uy)
            output.WriteEnum(int me.Syntax.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        size <- size + me.Fields.CalculateSize(Type.RepeatedFieldsCodec)
        size <- size + me.Oneofs.CalculateSize(Type.RepeatedOneofsCodec)
        size <- size + me.Options.CalculateSize(Type.RepeatedOptionsCodec)
        if me.SourceContext <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.SourceContext.Value)
        if me.Syntax <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Syntax.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Type) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        me.Fields.Add(other.Fields)
        me.Oneofs.Add(other.Oneofs)
        me.Options.Add(other.Options)
        if other.SourceContext <> ValueNone
        then
            if me.SourceContext.IsNone
            then me.SourceContext <- ValueSome(global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext.empty())
            (me.SourceContext.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext>).MergeFrom(other.SourceContext.Value)
        if other.Syntax <> ValueNone
        then me.Syntax <- other.Syntax
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                me.Fields.AddEntriesFrom(&input, Type.RepeatedFieldsCodec)
            | 26u ->
                me.Oneofs.AddEntriesFrom(&input, Type.RepeatedOneofsCodec)
            | 34u ->
                me.Options.AddEntriesFrom(&input, Type.RepeatedOptionsCodec)
            | 42u ->
                if me.SourceContext.IsNone
                then me.SourceContext <- ValueSome(global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext.empty())
                input.ReadMessage(me.SourceContext.Value)
            | 48u ->
                me.Syntax <- ValueSome(enum(input.ReadEnum()))
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Type> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.WellKnownTypes.TypeReflection.Type_Descriptor()
module Type =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Type._UnknownFields = null
        Type.Name = ValueNone
        Type.Fields = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Field>()
        Type.Oneofs = global.Google.Protobuf.Collections.RepeatedField<string>()
        Type.Options = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>()
        Type.SourceContext = ValueNone
        Type.Syntax = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Type._UnknownFields = null
        Type.Name = ValueNone
        Type.Fields = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Field>()
        Type.Oneofs = global.Google.Protobuf.Collections.RepeatedField<string>()
        Type.Options = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>()
        Type.SourceContext = ValueNone
        Type.Syntax = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Type>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let FieldsFieldNumber = 2
    let OneofsFieldNumber = 3
    let OptionsFieldNumber = 4
    let SourceContextFieldNumber = 5
    let SyntaxFieldNumber = 6
    let RepeatedFieldsCodec = global.Google.Protobuf.FieldCodec.ForMessage(18u, global.Google.Protobuf.FSharp.WellKnownTypes.Field.Parser)
    let RepeatedOneofsCodec = global.Google.Protobuf.FieldCodec.ForString(26u)
    let RepeatedOptionsCodec = global.Google.Protobuf.FieldCodec.ForMessage(34u, global.Google.Protobuf.FSharp.WellKnownTypes.Option.Parser)
type Field = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Kind: ValueOption<global.Google.Protobuf.FSharp.WellKnownTypes.Field.Types.Kind>
    mutable Cardinality: ValueOption<global.Google.Protobuf.FSharp.WellKnownTypes.Field.Types.Cardinality>
    mutable Number: ValueOption<int32>
    mutable Name: ValueOption<string>
    mutable TypeUrl: ValueOption<string>
    mutable OneofIndex: ValueOption<int32>
    mutable Packed: ValueOption<bool>
    Options: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>
    mutable JsonName: ValueOption<string>
    mutable DefaultValue: ValueOption<string>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Field = {
        Field._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Field.Kind = me.Kind
        Field.Cardinality = me.Cardinality
        Field.Number = me.Number
        Field.Name = me.Name
        Field.TypeUrl = me.TypeUrl
        Field.OneofIndex = me.OneofIndex
        Field.Packed = me.Packed
        Field.Options = me.Options.Clone()
        Field.JsonName = me.JsonName
        Field.DefaultValue = me.DefaultValue
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Kind <> ValueNone
        then
            output.WriteRawTag(8uy)
            output.WriteEnum(int me.Kind.Value)
        if me.Cardinality <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteEnum(int me.Cardinality.Value)
        if me.Number <> ValueNone
        then
            output.WriteRawTag(24uy)
            output.WriteInt32(me.Number.Value)
        if me.Name <> ValueNone
        then
            output.WriteRawTag(34uy)
            output.WriteString(me.Name.Value)
        if me.TypeUrl <> ValueNone
        then
            output.WriteRawTag(50uy)
            output.WriteString(me.TypeUrl.Value)
        if me.OneofIndex <> ValueNone
        then
            output.WriteRawTag(56uy)
            output.WriteInt32(me.OneofIndex.Value)
        if me.Packed <> ValueNone
        then
            output.WriteRawTag(64uy)
            output.WriteBool(me.Packed.Value)
        me.Options.WriteTo(&output, Field.RepeatedOptionsCodec)
        if me.JsonName <> ValueNone
        then
            output.WriteRawTag(82uy)
            output.WriteString(me.JsonName.Value)
        if me.DefaultValue <> ValueNone
        then
            output.WriteRawTag(90uy)
            output.WriteString(me.DefaultValue.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Kind <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Kind.Value)
        if me.Cardinality <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Cardinality.Value)
        if me.Number <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Number.Value)
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        if me.TypeUrl <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.TypeUrl.Value)
        if me.OneofIndex <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.OneofIndex.Value)
        if me.Packed <> ValueNone then size <- size + 2
        size <- size + me.Options.CalculateSize(Field.RepeatedOptionsCodec)
        if me.JsonName <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.JsonName.Value)
        if me.DefaultValue <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.DefaultValue.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Field) =
        if other.Kind <> ValueNone
        then me.Kind <- other.Kind
        if other.Cardinality <> ValueNone
        then me.Cardinality <- other.Cardinality
        if other.Number <> ValueNone
        then me.Number <- other.Number
        if other.Name <> ValueNone
        then me.Name <- other.Name
        if other.TypeUrl <> ValueNone
        then me.TypeUrl <- other.TypeUrl
        if other.OneofIndex <> ValueNone
        then me.OneofIndex <- other.OneofIndex
        if other.Packed <> ValueNone
        then me.Packed <- other.Packed
        me.Options.Add(other.Options)
        if other.JsonName <> ValueNone
        then me.JsonName <- other.JsonName
        if other.DefaultValue <> ValueNone
        then me.DefaultValue <- other.DefaultValue
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 8u ->
                me.Kind <- ValueSome(enum(input.ReadEnum()))
            | 16u ->
                me.Cardinality <- ValueSome(enum(input.ReadEnum()))
            | 24u ->
                me.Number <- ValueSome(input.ReadInt32())
            | 34u ->
                me.Name <- ValueSome(input.ReadString())
            | 50u ->
                me.TypeUrl <- ValueSome(input.ReadString())
            | 56u ->
                me.OneofIndex <- ValueSome(input.ReadInt32())
            | 64u ->
                me.Packed <- ValueSome(input.ReadBool())
            | 74u ->
                me.Options.AddEntriesFrom(&input, Field.RepeatedOptionsCodec)
            | 82u ->
                me.JsonName <- ValueSome(input.ReadString())
            | 90u ->
                me.DefaultValue <- ValueSome(input.ReadString())
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Field> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.WellKnownTypes.TypeReflection.Field_Descriptor()
module Field =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Field._UnknownFields = null
        Field.Kind = ValueNone
        Field.Cardinality = ValueNone
        Field.Number = ValueNone
        Field.Name = ValueNone
        Field.TypeUrl = ValueNone
        Field.OneofIndex = ValueNone
        Field.Packed = ValueNone
        Field.Options = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>()
        Field.JsonName = ValueNone
        Field.DefaultValue = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Field._UnknownFields = null
        Field.Kind = ValueNone
        Field.Cardinality = ValueNone
        Field.Number = ValueNone
        Field.Name = ValueNone
        Field.TypeUrl = ValueNone
        Field.OneofIndex = ValueNone
        Field.Packed = ValueNone
        Field.Options = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>()
        Field.JsonName = ValueNone
        Field.DefaultValue = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Field>(global.System.Func<_>(empty))
    let KindFieldNumber = 1
    let CardinalityFieldNumber = 2
    let NumberFieldNumber = 3
    let NameFieldNumber = 4
    let TypeUrlFieldNumber = 6
    let OneofIndexFieldNumber = 7
    let PackedFieldNumber = 8
    let OptionsFieldNumber = 9
    let JsonNameFieldNumber = 10
    let DefaultValueFieldNumber = 11
    let RepeatedOptionsCodec = global.Google.Protobuf.FieldCodec.ForMessage(74u, global.Google.Protobuf.FSharp.WellKnownTypes.Option.Parser)
    module Types =
        type Kind =
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_UNKNOWN")>] TypeUnknown = 0
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_DOUBLE")>] TypeDouble = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_FLOAT")>] TypeFloat = 2
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_INT64")>] TypeInt64 = 3
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_UINT64")>] TypeUint64 = 4
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_INT32")>] TypeInt32 = 5
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_FIXED64")>] TypeFixed64 = 6
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_FIXED32")>] TypeFixed32 = 7
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_BOOL")>] TypeBool = 8
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_STRING")>] TypeString = 9
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_GROUP")>] TypeGroup = 10
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_MESSAGE")>] TypeMessage = 11
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_BYTES")>] TypeBytes = 12
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_UINT32")>] TypeUint32 = 13
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_ENUM")>] TypeEnum = 14
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_SFIXED32")>] TypeSfixed32 = 15
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_SFIXED64")>] TypeSfixed64 = 16
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_SINT32")>] TypeSint32 = 17
        | [<global.Google.Protobuf.Reflection.OriginalName("TYPE_SINT64")>] TypeSint64 = 18
        type Cardinality =
        | [<global.Google.Protobuf.Reflection.OriginalName("CARDINALITY_UNKNOWN")>] Unknown = 0
        | [<global.Google.Protobuf.Reflection.OriginalName("CARDINALITY_OPTIONAL")>] Optional = 1
        | [<global.Google.Protobuf.Reflection.OriginalName("CARDINALITY_REQUIRED")>] Required = 2
        | [<global.Google.Protobuf.Reflection.OriginalName("CARDINALITY_REPEATED")>] Repeated = 3
type Enum = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    Enumvalue: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.EnumValue>
    Options: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>
    mutable SourceContext: ValueOption<global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext>
    mutable Syntax: ValueOption<global.Google.Protobuf.FSharp.WellKnownTypes.Syntax>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Enum = {
        Enum._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Enum.Name = me.Name
        Enum.Enumvalue = me.Enumvalue.Clone()
        Enum.Options = me.Options.Clone()
        Enum.SourceContext = me.SourceContext |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext>).Clone())
        Enum.Syntax = me.Syntax
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        me.Enumvalue.WriteTo(&output, Enum.RepeatedEnumvalueCodec)
        me.Options.WriteTo(&output, Enum.RepeatedOptionsCodec)
        if me.SourceContext <> ValueNone
        then
            output.WriteRawTag(34uy)
            output.WriteMessage(me.SourceContext.Value)
        if me.Syntax <> ValueNone
        then
            output.WriteRawTag(40uy)
            output.WriteEnum(int me.Syntax.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        size <- size + me.Enumvalue.CalculateSize(Enum.RepeatedEnumvalueCodec)
        size <- size + me.Options.CalculateSize(Enum.RepeatedOptionsCodec)
        if me.SourceContext <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.SourceContext.Value)
        if me.Syntax <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeEnumSize(int me.Syntax.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Enum) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        me.Enumvalue.Add(other.Enumvalue)
        me.Options.Add(other.Options)
        if other.SourceContext <> ValueNone
        then
            if me.SourceContext.IsNone
            then me.SourceContext <- ValueSome(global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext.empty())
            (me.SourceContext.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext>).MergeFrom(other.SourceContext.Value)
        if other.Syntax <> ValueNone
        then me.Syntax <- other.Syntax
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                me.Enumvalue.AddEntriesFrom(&input, Enum.RepeatedEnumvalueCodec)
            | 26u ->
                me.Options.AddEntriesFrom(&input, Enum.RepeatedOptionsCodec)
            | 34u ->
                if me.SourceContext.IsNone
                then me.SourceContext <- ValueSome(global.Google.Protobuf.FSharp.WellKnownTypes.SourceContext.empty())
                input.ReadMessage(me.SourceContext.Value)
            | 40u ->
                me.Syntax <- ValueSome(enum(input.ReadEnum()))
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Enum> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.WellKnownTypes.TypeReflection.Enum_Descriptor()
module Enum =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Enum._UnknownFields = null
        Enum.Name = ValueNone
        Enum.Enumvalue = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.EnumValue>()
        Enum.Options = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>()
        Enum.SourceContext = ValueNone
        Enum.Syntax = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Enum._UnknownFields = null
        Enum.Name = ValueNone
        Enum.Enumvalue = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.EnumValue>()
        Enum.Options = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>()
        Enum.SourceContext = ValueNone
        Enum.Syntax = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Enum>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let EnumvalueFieldNumber = 2
    let OptionsFieldNumber = 3
    let SourceContextFieldNumber = 4
    let SyntaxFieldNumber = 5
    let RepeatedEnumvalueCodec = global.Google.Protobuf.FieldCodec.ForMessage(18u, global.Google.Protobuf.FSharp.WellKnownTypes.EnumValue.Parser)
    let RepeatedOptionsCodec = global.Google.Protobuf.FieldCodec.ForMessage(26u, global.Google.Protobuf.FSharp.WellKnownTypes.Option.Parser)
type EnumValue = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    mutable Number: ValueOption<int32>
    Options: global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : EnumValue = {
        EnumValue._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        EnumValue.Name = me.Name
        EnumValue.Number = me.Number
        EnumValue.Options = me.Options.Clone()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        if me.Number <> ValueNone
        then
            output.WriteRawTag(16uy)
            output.WriteInt32(me.Number.Value)
        me.Options.WriteTo(&output, EnumValue.RepeatedOptionsCodec)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        if me.Number <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeInt32Size(me.Number.Value)
        size <- size + me.Options.CalculateSize(EnumValue.RepeatedOptionsCodec)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: EnumValue) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        if other.Number <> ValueNone
        then me.Number <- other.Number
        me.Options.Add(other.Options)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 16u ->
                me.Number <- ValueSome(input.ReadInt32())
            | 26u ->
                me.Options.AddEntriesFrom(&input, EnumValue.RepeatedOptionsCodec)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<EnumValue> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.WellKnownTypes.TypeReflection.EnumValue_Descriptor()
module EnumValue =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        EnumValue._UnknownFields = null
        EnumValue.Name = ValueNone
        EnumValue.Number = ValueNone
        EnumValue.Options = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        EnumValue._UnknownFields = null
        EnumValue.Name = ValueNone
        EnumValue.Number = ValueNone
        EnumValue.Options = global.Google.Protobuf.Collections.RepeatedField<global.Google.Protobuf.FSharp.WellKnownTypes.Option>()
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<EnumValue>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let NumberFieldNumber = 2
    let OptionsFieldNumber = 3
    let RepeatedOptionsCodec = global.Google.Protobuf.FieldCodec.ForMessage(26u, global.Google.Protobuf.FSharp.WellKnownTypes.Option.Parser)
type Option = {
    mutable _UnknownFields: global.Google.Protobuf.UnknownFieldSet
    mutable Name: ValueOption<string>
    mutable Value: ValueOption<global.Google.Protobuf.FSharp.WellKnownTypes.Any>
} with
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member me.Clone() : Option = {
        Option._UnknownFields = global.Google.Protobuf.UnknownFieldSet.Clone(me._UnknownFields)
        Option.Name = me.Name
        Option.Value = me.Value |> global.Microsoft.FSharp.Core.ValueOption.map (fun x -> (x :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.WellKnownTypes.Any>).Clone())
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalWriteTo(output: byref<global.Google.Protobuf.WriteContext>) =
        if me.Name <> ValueNone
        then
            output.WriteRawTag(10uy)
            output.WriteString(me.Name.Value)
        if me.Value <> ValueNone
        then
            output.WriteRawTag(18uy)
            output.WriteMessage(me.Value.Value)
        if not <| isNull me._UnknownFields then me._UnknownFields.WriteTo(&output)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.CalculateSize() =
        let mutable size = 0
        if me.Name <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeStringSize(me.Name.Value)
        if me.Value <> ValueNone then size <- size + 1 + global.Google.Protobuf.CodedOutputStream.ComputeMessageSize(me.Value.Value)
        if not <| isNull me._UnknownFields then size <- size + me._UnknownFields.CalculateSize()
        size
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.MergeFrom(other: Option) =
        if other.Name <> ValueNone
        then me.Name <- other.Name
        if other.Value <> ValueNone
        then
            if me.Value.IsNone
            then me.Value <- ValueSome(global.Google.Protobuf.FSharp.WellKnownTypes.Any.empty())
            (me.Value.Value :> global.Google.Protobuf.IMessage<global.Google.Protobuf.FSharp.WellKnownTypes.Any>).MergeFrom(other.Value.Value)
        me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFrom(me._UnknownFields, other._UnknownFields)
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member private me.InternalMergeFrom(input: byref<global.Google.Protobuf.ParseContext>) =
        let mutable tag = input.ReadTag()
        while tag <> 0u do
            match tag with
            | 10u ->
                me.Name <- ValueSome(input.ReadString())
            | 18u ->
                if me.Value.IsNone
                then me.Value <- ValueSome(global.Google.Protobuf.FSharp.WellKnownTypes.Any.empty())
                input.ReadMessage(me.Value.Value)
            | _ ->
                me._UnknownFields <- global.Google.Protobuf.UnknownFieldSet.MergeFieldFrom(me._UnknownFields, &input)
            tag <- input.ReadTag()
    interface global.Google.Protobuf.IBufferMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalMergeFrom(ctx) = me.InternalMergeFrom(&ctx)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.InternalWriteTo(ctx) = me.InternalWriteTo(&ctx)
    interface global.Google.Protobuf.IMessage<Option> with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.Clone() = me.Clone()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(other) = me.MergeFrom(other)
    interface global.Google.Protobuf.IMessage with
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.CalculateSize() = me.CalculateSize()
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.MergeFrom(input) = input.ReadRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member me.WriteTo(output) = output.WriteRawMessage(me)
        [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
        member __.Descriptor = global.Google.Protobuf.FSharp.WellKnownTypes.TypeReflection.Option_Descriptor()
module Option =
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let internal DefaultValue = {
        Option._UnknownFields = null
        Option.Name = ValueNone
        Option.Value = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let empty () = {
        Option._UnknownFields = null
        Option.Name = ValueNone
        Option.Value = ValueNone
    }
    [<global.System.Diagnostics.DebuggerNonUserCodeAttribute>]
    let Parser = global.Google.Protobuf.MessageParser<Option>(global.System.Func<_>(empty))
    let NameFieldNumber = 1
    let ValueFieldNumber = 2
// End of auto-generated code
